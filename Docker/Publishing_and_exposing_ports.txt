Docker. Publishing and exposing ports

[sources:]
1) https://docs.docker.com/get-started/docker-concepts/running-containers/publishing-ports/
2) "Dockerfile reference.EXPOSE": https://docs.docker.com/reference/dockerfile/#expose


Контейнеры обеспечивают изолированные процессы для каждого компонента приложения.
Мы не можем получить прямой доступ к отдельным службам/частям приложения, запущенным в контейнере.

**********************
* Публикация  портов *
*  Publishing ports  *
**********************

  Публикация порта дает возможность преодолеть некоторую сетевую изоляцию, установив правило переадресации.
  Публикация портов происходит во время создания контейнера с помощью флага -p (или --publish) в docker run.
  Синтаксис: -p (||--publish) HOST_PORT:CONTAINER_PORT

#(!) флаг -P = для публикации всех открытых (exposed) портов и их отображения на порты высокого порядка.

---
Когда порт опубликован, он по умолчанию публикуется НА ВСЕХ СЕТЕВЫХ ИНТЕРФЕЙСАХ.
Это означает, что любой трафик, поступающий на ваш компьютер, может получить доступ к опубликованному приложению.
[!] Будьте осторожны при публикации баз данных или любой конфиденциальной информации!
Подробнее об опубликованных портах можно узнать здесь:
-> https://docs.docker.com/engine/network/#published-ports

Если вы укажете IP-адрес localhost (127.0.0.1, или ::1) с флагом publish,
только хост Docker и его контейнеры смогут получить доступ к опубликованному порту контейнера.

-p 192.168.1.100:8080:80    # = Map port 8080 on the Docker host IP 192.168.1.100 to TCP port 80 in the container.
---


* Публикация на эфемерных портах *
*  *

(*) Эфемерный - скоропреходящий, непрочный, мимолётный, временный;
              - мнимый, воображаемый, призрачный.

(*) Если требуется опубликовать порт, но не заботиться о том, какой порт используется на хосте:
    В таких случаях вы можете позволить Docker выбрать порт за вас.
    Для этого просто опустите конфигурацию HOST_PORT.
---
docker run -p 80 nginx
---
# команда опубликует порт 80 контейнера на эфемерный порт хоста

  При создании образа контейнера инструкция EXPOSE используется для УКАЗАНИЯ того, что упакованное приложение будет использовать указанный порт.
  По умолчанию эти порты НЕ ПУБЛИКУЮТСЯ.
  EXPOSE функционирует как тип документации между тем, кто создает образ, и тем, кто запускает контейнер,
  о том, какие порты должны быть опубликованы.

[!] Команда docker network поддерживает создание сетей для связи между контейнерами без необходимости раскрытия или публикации определенных портов,
    поскольку контейнеры, подключенные к сети, могут общаться друг с другом через любой порт.
## подробнее: "Networking overview": https://docs.docker.com/engine/network/
*********************
* Dockerfile.EXPOSE *
*********************

EXPOSE <port> [<port>/<protocol>...]

  Инструкция EXPOSE сообщает Docker, что контейнер прослушивает указанные сетевые порты во время выполнения.
  Вы можете указать, прослушивает ли порт TCP (по умолчанию, если не указан протокол) или UDP.

  Инструкция EXPOSE на самом деле не публикует порт.
  По умолчанию EXPOSE предполагает использование TCP. Вы также можете указать UDP:
---
EXPOSE 80/tcp
EXPOSE 80/udp
---
