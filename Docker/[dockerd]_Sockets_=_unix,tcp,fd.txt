Use the Docker command line
[sources: https://docs.docker.com/engine/reference/commandline/cli/]

[main:]
  "dockerd": https://docs.docker.com/reference/cli/dockerd/

[more:]
  "Configure remote access for Docker daemon": https://docs.docker.com/engine/daemon/remote-access/
  "OCI Runtime Specification": https://github.com/opencontainers/runtime-spec

dockerd. Daemon socket option
(https://docs.docker.com/reference/cli/dockerd/#daemon-socket-option)

  Демон Docker может прослушивать запросы API Docker Engine через три различных типа сокетов:
    ✓ unix,
    ✓ tcp
    ✓ fd.

  ПО УМОЛЧАНИЮ сокет домена unix (или IPC-сокет) создается по адресу:
-->
/var/run/docker.sock
<--

  для чего требуется
    ● либо право root,
    ● либо членство в группе docker.

[!] Если вам нужно получить удаленный доступ к демону Docker, необходимо ВКЛЮЧИТЬ сокет tcp.
    При использовании TCP-сокета демон Docker по умолчанию предоставляет НЕЗАШИФРОВАННЫЙ и НЕАУТЕНТИФИЦИРОВАННЫЙ прямой доступ к демону Docker.
    Вы ДОЛЖНЫ ЗАЩИТИТЬ ДЕМОН
      -> либо с помощью встроенного зашифрованного сокета HTTPS,
      -> либо поставив перед ним защищенный веб-прокси.
    Вы можете прослушивать порт 2375 на всех сетевых интерфейсах с помощью команды:
-->
-H tcp://0.0.0.0:2375
<--
  или на определенном сетевом интерфейсе, используя его IP-адрес:
-->
-H tcp://192.168.59.103:2375
<--
  Обычно порт 2375 используется для незашифрованного,
  а порт 2376 - для зашифрованного общения с демоном.

--<!>--
Если вы используете зашифрованный сокет HTTPS, имейте в виду,
что поддерживается только TLS версии 1.0 и выше.
Протоколы SSLv3 и ниже не поддерживаются по соображениям безопасности.
<<<

--<Прослушивание нескольких сокетов демоном dockerd>--

  Вы можете настроить демон Docker на одновременное прослушивание нескольких сокетов с помощью нескольких параметров -H:
  В приведенном ниже примере демон прослушивает:
    ✓ стандартный сокет Unix
    ✓ и 2 определенных IP-адреса на этом хосте:

--[CMD]--
sudo dockerd -H unix:///var/run/docker.sock \
             -H tcp://192.168.59.106 \
             -H tcp://10.10.10.2
<<<

--<Переменная окружения DOCKER_HOST>--

  Клиент Docker использует переменную окружения DOCKER_HOST для установки флага -H для клиента.
  Используйте одну из следующих команд:

--[CMD]--

#(1):
docker -H tcp://0.0.0.0:2375 ps

#(2):
export DOCKER_HOST="tcp://0.0.0.0:2375"
docker ps


####################################
# Specify daemon host (-H, --host) #
#      (Указать хост демона)       #
####################################

  Вы можете использовать флаг -H, --host,
  чтобы УКАЗАТЬ СОКЕТ, который будет использоваться ПРИ ВЫЗОВЕ КОМАНДЫ docker.
  Вы можете использовать следующие протоколы:

---
unix://[<path>]
  = Unix socket (Linux only)
  [Пример:]
  unix:///var/run/docker.sock

tcp://[<IP or host>[:port]]
  = TCP connection
  [Пример:]
  tcp://174.17.0.1:2376

ssh://[username@]<IP or host>[:port]
  = SSH connection
  [Пример:]
  ssh://user@192.168.64.5

npipe://[<name>]
  = Named pipe (Windows only)
  [Пример:]
  npipe:////./pipe/docker_engine


Если вы
  - НЕ УКАЗЫВАЕТЕ флаг -H
  - и НЕ ИСПОЛЬЗУЕТЕ пользовательский контекст
    # (https://docs.docker.com/engine/context/working-with-contexts/),

  => команды используют следующие сокеты по умолчанию:

  ✓ unix:///var/run/docker.sock
    = on macOS and Linux

  ✓ npipe:////./pipe/docker_engine
    = on Windows

(!) Чтобы добиться аналогичного эффекта без необходимости указывать флаг -H для каждой команды,
    можно также
    ➜ создать контекст
       или, наоборот,
    ➜ использовать переменную окружения DOCKER_HOST.

# Дополнительные сведения о флаге -H см. в разделе Опция сокета демона:
#-> https://docs.docker.com/reference/cli/dockerd/#daemon-socket-option


****************************
* Использование сокета TCP *
****************************

  В следующем примере показано, как вызвать docker ps по TCP
  для УДАЛЕННОГО ДЕМОНА
    с IP-адресом 174.17.0.1,
    слушающего порт 2376:

-->
$ docker -H tcp://174.17.0.1:2376 ps
<--

!ЗАМЕЧАНИЕ!
По умолчанию демон Docker использует
  ➜ порт 2376 для БЕЗОПАСНЫХ TLS-соединений
  ➜ порт 2375 для НЕБЕЗОПАСНЫХ, не-TLS-соединений.


****************************
* Использование сокета SSH *
****************************

[!] Когда вы используете SSH для вызова команды на удаленном демоне,
  запрос пересылается на Unix-сокет /var/run/docker.sock на хосте SSH.

---
$ docker -H ssh://user@192.168.64.5 ps
---

  При желании можно указать местоположение сокета, добавив к концу адреса SSH компонент path:
---
$ docker -H ssh://user@192.168.64.5/var/run/docker.sock ps
---


************************
* Daemon socket option *
************************
https://docs.docker.com/reference/cli/dockerd/#daemon-socket-option

  Демон Docker может прослушивать запросы API Docker Engine через три различных типа Socket:
  * unix,
  * tcp
  * и fd.

  По умолчанию сокет домена unix (или IPC-сокет) создается по адресу:
  /var/run/docker.sock
  Это требует:
  ➜ либо прав root,
  ➜ либо членства в группе docker.

[Удалённый доступ к демону. TCP-сокет]
  Если вам нужно получить удаленный доступ к демону Docker, необходимо включить tcp-сокет.
  При использовании TCP-сокета демон Docker по умолчанию предоставляет НЕЗАШИФРОВАННЫЙ и НЕАУТЕНТИФИЦИРОВАННЫЙ прямой доступ к демону Docker.
  Вы должны ЗАЩИТИТЬ демон
    ➜ либо с помощью встроенного зашифрованного сокета HTTPS,
    ➜ либо поставив перед ним защищенный веб-прокси.

  Вы можете прослушивать порт 2375 на всех сетевых интерфейсах с помощью команды
---
-H tcp://0.0.0.0:2375
---
  или на определенном сетевом интерфейсе, используя его IP-адрес:
---
-H tcp://192.168.59.103:2375
---

  Обычно используется
    порт 2375 для незашифрованного взаимодействия с демоном
    порт 2376 для зашифрованного взаимодействия с демоном.

!ОБРАТИТЕ ВНИМАНИЕ!
  Если вы используете зашифрованный сокет HTTPS, имейте в виду,
  что поддерживается ТОЛЬКО TLS версии 1.0 и ВЫШЕ.
[!]  Протоколы SSLv3 и ниже НЕ ПОДДЕРЖИВАЮТСЯ по соображениям безопасности.


[fd: сокеты systemd]
  В системах на базе systemd вы можете взаимодействовать с демоном через активацию сокетов systemd,
  используя команду
---
dockerd -H fd://
---

  Использование fd:// подходит для большинства систем,
  НО вы также можете указать отдельные сокеты: dockerd -H fd://3

  Если указанные файлы с активацией сокетов не найдены, демон завершает работу.

# Примеры использования активации сокетов systemd с Docker и systemd можно найти в дереве исходных текстов Docker.
# (https://github.com/docker/docker/tree/master/contrib/init/systemd/)

  Вы можете настроить демона Docker на ОДНОВРЕМЕННОЕ ПРОСЛУШИВАНИЕ НЕСКОЛЬКИХ СОКЕТОВ
  с помощью НЕСКОЛЬКИХ ОПЦИЙ -H:

  # В примере ниже демон прослушивает сокет Unix по умолчанию и 2 определенных IP-адреса на этом хосте:
---
sudo dockerd -H unix:///var/run/docker.sock -H tcp://192.168.59.106 -H tcp://10.10.10.2
---

  Клиент Docker использует переменную окружения DOCKER_HOST для установки флага -H для клиента.
  Используйте одну из следующих команд:
---
#1#
  $ docker -H tcp://0.0.0.0:2375 ps
#2#
  $ export DOCKER_HOST="tcp://0.0.0.0:2375"
  $ docker ps
---

  Установка переменной окружения DOCKER_TLS_VERIFY в любое значение, отличное от пустой строки,
  эквивалентна установке флага --tlsverify.
  Следующие значения эквивалентны:
---
$ docker --tlsverify ps
# or
$ export DOCKER_TLS_VERIFY=1
$ docker ps
---

[Работа с переменными окружения Proxy]
  Клиент Docker поддерживает переменные окружения
    * HTTP_PROXY,
    * HTTPS_PROXY
    * и NO_PROXY
    (или их версии в нижнем регистре).

  HTTPS_PROXY имеет приоритет над HTTP_PROXY.

[Подключение к удаленному демону через SSH:]
  Клиент Docker поддерживает подключение к удаленному демону через SSH:
---
docker -H ssh://me@example.com:22/var/run/docker.sock ps
docker -H ssh://me@example.com:22 ps
docker -H ssh://me@example.com ps
docker -H ssh://example.com ps
---

  Чтобы использовать SSH-соединение, необходимо настроить ssh таким образом,
  чтобы он мог обращаться к удаленному хосту с аутентификацией по открытому ключу.
  Аутентификация с помощью пароля НЕ ПОДДЕРЖИВАЕТСЯ.

  Если ваш ключ защищен парольной фразой, вам необходимо настроить ssh-агент.

---<ПРЕДУПРЕЖДЕНИЕ>---
Изменение стандартной привязки демона docker к TCP-порту или группе пользователей Unix docker создает риски для безопасности,
поскольку может позволить пользователям, не являющимся root, получить root-доступ на хосте.
Убедитесь, что вы контролируете доступ к docker.
Если вы привязываетесь к TCP-порту, любой, кто имеет доступ к этому порту, имеет полный доступ к Docker;
поэтому в открытой сети это не рекомендуется.
---

(*) С помощью параметра -H можно заставить демона Docker слушать определенный IP и порт.
  ПО УМОЛЧАНИЮ он прослушивает unix:///var/run/docker.sock,
  => чтобы разрешить только локальные подключения пользователя root.

  Вы можете установить значение 0.0.0.0:2375 или определенный IP-адрес хоста,
  тобы дать доступ всем, но это НЕ РЕКОМЕНДУЕТСЯ,
  поскольку кто-то может получить root-доступ к хосту, на котором запущен демон.

  Аналогично, клиент Docker может использовать -H для подключения к пользовательскому порту.
  По умолчанию клиент Docker подключается к
    unix:///var/run/docker.sock в Linux
    <и>
    tcp://127.0.0.1:2376 в Windows.

  -H принимает назначение хоста и порта в следующем формате:
---[ФОРМАТ]---
tcp://[host]:[port][path] or unix://path
---

## Примеры
  tcp://
    ➜ TCP connection to 127.0.0.1 on either port 2376 when TLS encryption is ON,
       or port 2375 when communication is in plain text.

  tcp://host:2375
    ➜ TCP connection on host:2375

  tcp://host:2375/path
    ➜ TCP connection on host:2375 and prepend path to all requests

  unix://path/to/socket
    ➜ Unix socket located at path/to/socket

  -H (если значение пустое):
    = по умолчанию используется то же значение, что и при отсутствии -H.

  -H также принимает краткую форму для TCP-привязки: host: или host:port или :port

Запустить Docker в режиме демона:
---
sudo <path to>/dockerd -H 0.0.0.0:5555 &
---

Скачать образ ubuntu:
---
docker -H :5555 pull ubuntu
---

#Вы можете использовать несколько -H, например, если вы хотите прослушивать как TCP, так и Unix-сокет.
---
$ sudo dockerd -H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock &

# Download an ubuntu image, use default Unix socket
$ docker pull ubuntu

# OR use the TCP port
docker -H tcp://127.0.0.1:2375 pull ubuntu
---