Назначение статического IP-адреса для контейнера Docker и Docker-Compose
(Assign Static IP to Docker Container and Docker-Compose)

[sources:]
  0) "Networking overview": https://docs.docker.com/network/

  1) "Assign Static IP to Docker Container and Docker-Compose":
  -> https://www.baeldung.com/ops/docker-assign-static-ip-container

  2) "Networks top-level elements":
  -> https://docs.docker.com/compose/compose-file/06-networks/

  3) Assign static IP to Docker container
  -> https://stackoverflow.com/questions/27937185/assign-static-ip-to-docker-container

  4) "Packet filtering and firewalls":
  -> https://docs.docker.com/network/packet-filtering-firewalls/



Когда мы запускаем контейнер Docker, он соединяется с виртуальной сетью с помощью IP-адреса.
Таким образом, мы обычно ожидаем, что службы получат конфигурацию ДИНАМИЧЕСКИ.

(!) Однако мы можем захотеть использовать статический IP вместо автоматического выделения IP.

(*) Чаще всего статический IP нужен нам для связи одного контейнера с другим или с хостом.
    Встроенная в Docker сеть уже справляется с этой задачей.

(!) Стоит рассмотреть возможность создания СОБСТВЕННОЙ СЕТИ с помощью Docker Swarm.
[Однако:]
  -> мы можем захотеть вручную указать частный IP-адрес,
     например, для доступа к контейнерам непосредственно с хоста.


#######################
# Docker DHCP and DNS #
#######################

  Для начала давайте изучим встроенную функцию Docker по назначению IP-адресов контейнерам с помощью DHCP и DNS для разрешения имен хостов.

Сначала Docker назначает IP каждому контейнеру, выступая в роли DHCP-сервера.

Затем контейнеры обрабатывают DNS-запросы через сервер внутри dockerd, который распознает имена других контейнеров в той же внутренней сети. Таким образом, контейнеры могут взаимодействовать, не зная своих внутренних IP-адресов. Хотя при запуске приложения каждый раз внутренние IP-адреса могут отличаться, контейнеры все равно могут легко подключаться по человекочитаемому имени благодаря внутреннему DNS-серверу внутри dockerd.

Далее dockerd отправляет запросы на поиск имен в CoreDNS (из CNCF). Наконец, запросы переходят на хост в зависимости от доменного имени.

Для домена docker.internal существует отдельный случай. Он включает DNS-имя host.docker.internal, которое разрешается в действительный IP-адрес текущего хоста. Это позволяет контейнерам обращаться к службам хоста, не заботясь о жестком кодировании IP-адресов. Хотя docker.internal не рекомендуется, он может быть удобен для целей разработки.