###########################################################
# Настройка удалённого доступа к демону Docker. Защита DD #
#        Configure remote access for  Docker daemon       #
#            Protect the Docker daemon socket             #
###########################################################

[sources:]
  1) "Configure remote access for Docker daemon": https://docs.docker.com/engine/daemon/remote-access/
  2) "Protect the Docker daemon socket": https://docs.docker.com/engine/security/protect-access/
  3) "Connect to remote Docker over SSH": https://code.visualstudio.com/docs/containers/ssh


*************
* ВНИМАНИЕ! *
*************

  Прежде чем настраивать Docker на прием соединений с удаленных хостов, необходимо понять, какие последствия для безопасности несет в себе открытие Docker для сети.
  Если не принять меры по защите соединения, удаленные пользователи, не являющиеся root-пользователями, могут получить root-доступ на хосте.
  Дополнительные сведения о том, как использовать сертификаты TLS для защиты этого соединения,
  см. в разделе Защита сокета демона Docker: https://docs.docker.com/engine/security/protect-access/


Что касается настройки Docker API - можно глянуть несколько статей, например, эту:
https://medium.com/@ssmak/how-to-enable-docker-remote-api-on-docker-host-7b73bd3278c6 (edited)
{"How to enable docker remote API on docker host?":https://pitstop.manageengine.com/portal/en/kb/articles/how-to-enable-docker-remote-api-on-docker-host}

# How to enable docker remote API on docker host?
---
  1. Navigate to /lib/systemd/system in your terminal and open docker.service file
-->
vi /lib/systemd/system/docker.service
<--

  2. Find the line which starts with ExecStart and adds -H=tcp://0.0.0.0:2375 to make it look like
ExecStart=/usr/bin/dockerd -H=fd:// -H=tcp://0.0.0.0:2375

  3. Save the Modified File

  4. Reload the docker daemon:
-->
systemctl daemon-reload
<--

  5. Restart the container:
-->
sudo service docker restart
<--

  6. Test if it is working by using this command, if everything is fine below command should return a JSON
curl http://localhost:2375/images/json

  7. To test remotely, use the PC name or IP address of Docker Host
---

## Надо прописать gateway той подсети, в которой находится ваш контейнер с Jenkins
## Если вы на Linux - всё должно заработать.

В Jenkins в настройках облака можно проверить соединение с Docker API, как только проверка отработает - можно запускать сборку в контейнерах.

https://blog.usejournal.com/how-to-enable-docker-remote-api-on-docker-host-7b73bd3278c6
  в этой статье рекомендуют добавить -H=tcp://0.0.0.0:2375 в /lib/systemd/system/docker.service

В тестовых целях - это можно сделать, но если разворачиваете Jenkins на сервисе с доступом в Интернет (например, в Digitalocean) - так лучше не делать.
Так как в этом случае вы открываете порт 2375 вовне и этим могут воспользовать злоумышленники.

[Самый надежный способ:]
  - ввести gateway той подсети, в которой находится ваш контейнер с Jenkins.
[! нюанс !]
  -> при рестарте машины, на которой развернут Docker - сервис может не подняться, потому что нужная подсеть в момент старта сервиса будет недоступна.