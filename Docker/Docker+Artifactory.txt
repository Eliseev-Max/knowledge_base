<
	https://jfrog.com/blog/how-to-set-up-a-private-remote-and-virtual-docker-registry/
>
Реестры и репозитории

	И Artifactory, и Docker используют термин "репозиторий", но каждый использует его по-своему.
	* Репозиторий Docker - это размещенная на хостинге коллекция размеченных образов, которые вместе создают файловую систему для контейнера.
	* Реестр Docker - это хост, в котором хранятся репозитории Docker.
	* Репозиторий Artifactory - это размещенная коллекция репозиториев Docker, фактически, реестр Docker во всех отношениях, и к нему можно получить прозрачный доступ с помощью клиента Docker.
	Поскольку Artifactory не накладывает ограничений на количество создаваемых репозиториев, вы можете управлять любым количеством реестров Docker в Artifactory.

<
  Artifactory может проксировать удаленный реестр Docker через удаленные репозитории,
  обеспечивая локальный кэш удаленного ресурса Docker, такого как Docker Hub.
  Это позволяет ускорить сборку, обеспечить лучший контроль и застраховаться от перебоев в работе удаленных ресурсов.
>
<‼
  Artifactory может объединять образы из локальных и удаленных репозиториев в виртуальный репозиторий Docker.
  Таким образом, доступ к образам Docker осуществляется по единому URL-адресу, а администраторы могут управлять отдельными хранилищами.
‼>

О работе Artifactory без обратного proxy
	Ранее Artifactory поддерживал методы Ports и Subdomain при использовании обратного прокси.
	Начиная с версии 5.8. Artifactory вводит новый метод, называемый "Repository Path",
	поскольку он использует префикс пути к репозиторию Docker (<REPOSITORY_KEY/IMAGE>) для доступа к определенному реестру Docker Artifactory из клиента Docker.
	‼ обратный прокси-сервер для Artifactory может быть настроен по другим причинам,
	При использовании метода Repository Path запросы к реестрам Docker в Artifactory будут обрабатываться встроенным в Artifactory Tomcat вместо обратного прокси-сервера

