#######################
# apt-transport-https #
#######################

{https://packages.debian.org/ru/sid/apt-transport-https}
Пакет: apt-transport-https (2.7.9)
  - переходный пакет для поддержки https
  Это фиктивный переходный пакет - поддержка https была перенесена в пакет apt в версии 1.5. Его можно смело удалять.
  

{https://manpages.ubuntu.com/manpages/focal/en/man1/apt-transport-https.1.html}
apt-transport-https - транспорт APT для загрузки по защищенному протоколу HTTP (HTTPS).

  Этот APT-транспорт позволяет использовать репозитории, доступные по протоколу HTTP Secure (HTTPS), также называемому HTTP over TLS.
  Он доступен по умолчанию начиная с версии apt 1.5, а до этого был доступен в пакете apt-transport-https.
  Обратите внимание, что транспорт никогда не вызывается непосредственно пользователем, а используется APT-инструментами на основе пользовательской конфигурации.

  HTTP сам по себе является незашифрованным транспортным протоколом (сравните apt-transport-http(1)),
  который, как указывает добавленная буква S, обернут в зашифрованный слой, известный как Transport Layer Security (TLS), чтобы обеспечить сквозное шифрование.
  Достаточно способный злоумышленник все равно может наблюдать за общением партнеров, а более глубокий анализ зашифрованного сообщения может раскрыть важные детали.
  Обзор доступных альтернативных транспортных методов приведен в sources.list(5).

*********
* ОПЦИИ *
*********

  Протокол HTTPS основан на протоколе HTTP, поэтому все опции, поддерживаемые apt-transport-http(1),
  также доступны через Acquire::https и по умолчанию будут иметь те же значения, что и для Acquire::http.
  В этом руководстве будут описаны только опции, характерные для https.

--< Учетные данные сервера >--
  По умолчанию для проверки сертификата сервера используются все сертификаты, которым доверяет система
  (см. пакет ca-certificates).
  Альтернативный центр сертификации (ЦС) может быть настроен с помощью опции
    Acquire::https::CAInfo
  и ее специфической для хоста опции
    Acquire::https::CAInfo::host.
	
  Опция CAInfo указывает файл, состоящий из сертификатов CA (в формате PEM), объединенных вместе для создания цепочки,
  которую APT должен использовать для проверки пути от вашего самоподписанного корневого сертификата.
  Если удаленный сервер предоставляет всю цепочку во время обмена, файл должен содержать только корневой сертификат.
  В противном случае требуется вся цепочка.
  
  Если вам нужно поддерживать несколько центров сертификации, единственный способ - объединить все.

  Пользовательский список отзыва сертификатов (CRL) можно настроить с помощью опций:
    - Acquire::https::CRLFile
	и
	- Acquire::https::CRLFile::host

  Как и в случае с предыдущей опцией, необходимо указать файл в формате PEM.

--< Отключение безопасности >--
При аутентификации сервера, если проверка сертификата по какой-то причине не проходит 
  (
    - истек срок действия,
	- отозван,
	- MITM ("человек посередине")
	и т. д.
  ),
  соединение разрывается.

  Очевидно, что это то, чего вы хотите во всех случаях, и что обеспечивает значение по умолчанию (true) опции Acquire::https::Verify-Peer и ее варианта для конкретного хоста.
  Если вы точно знаете, что делаете, установка этой опции в значение "false" позволит вам пропустить проверку сертификата пира и сделать обмен успешным.
  Опять же, эта опция предназначена только для отладки или тестирования, поскольку она устраняет всю безопасность, обеспечиваемую использованием HTTPS.

  Аналогичным образом опция Acquire::https::Verify-Host и ее вариант для конкретного хоста могут использоваться для деактивации функции безопасности:
    Сертификат, предоставляемый сервером, включает идентификационные данные сервера, которые должны совпадать с DNS-именем, используемым для доступа к нему.
  По умолчанию, как требует RFC 2818, имя зеркала проверяется на соответствие идентификатору, указанному в сертификате.
  Это поведение по умолчанию безопасно и не должно изменяться, но если вы знаете, что используемый вами сервер имеет DNS-имя, которое не совпадает с идентификатором в его сертификате,
  вы можете установить опцию в значение "false", что предотвратит сравнение.

--< Аутентификация клиента >--
Помимо поддержки аутентификации на основе пароля (см. apt_auth.conf(5)) HTTPS также
поддерживает аутентификацию на основе клиентских сертификатов с помощью Acquire::https::SSLCert и
Acquire::https::SSLKey. Они должны быть установлены соответственно на имя файла сертификата X.509
сертификата клиента и связанного с ним (незашифрованного) закрытого ключа, оба в формате PEM. На
на практике настоятельно рекомендуется использовать специфические для хоста варианты обеих опций.

Пакет: ca-certificates (20230311)
{https://packages.debian.org/ru/sid/ca-certificates}
  = сертификаты распространённых центров сертификации (CA)

  Данные по центрам сертификации, которые распространяются с браузером Mozilla, позволяющие приложениям проверять достоверность соединений SSL.
[!] Заметьте:
    Debian не может подтвердить или опровергнуть то, были ли проверены на предмет надёжности или на соответствие RFC 3647 те авторитетные организации, чьи сертификаты включены в данный пакет.
	Вся ответственность по использованию этих сертификатов лежит на локальном системном администраторе.
