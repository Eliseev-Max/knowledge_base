(sources:
1. "Протокол сетевой аутентификации Kerberos 5": https://www.ixbt.com/comm/kerberos5.shtml
2. "Как работает Kerberos 5 в картинках": https://pikabu.ru/story/kak_rabotaet_kerberos_5_v_kartinkakh_5271729
3. Kerberos consortium: https://www.kerberos.org/software/tutorial.html
)
Протокол сетевой аутентификации Kerberos 5
Создан: в Массачусетском технологическом институте в рамках проекта Athena
Стал общедоступным стал, начиная с версии 4.
Версия Kerberos 5 была принята в качестве стандарта IETF.
RFC 1964 описывается механизм и формат передачи жетонов безопасности в сообщениях Kerberos.

Протокол Kerberos предлагает механизм взаимной аутентификации клиента и сервера перед установлением связи между ними.
В протоколе учтено:
	► начальный обмен информацией между клиентом и сервером происходит в незащищённой среде,
	► передаваемые пакеты могут быть перехвачены и модифицированы.

Суть концепции протокола Kerberos:
	участники сеанса связи обмениваются симметричным криптографическим ключом, знание которого подтверждает личность собеседника.
	Симметричный ключ обеспечивает как шифрование, так и дешифрование информации.

Аутентификаторы
	Аутентификатор -  средство, используемое для подтверждения личности пользователя, то есть для выполнения цифровой аутентификации.
	По сути это определённый нестатичный (неодинаковый для разных процедур аутентификации) набор данных, зашифрованный секретным ключом.
	Аутентификатор состоит из нескольких полей (двух). В одном из полей зашифровано время отправления клиента, инициировавшего общение.
	Время, зашифрованное в сообщении, и время на компьютере получателя не должны отличаться более чем на фиксированную величину.
	
Управление ключами
	Три участника безопасной связи протокола Kerberos 5:
		• клиент
		• сервер
		• доверенный посредник между ними
	Роль посредника здесь играет так называемый центр распределения ключей Key Distribution Center, KDC.

KDC представляет собой службу, работающую на физически защищённом сервере.
Она ведёт БД с информацией об учётных записях всех главных абонентов безопасности своей области.
Что хранится в БД KDC:
	• информация о каждом абоненте безопасности;
	• криптографический ключ, известный только этому абоненту и службе KDC (долговременным ключ)

Использование долговременного ключа:
	[Пользователь системы] ↔ <-связь-> ↔ [Центр распределения ключей]
	
В большинстве практических реализаций протокола Kerberos долговременные ключи генерируются на основе пароля пользователя, указываемого при входе в систему.
► Клиенту нужно обратиться к серверу:
	1. Клиент направляет запрос в центр KDC
	2. Центр KDC направляет каждому участнику предстоящего сеанса копии уникального сеансового ключа (session key),
	   действующие в течение короткого времени
	   * назначение session key - проведение аутентификации клиента и сервера
	3. Копия сеансового ключа
		 ♦ пересылаемая на сервер:
		     шифруется с помощью долговременного ключа этого сервера
		 ♦ направляемая клиенту:
			 шифруется с помощью долговременного ключа данного клиента.

Достоинства применения сетевых мандатов:
	[+] серверу не нужно хранить сеансовые ключи для связи с клиентами.
		Они сохраняются в кэш-памяти удостоверений (credentials cache) клиента
		1. Клиент хочет связаться с сервером;
		2. Клиент направляет мандат из своего credentials cache на сервер
		3. Сервер, получив от клиента мандат, дешифрует его и извлекает сеансовый ключ.
		4. Когда надобность в этом ключе исчезает, сервер может просто стереть его из своей памяти.
	
	[+] клиенту нет необходимости обращаться к центру KDC перед каждым сеансом связи с конкретным сервером
		Сеансовые мандаты можно использовать многократно.
		На случай же их хищения → срок годности мандата
			• срок годности указывается KDC в самой структуре данных;
			• продолжительность срока годности определяется политикой Kerberos для конкретной области (обычно не более 8 ч)
		пользователь отключился от сети → 
			→ кэш-память удостоверений обнуляется →
				→ все сеансовые мандаты вместе с сеансовыми ключами уничтожаются.

	Ticket-granting ticket (TGT), мандат на выдачу мандатов - 
		особый вид сеансовых мандатов для связи клиента и Центра KDC без по протоколу Kerberos
		(без повторнго ввода пароля и без долговременного ключа пользователя)
	Если билет является пересылаемым (переадресуемым, forwardable), 
	  то KDC может выдать новый билет (с другим сетевым адресом, если необходимо) на основе пересылаемого билета.
	
	Когда KDC создает новый билет на основе билета с возможностью пересылки, он устанавливает флаг пересылки на этом новом билете
	(forwarded flag).
	

	Сеансовые мандаты
	♦ Клиент Kerberos встроен в программу входа в систему (login) → пользователь получаете тикеты автоматически при входе в систему.
	Другие программы, такие как ssh, могут пересылать копии ваших тикетов на удаленный хост.
	Большинство этих программ также автоматически уничтожают ваши тикеты при выходе из системы.
	‼ MIT рекомендует явно уничтожить ваши билеты Kerberos, когда вы закончите с ними.
	Один из способов убедиться в том, что тикеты удалены - добавить команду kdestroy в файл .logout. 
	♦ Центр распределения ключей KDC обращается к долговременному ключу пользователя только один раз:
	когда предоставляет клиенту первоначальный мандат на выдачу мандата.
Во всех последующих транзакциях с этим клиентом центр KDC
	• дешифрует мандаты TGT с помощью собственного долговременного ключа,
	• извлекает из него сеансовый ключ регистрации, который использует для проверки подлинности аутентификатора клиента.

Проксируемый билет (Proxiable ticket)
	Сходства с Forwardable ticket:
		• позволяет службе принимать идентификацию клиента
	Различия:
		- проксируемый билет выдается только для определенных служб
		  (TGT не может быть выдан на основе проксируемого билета)

Прокси-билет (Proxy ticket)
	- это билет, который был выпущен на основе проксируемого билета.
	
Просроченный билет (Postdated ticket)
	выпускается с установленным флагом недействительности.
	После времени начала, указанного на билете, он может быть предъявлен в KDC для получения действительных (valid) билетов.
Билеты с установленным флагом postdateable можно использовать для получения просроченных служебных билетов (postdated service tickets)

Возобновляемые билеты (Renewable tickets)
	можно использовать для получения новых сеансовых ключей без повторного ввода пользователем пароля.
	Возобновляемый билет имеет два срока действия:
	1 - это время, в которое истекает срок действия данного конкретного билета.
	2 - самое позднее возможное время истечения срока действия для любого билета, выпущенного на основе этого возобновляемого билета.

Билет с установленным флагом initial
	был выдан на основе протокола аутентификации, а не на основе TGT.
	Серверы приложений, которые хотят убедиться, что ключ пользователя был недавно предъявлен для проверки,
	могут указать, что этот флаг должен быть установлен для принятия билета.

Недействительный билет (invalid ticket)
	должен быть отклонен серверами приложений. Просроченные билеты обычно выпускаются с установленным этим флагом и должны быть проверены KDC, прежде чем их можно будет использовать.

Предварительно аутентифицированный билет (preauthenticated ticket)
	- это билет, который был выпущен только после того, как клиент, запрашивающий билет, прошел аутентификацию в KDC.

Флаг аппаратной аутентификации (hardware authentication flag)
	устанавливается на билете, который требует использования аппаратного обеспечения для аутентификации.
	Ожидается, что аппаратное обеспечение будет находиться только у клиента, запросившего билет.

Анонимный билет (anonymous ticket)
	- это билет, в котором названный принципал является общим принципалом для данного царства;
	в нем не указан человек, который будет использовать билет.
	Этот билет предназначен только для безопасного распространения сеансового ключа.

Получение билетов с помощью программы kinit
	Для зарегистрированных пользователей:
	$ kinit
	Password for user@domain.org: <Пароль_пользователя>

	Если был введён неверный пароль, kinit выведет:
	kinit: Password incorrect
	
	Пароль для пользователя, не зарегистрированного в данном домене (зарегистрированного в другом домене):
	kinit alien@another.domain.ru

Если вы хотите иметь возможность пересылать свои билеты на другой хост,
вам нужно запросить билеты с возможностью пересылки.
Для этого нужно указать параметр -f:
	$ kinit -f

kinit не сообщает вам, что он получил билеты с возможностью пересылки;
можно проверить это с помощью команды klist

Указываем время жизни билетов:
	$ kinit -f -l [lifetime] user@domain.org
# lifetime - время жизни билетов:
	(int)d - количество дней;
	(int)h - количество часов;
	(int)m - количество минут;
	(int)s - количество секунд;
	# (int) - некоторое целое число
	
---
Ссылки для ознакомления:
0. kinit
	https://web.mit.edu/kerberos/krb5-1.12/doc/user/user_commands/kinit.html
1. https://translated.turbopages.org/proxy_u/en-ru.ru.3c0b6d47-6316da7b-35c09016-74722d776562/https/docs.oracle.com/en/java/javase/18/docs/specs/man/kinit.html

2. https://www.opennet.ru/man.shtml?topic=kinit&category=1&russian=1

3. https://habr.com/ru/post/143190/

4. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_identity_management/logging-in-to-ipa-from-the-command-line_configuring-and-managing-idm

5. https://docs.oracle.com/cd/E36784_01/html/E36870/kinit-1.html

6. https://www.ibm.com/docs/en/aix/7.1?topic=k-kinit-command
7. "Ticket management": https://web.mit.edu/kerberos/krb5-1.12/doc/user/tkt_mgmt.html

Video:
1. https://www.youtube.com/watch?v=j_GvYxtddME
2. https://www.youtube.com/watch?v=efEFL8g8m98
3. https://www.youtube.com/watch?v=RZZol_P42PA

