Версионирование бакета Minio
(Bucket Versioning)

#--> https://min.io/docs/minio/kubernetes/upstream/administration/object-management/object-versioning.html#minio-bucket-versioning

*********
* Обзор *
*********

MinIO поддерживает хранение нескольких "версий" объекта в одном ведре.

Когда эта функция включена, версионирование позволяет MinIO хранить несколько итераций одного и того же объекта.
Операции записи, которые обычно перезаписывают существующий объект, вместо этого приводят к созданию нового объекта с версией.
Версионность MinIO защищает от непреднамеренных перезаписей и удалений, обеспечивая поддержку "отмены" операции записи.
Версионность бакета является необходимым условием для настройки правил блокировки и хранения объектов.

Для версионных ведер операция записи, изменяющая объект, приводит к созданию новой версии этого объекта с уникальным идентификатором версии.
MinIO отмечает "последнюю" версию объекта, которую клиенты получают по умолчанию.
Затем клиенты могут явно выбрать список, получить или удалить определенную версию объекта.

[!] Изменено в версии 2023-08-04T17-40-21Z:
    MinIO ОГРАНИЧИВАЕТ версионирование объектов НЕ БОЛЕЕ ЧЕМ 10 000 версиями каждого объекта.

  Если операция записи превысит лимит в 10 000 версий объекта,
  -> MinIO блокирует операцию и возвращает ошибку.

[>] Удалите одну или несколько версий, чтобы создать новую версию объекта.

*********************************************
* Операции чтения версионированных объектов *
*********************************************

  То, как MinIO извлекает объекты в версионированном бакете, проиллюстрированно в изображениях.

  MinIO не создает версии для создания, изменения или удаления явных объектов каталога ("префиксов").
  Объекты, созданные внутри такого явного объекта каталога, сохраняют обычное поведение версий.

  MinIO неявно определяет префиксы из путей к объектам.
  Явное создание префикса обычно происходит только в Spark и подобных рабочих нагрузках,
  которые применяют унаследованное от POSIX/HDFS поведение создания каталогов в контексте S3.