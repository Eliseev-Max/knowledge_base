###############################################################################################
Для устранения ошибки "":
отправляем POST-запрос с помощью curl:
	# общий вид:
	# curl -XPOST -vu username:password http://${ArtifactoryURL}/artifactory/ui/jcr/eula/accept
curl -XPOST -vu admin:"P@s\$Word1234^-^" http://10.0.2.15:8082/artifactory/ui/jcr/eula/accept
###############################################################################################

Artifactory обеспечивает:
	+ быстрое создание безопасного private Docker registry для управления всеми образами Docker
	+ тонкий контроль доступа.

Artifactory:
	• не устанавливает никаких ограничений 
	• позволяет создавать любое количество реестров Docker, используя локальные, удаленные и виртуальные репозитории Docker 
	• прозрачно работает с клиентом Docker для управления всеми вашими образами Docker:
		◙ созданными внутри компании;
		◙ загруженными с удаленных ресурсов Docker (напр., Docker Hub)

Множественные реестры Docker
	Artifactory позволяет вам определить столько реестров Docker, сколько вы захотите. 
	→ можно управлять каждым проектом в отдельном реестре и лучше контролировать доступ к своим образам Docker. 

Используйте Docker естественным образом
Artifactory поддерживает соответствующие вызовы API реестра Docker →
→ вы можете прозрачно использовать клиент Docker для доступа к образам через Artifactory.

Защита частного реестра Docker с тонким контролем доступа
	Локальные репозитории Docker - это место, где вы храните внутренние образы Docker для распространения по всей организации.
	Благодаря тонкому контролю доступа, обеспечиваемому встроенными функциями безопасности, Artifactory предлагает безопасный Docker push и pull с локальными репозиториями Docker в качестве полнофункциональных, безопасных частных реестров Docker.

Последовательный и надежный доступ к удаленным образам
Удаленные Docker-репозитории в Artifactory проксируют внешние ресурсы, такие как Docker Hub или удаленный Docker-репозиторий в другом экземпляре Artifactory, и кэшируют загруженные образы.
В результате общее сетевое взаимодействие снижается, а доступ к образам на этих удаленных ресурсах становится более быстрым, последовательным и надежным.

Поддержка OCI
Artifactory совместим с OCI и поддерживает OCI-клиенты, позволяя вам развертывать и разрешать OCI-образы в реестрах Docker.
OCI-клиент Singularity не поддерживается.

Поддержка Docker Buildx
Artifactory поддерживает Docker Buildx, позволяя вам легко создавать и отправлять мультиархитектурные образы с помощью Docker buildx CLI. Для получения дополнительной информации смотрите раздел "Массовая рассылка образов с помощью Docker Buildx CLI".

Уверенное продвижение образов в производство
Artifactory позволяет вам продвигать образы Docker как неизменяемые, стабильные двоичные файлы, проходя через "ворота качества" вплоть до производства.

Неограниченный доступ к Docker Hub
Artifactory предоставляет вам неограниченный, высокопроизводительный доступ к Docker Hub и официальным образам Docker для упрощения разработки облачных нативных приложений, без ограничений на извлечение образов из Docker Hub. Это позволяет оптимизировать, автоматизировать и упростить работу команд DevOps.
* Доступно для подписчиков SaaS-облака JFrog Platform, включая бесплатную подписку, предлагаемую на AWS, GCP и Azure.

---
JFrog Container Registry
	
	Frog Container Registry - это менеджер репозиториев, который поддерживает реестры Docker, Helm и репозитории Generic, 
	позволяя вам создавать, развертывать и управлять образами контейнеров, предоставляя мощные функции с тонким контролем
	прав доступа за изящным и простым в использовании пользовательским интерфейсом. 

	JFrog Container Registry доступен как самостоятельное (Freemium) или SaaS решение и поддерживает
		• частные и публичные образы Docker,
		• диаграммы Helm
		• репозитории Generic.
	Внутренний механизм разрешений помогает DevOps-командам решать, кто и к чему может получить доступ, с тонким контролем доступа.
	Он обеспечивает видимость и управление образами с помощью расширенных запросов на основе метаданных и позволяет запускать
	несколько реестров для каждого экземпляра/аккаунта.

	JFrog Container Registry поставляется с простым в использовании пользовательским интерфейсом с расширенным представлением
	слоя изображений и возможностями поиска изображений.
	Мощный REST API и CLI могут быть использованы для отправки, извлечения и простого управления вашими изображениями.

	JFrog Container Registry работает на базе JFrog Artifactory с набором функций, которые были адаптированы для обслуживания
	основной цели запуска пакетов Docker и Helm в Container Registry.
	Поскольку JFrog Container Registry является версией Artifactory, при работе с JFrog Container Registry обращайтесь к документации по JFrog Artifactory.
	Например:
		• Настройка Artifactory,
		• Установка Artifactory,
		• Обновление Artifactory,
		• Artifactory Release Notes
		• Artifactory REST API.

	Для просмотра списка поддерживаемых функций JFrog Container Registry см. таблицу функциональности JCR,
	(https://www.jfrog.com/confluence/display/JFROG/JFrog+Container+Registry#JFrogContainerRegistry-jcrfun)
	а для сравнения JFrog Container Registry с другими версиями см. матрицу сравнения Self-Hosted JFrog Platform
	(https://www.jfrog.com/confluence/display/JFROG/Artifactory+Comparison+Matrix)
	или матрицу сравнения Cloud JFrog Platform
	(https://www.jfrog.com/confluence/display/JFROG/JFrog+Cloud+Comparison+Matrix)
	в зависимости от ваших потребностей

	Выделенный реестр Docker

	Вы можете в считанные минуты создать защищенный частный реестр Docker для управления всеми вашими образами Docker,
	осуществляя при этом тонкий контроль доступа.
	JFrog Container Registry не имеет ограничений и позволяет создавать любое количество реестров Docker, используя
		• локальные репозитории Docker,
		• удаленные репозитории Docker,
		• виртуальные репозитории Docker,
	и прозрачно работает с клиентом Docker для управления всеми вашими образами Docker, как созданными внутри компании, так и загруженными из удаленных реестров Docker, таких как Docker Hub.
	Чтобы начать настройку реестра Docker, см. раздел Настройка репозиториев Docker.
	
---

sources:
{
	1. Install JFrog Artifactory on Ubuntu 20.04|18.04|16.04
	https://computingforgeeks.com/how-to-install-jfrog-artifactory-on-ubuntu/
	1+ What is a Docker Repository?
	https://jfrog.com/integration/docker-registry/docker-repository/
	2. Установка и применение Artifactory на Linux Ubuntu
	https://www.dmosk.ru/miniinstruktions.php?mini=artifactory-ubuntu
	3. Artifact Management With JFrog Artifactory
	https://youtu.be/bKp1Vif9oO4
	
	4. Getting Started with Artifactory as a Docker Registry
	https://www.jfrog.com/confluence/display/JFROG/Getting+Started+with+Artifactory+as+a+Docker+Registry
	5. Docker Registry
	https://www.jfrog.com/confluence/display/JFROG/Docker+Registry
	6. How to create a Docker repository in Artifactory
	https://pinter.org/archives/6011
}
[ Also:
	Настройка локального хранилища Docker Registry
	https://winitpro.ru/index.php/2021/03/03/nastrojka-lokalnogo-docker-registry/
	Настройка локального репозитория для образов Docker и работа с ним
	https://www.dmosk.ru/miniinstruktions.php?mini=docker-local-repo#prepare
]