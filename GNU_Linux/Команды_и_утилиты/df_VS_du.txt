Linux File System.
df VS du

#########
# 1. df #
#########
#-> https://linux.die.net/man/1/df
#-> https://www.opennet.ru/man.shtml?topic=df&category=1&russian=0


df отображает объем дискового пространства, доступного на файловой системе, содержащей каждый аргумент имени файла.
Если имя файла не указано, будет показано пространство, доступное на всех смонтированных в данный момент файловых системах.

По умолчанию дисковое пространство отображается в блоках размером 1K,
(!) если только не установлена переменная окружения POSIXLY_CORRECT:
  => в этом случае используются блоки размером 512 байт.

Если аргументом является АБСОЛЮТНОЕ ИМЯ файла узла дискового устройства, содержащего смонтированную файловую систему:
  => df показывает доступное пространство на этой файловой системе,
     а не на файловой системе, содержащей узел устройства (которая ВСЕГДА является КОРНЕВОЙ файловой системой).

Эта версия df не может показать доступное пространство на НЕМОНТИРОВАННЫХ ФАЙЛОВЫХ СИСТЕМАХ,
потому что для большинства типов систем это требует очень непортативных глубоких знаний о структуре файловой системы.

[Некоторые опции команды:]

  -a, --all
    = 

  --direct
    = показать статистику для файла вместо точки монтирования

  --total
    = получить общую сумму

  -h, --human-readable
    = вывести размеры в удобочитаемом формате (т.е., 1K, 234M, 2G)

  -H, --si
    = Аналогично -h, но используйте значения 1000, а не 1024

  -i, --inodes
    = выводить информацию об inodes вместо использования блоков

  -P, --portability
    = использовать формат вывода POSIX

  -T, --print-type
    = вывести тип файловой системы

  -m, --megabytes
При выводе устанавливает размер блока в двоичный мегабайт (1048576 байт).
Заметим, что четыре опции -h, -H, -k, -m носят взаимоисключающий характер
и фактически будет работать только последняя, указанная в командной строке;

[например]
  если заданы одновременно опции --si и -m, то в результате при выводе размер блока будет установлен в мегабайт (1048576 байт).
  [На интерпретацию размеров блоков также должна оказывать влияние переменная окружения BLOCK_SIZE, но она не учитывается в версии fileutils-4.0]

## Есть нюансы с вызовом системного вызова sync
## --no-sync  => не делать системный вызов sync
## --sync  => делать системный вызов sync
## По умолчанию включен флаг --no-sync


#########
# 2. du #
#########
#-> https://linux.die.net/man/1/du
#-> https://losst.pro/komanda-du-v-linux

du = оценить использование файлового пространства
(== позволяет вывести размер всех файлов в определённой папке в байтах или в более удобном формате.)

Суммирует использование диска для каждого ФАЙЛА, рекурсивно для каталогов.

[Синтаксис:]
$ du [options] /path/to/directory

[Опции:]
  -a, --all
    = выводить размер для всех файлов, а не только для директорий
    (по умолчанию размер выводится только для папок);

  -B, --block-size
    = указать единицы вывода размера,
    доступно:
      K,M,G,T,P,E,Z,Y для 1024
      <и>
      KB, MB и так далее для 1000;

  -c, --total
    = выводить в конце общий размер всех папок;

  -d, --max-depth
    = максимальная глубина вложенности директорий;

  -h, --human-readable
    = выводить размер в единицах измерения удобных для человека;

  --inodes
    = выводить информацию об использованию inode;

  -L, --dereference - следовать по всем символическим ссылкам;

  -l, --count-links - учитывать размер файла несколько раз для жестких ссылок;

  -P, --no-dereference - не следовать по символическим ссылкам, это поведение используется по умолчанию;

  -S, --separate-dirs - не включать размер подпапок в размер папки;

  --si - выводить размер файлов и папок в системе си, используется 1000 вместо 1024;

  -s, --summarize - выводить только общий размер;

  -t, --threshold - не учитывать файлы и папки с размером меньше указанного;

  --time
    = отображать время последней модификации для файла или папки,
    вместо времени модификации можно выводить такие метки:
    * atime,
    * access,
    * use,
    * ctime;
    (показывать время в виде WORD вместо времени модификации: atime, access, use, ctime или status)

  -X, --exclude - исключить файлы из подсчёта;

  -x, --one-file-system - пропускать примонтированные файловые системы;

  --version - вывести версию утилиты.

[Наиболее часто используемые команды:]

$ du -h /var
#= просто вывести список папок в каталоге /var и занимаемое ими место


$ du -BM /var
# для вывода размера папок в мегабайтах с размером блока в 1024 килобайт используйте опцию -B с параметром M:
#[!] при указании размера блока точность будет немного ниже, потому что минимальная единица измерения - один блок.

$ du -ha /var
#= выводить размер не только папок, но и файлов, которые там находятся

$ du -hs /var
#= вывести только общий размер всех файлов и папок


# Если вам надо исключить какие-либо файлы из подсчёта, следует использовать опцию -exclude.
# Например, давайте исключим все лог файлы:

$ du -hac --exclude="*.log"

