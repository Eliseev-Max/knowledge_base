{ sources:
	1. https://losst.pro/monitoring-setevyh-podklyuchenij-v-linux
	2. https://setiwik.ru/komanda-ss-v-linux-s-poleznymi-primerami/
	3. https://zalinux.ru/?p=3193
}

Утилита ss пришла на смену утилите netstat.
В новых дистрибутивах утилита netstat уже не поставляется по умолчанию.

Различия в принципах работы netstat и ss:
  - netstat сканирует директорию /proc для получения необходимой информации;
  - в новых версиях ядра была реализована специальная подсистема для мониторинга сети в Linux → её и использует ss

Преимущества ss:
	+ помощью этой утилиты вы можете получить больше информации о сетевых подключениях;
	+ работает ss гораздо быстрее.

Пакет, содержащий утилиту ss: iproute

	‼ утилита ss работает в Linux на основе подсистемы ядра.

Синтаксис утилиты
	
	$ ss опции [фильтр_состояния] [фильтр_адреса]
	
Для удобства вывод команды ss можно фильтровать с помощью grep:

	$ ss опции | grep шаблон

	опции
		→ указывает различные параметры отображения и фильтрации информации
	фильтры по состоянию и адресу
		→ позволяют выполнять мониторинг сетевых подключений в Linux, только тех что нужно 
		  (только открытых | закрытых | на этапе подключения)

Опции утилиты ss:
	-h, --help  = show summary of options. 
	-V, --version  = вывести версию утилиты 
	-n, --numeric  = не пытаться определять имена служб
	-r, --resolve  = определять сетевые имена адресов с помощью DNS (address/ports → resolve)
	-a, --all  = отобразить все сокеты (открытые соединения)
	-l, --listening  = показать только прослушиваемые сокеты
	-o, --options  = показать информацию таймера
	-e, --extended  = выводить расширенную информацию о сокете
	-m, --memory  = show socket memory usage. 
	-p, --processes  = показать процессы (отобразить PID процессов), использующие сокет 
	-i, --info  = посмотреть внутреннюю информацию TCP
	-s, --summary  = (сводная) статистика использования сокета
		  # Эта опция не разбирает списки сокетов, получая сводку из различных источников.
		  # Это полезно, когда количество сокетов настолько велико, что разбор /proc/net/tcp становится мучительным.
	-f FAMILY, --family=FAMILY  = отобразить сокеты типа FAMILY (unix, inet, inet6, link, netlink)
	
<--вывести сокеты определённого протокола-->
	-4, --ipv4  = Display only IP version 4 sockets (alias for -f inet). 
	-6, --ipv6  = Display only IP version 6 sockets (alias for -f inet6). 
	-0, --packet  = Display PACKET sockets. 
	-t, --tcp  = Display only TCP sockets. 
	-u, --udp  = Display only UDP sockets. 
	-d, --dccp  = Display only DCCP sockets. 
	-w, --raw  = Display only RAW sockets. 
	-x, --unix  = Display only Unix domain sockets

‼ Если вызывать ss [-p] без sudo, процессы не будут отображаться

Наиболее интересные примеры:
	► Список всех UDP соединений: $ ss -ua
	► Список всех слушающих UDP (TCP) соединений:
		$ ss -lu   ($ ss -lt)
	
	► Фильтр соединений по номеру порта (для отображения всех соединений сокетов с портом назначения или исходным портом ssh)
		$ ss -at '( dport = :22 or sport = :22 )'
		$ ss -at '( dport = :ssh or sport = :ssh )'
	
	► Фильтр по соединению
		$ ss -t state listening			# отфильтровать TCP-соединение с прослушиванием состояния
		$ ss -tr state established '( dport = :22 or sport = :22 )'