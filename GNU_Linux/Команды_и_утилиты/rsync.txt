Rsync
{ sources:
"rsync(1) - Linux man page":https://linux.die.net/man/1/rsync,
"Установка, настройка и примеры синхронизации Rsync":https://selectel.ru/blog/rsync-guide/,
"Примеры синхронизации Rsync":https://losst.pro/rsync-primery-sinhronizatsii,
"wiki.opennet.ru - Rsync":http://wiki.opennet.ru/Rsync
}

rsync - быстрый, универсальный, удаленный (и локальный) инструмент для копирования файлов.

Обзор синтаксиса возможных команд

Local:  rsync [OPTION...] SRC... [DEST]
Access via remote shell (Доступ через удаленную оболочку):
  Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]
  Push: rsync [OPTION...] SRC... [USER@]HOST:DEST
  
Access via rsync daemon (Доступ через демон rsync):
  Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
        rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
  Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
        rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST

При использовании только с одним аргументом SRC и без аргумента DEST вместо копирования исходных файлов будет выводиться список исходных файлов.

Описание

  Rsync - это быстрый и необычайно универсальный инструмент для копирования файлов.
  Он может копировать локально, на/из другого хоста через любую удаленную оболочку или на/из удаленного демона rsync.
  Он предлагает большое количество опций, которые контролируют каждый аспект его поведения и позволяют очень гибко определять набор файлов для копирования.
  Он известен своим алгоритмом дельта-передачи.
  Суть алгоритма дельта-передачи: 
    - отправляются только различия между исходными файлами и существующими файлами в месте назначения.
	-> уменьшение объема данных, передаваемых по сети.
	
  Rsync широко используется для
    • резервного копирования и зеркалирования,
	• как улучшенная команда копирования для повседневного использования.

  Rsync находит файлы, которые необходимо передать, используя алгоритм lqquick checkrq (по умолчанию),
  который ищет файлы, изменившиеся по размеру или по времени последнего изменения.
  Любые изменения в других сохраненных атрибутах (в соответствии с запросами опций) производятся непосредственно в файле назначения,
  когда быстрая проверка показывает, что данные файла не нуждаются в обновлении.

Некоторые из дополнительных возможностей rsync:
  ○ поддержка копирования ссылок, устройств, владельцев, групп и разрешений 
  ○ опции exclude и exclude-from, аналогичные GNU tar 
  ○ режим исключения CVS для игнорирования тех же файлов, которые игнорирует CVS 
  ○ может использовать любую прозрачную удаленную оболочку, включая ssh или rsh 
  ○ не требует привилегий суперпользователя 
  ○ конвейеризация передачи файлов для минимизации затрат на задержку 
  ○ поддержка анонимных или аутентифицированных демонов rsync (идеально подходит для зеркалирования)
  

Общие сведения
  Rsync копирует файлы либо на или с удаленного хоста, либо локально на текущем хосте
  ‼(он не поддерживает копирование файлов между двумя удаленными хостами).

  Существует два различных способа связи rsync с удаленной системой:
    1. использование программы remote-shell в качестве транспорта (например, ssh или rsh)
	  - используется, когда путь к источнику или получателю содержит одно двоеточие (:) после спецификации хоста
	  
	2. прямой контакт с демоном rsync через TCP.
	  - происходит, когда путь источника или назначения содержит двойное двоеточие (::) после спецификации хоста,
	    ИЛИ когда указан URL rsync:// 
		‼(см. также раздел lqUSING RSYNC-DAEMON FEATURES VIA A REMOTE-SHELL CONNECTIONrq для исключения из последнего правила).

  В качестве особого случая, если указан один исходный аргумент без назначения, файлы перечисляются в выходном формате, аналогичном lqls -lrq.

  ОЖИДАЕМО: если ни в исходном, ни в конечном пути не указан удаленный хост, копирование происходит локально 
           (см. также опцию --list-only).

Обозначение сторон передачи данных в Rsync:
  локальная сторона == lqclientrq 
  удаленная сторона == lqserverrq.

‼! Не путайте lqserverrq с демоном rsync!
  - демон всегда является сервером,
    а сервер может быть как демоном, так и порожденным процессом remote-shell.

