Команда lsof (LiSt Open Files)
(sources:
  1. https://zalinux.ru/?p=3535
  2. https://manpages.ubuntu.com/manpages/bionic/man8/lsof.8.html)
  3. https://www.opennet.ru/base/sys/lsof_util.txt.html

#################################
## В Linux всё является файлом ##
#################################

lsof позволяет просматривать устройства и процессы, которые обрабатываются, как файлы.

################################################################################################################################
#### 										Теоретическая часть (концепция)													####
################################################################################################################################
# Файл представляет собой набор байтов.
# Программы и устройства 
#	( принтер,
#	  экран,
#	  клавиатура,
#	  мышь,
#	  терминал,
#	  сетевая карта
#	)
#	могут генерировать или принимать потоки байт → в этом качестве они сами проявляются как файлы.
#
#  Многие системные компоненты, такие как клавиатуры, сокеты, принтеры и коммуникационные процессы, принимают или генерируют потоки байтов.
#  Кроме обычных файлов, файлами также являются:
#	 • директории (папки),
#	 • сетевые сокеты (подключения по сети),
#	 • устройства:
#	   >> диски,
#	   >> терминалы,
#	   >> клавиатура,
#	   >> мышь и прочее
#	 •— это всё файлы,
#	 • pipe (технология обмена данными между процессами)
#
#  [ Открытый файл может быть
#    - обычным файлом,
#    - каталогом,
#    - специальным файлом блока,
#    - специальным файлом символа,
#    - исполняемой текстовой ссылкой,
#    - библиотекой,
#    - потоком или сетевым файлом (интернет-сокет, файл NFS или сокет домена UNIX)
#
#  ]
#
# ‼ Эта концепция устройства упростила реализацию операционной системы Unix:
#	небольшой набор обработчиков, инструментов и API-интерфейсов может быть создан для обработки широкого спектра различных ресурсов.
#
################################################################################################################################

Команда ls - информация о файлах, находящихся в файловой системе (на диске).
Команда lsof - информация обо всех других процессах и устройствах, которые рассматриваются как файлы.
	Она выводит списки открытых файлов в системе = она перечисляет всё, что обрабатывается, как если бы это был файл.

► Команда lsof используется чтобы узнать, какие файлы открыты и каким процессом.

[?] Для чего нужно знать, какие файлы открыты?
[!] Эта информация поможет узнать о многом происходящем в системе, об устройстве и работе Linux,
    + помогает решить проблемы, например,
	когда вы не можете размонтировать диск ← устройство используется, но вы не можете найти, какой именно программой.

[‼] Многие процессы или устройства, о которых lsof может сообщать, принадлежат root или были запущены пользователем root,
 → поэтому вам нужно будет использовать команду sudo с lsof.

#########################################################################################################################
	Использование команды lsof
# lsof == LiSt of Open Files
	
# lsof необходима, когда при попытке отмонтировать устройство возникает предупреждение типа:
# > umount: /mnt/cdrom: device is busy

Поскольку список открытых файлов может быть слишком длинным, можно передать вывод команде less
	$ sudo lsof | less

Вывод команды lsof:
	| COMMAND | PID | TID | TASKCMD | USER | FD | TYPE | DEVICE | SIZE/OFF | NODE | NAME |

► Значение столбцов lsof

    • COMMAND: Имя команды, связанной с процессом, который открыл файл.
    • PID: Идентификационный номер процесса, который открыл файл.
    • TID: Идентификационный номер задачи (потока). 
		   (Пустой столбец означает, что это не задача; это процесс).
    • TASKCMD: это имя команды задачи. Обычно это будет то же самое, что и процесс, названный в столбце COMMAND,
			   но некоторые реализации задач (например, Linux) позволяют задаче изменить имя своей команды.
    • USER: это идентификационный номер пользователя или логин пользователя, которому принадлежит процесс, обычно то же самое, что сообщает ps.
		    Однако в Linux USER — это идентификационный номер пользователя или логин, который владеет каталогом в /proc, где lsof находит информацию о процессе.
			Обычно это то же самое значение, которое сообщает ps, но может отличаться, если процесс изменил свой эффективный идентификатор пользователя
			(также см. "Что такое файловая система /proc в Linux": https://zalinux.ru/?p=2690)
    • FD: показывает файловый дескриптор файла.
	      {*}(↓ Файловые дескрипторы описаны ниже ↓)
    • TYPE: тип узла, связанного с файлом.
		    {**}l(↓ Виды данных типов описаны ниже ↓)
    • DEVICE: содержит номера устройств, разделённые запятыми, для специальных символьных, специальных блочных, обычных файлов, каталогов или NFS.
		      Также может отображаться базовый адрес или имя устройства с сокетом Linux AX.25.
    • SIZE/OFF: Показывает размер файла или смещение файла в байтах.
    • NODE: Показывает номер узла локального файла или номер узла NFS-файла на хосте сервера или тип интернет-протокола.
		    Может отображаться STR для потока, IRQ или номер инода устройства с сокетом Linux AX.25.
    • NAME: для обычных файлов показывает имя точки монтирования и файловой системы, в которой находится файл.
	        Для других типов файлов здесь указываются специфичные для них данные, подробности будут даны ниже.

► Наиболее популярные файловые дескрипторы:
	• cwd: текущий рабочий каталог.
    • err: информация об ошибке FD (см. столбец NAME).
    • ltx: текст разделяемой библиотеки (код и данные).
    • m86: файл сопоставления DOS Merge.
    • mem: файл с отображением в памяти.
    • mmap: устройство с отображением в памяти.
    • pd: родительский каталог.
    • rtd: корневой каталог.
    • txt: текст программы (код и данные)

Символы режима:
    • r: доступ для чтения.
    • w: доступ для записи.
    • u: Доступ для чтения и записи.
    •  : [символ пробела], если режим неизвестен и нет символа блокировки.
    • -: режим неизвестен и есть символ блокировки.

Символ блокировки может быть одним из:

    r: Блокировка чтения на часть файла.
    R: Блокировка чтения на весь файл.
    w: Блокировка записи на часть файла.
    W: Блокировка записи на весь файл.
    u: Блокировка чтения и записи любой длины.
    U: неизвестный тип блокировки.
     : [символ пробела]. Нет блокировки.

В столбце TYPE может отображаться более 70 записей.
Самые часто встречающиеся из них:
    ♦ REG: Обычный файл файловой системы.
    ♦ DIR: Директория.
    ♦ FIFO: Специальный файл FIFO (First In First Out).
    ♦ CHR: Специальный символьный файл.
    ♦ BLK: Специальный блочный файл.
    ♦ INET: Интернет-сокет.
    ♦ unix: Доменный сокет UNIX.
    ♦ IPv4: IPv4 сокет.
    ♦ IPv6: Файлы IPv6 сети — даже если её адрес IPv4 преобразован в IPv6 адрес.
    ♦ sock: Сокет неизвестного домена.
    ♦ DEL: Указатель Linux для удалённого файла.
    ♦ LINK: Файл символьной ссылки.
    ♦ PIPE: Труба (pipe) — способ обмена данными между процессами.

► Колонка NAME:
	В этом поле может быть:
	  • имя точки монтирования и файловой системы, в которой находится файл;
      • или имя файла, указанное в опции имён (после разрешения всех символических ссылок);
      • или имя символьного специального или блочного специального устройства;
      • или локальный и удалённый Интернет-адреса сетевого файла; <*> 
      • или адрес или имя сокета домена UNIX 
	    (возможно, включая имя устройства клонирования потока, имя пути объекта файловой системы, локальные и внешние адреса ядра, информацию о паре сокетов и связанный адрес vnode);
      • или имена локальной и удалённой точек монтирования файла NFS;
      • или «STR», за которым следует имя потока;
      • или имя символьного устройства потока, за которым следует «->» и имя потока, или список имён потоковых модулей, разделённых знаком «->»;
      • или другое значение, характерное обычно для определённых ОС;

[ <*>
  после имени локального хоста или IP-адреса ставится двоеточие (':'), порт, «->» и удалённый адрес, состоящий из двух частей; IP-адреса могут быть представлены в виде чисел или имён, в зависимости от опций +|-M, -n и -P; номера IPv6, разделённые двоеточиями, заключаются в квадратные скобки; адреса IPv4 INADDR_ANY и IPv6 IN6_IS_ADDR_UNSPECIFIED, а также нулевые номера портов представлены звёздочкой ('*'); за адресом назначения UDP может следовать количество времени, прошедшее с момента отправки последнего пакета в пункт назначения; за удалёнными адресами TCP, UDP и UDPLITE может следовать информация TCP/TPI в скобках, такая как: состояние (например, «(ESTABLISHED)», «(Unbound)»), размеры очереди и размеры окон (не для всех диалектов) — вывод в духе того, что сообщает netstat; см. описание опции -T или описание поля TCP/TPI в ВЫХОДЕ ДЛЯ ДРУГИХ ПРОГРАММ для получения дополнительной информации о состоянии, размере очереди и размере окна;
]

Применение lsof
1. Как видеть процессы, которые открыли файл
	$ lsof /path/to/file
	
2. Если требуется вывести полное имя (опция +c)
	$ lsof +c w /path/to/file
	# где w - максимальное количество начальных символов имени, предоставляемого диалектом UNIX, команды UNIX, связанной с процессом, для печати в столбце COMMAND.
	(По умолчанию w = 9).
	Если w = 0, будут напечатаны все командные символы, переданные в lsof диалектом UNIX.
	Если w меньше длины заголовка колонки 'COMMAND', она будет увеличена до этой длины.

3. Как посмотреть все файлы, открытые в определённом каталоге (на примере /var/log/)
	$ sudo lsof +D /var/log/

4. Как показать только обычные файлы (исключив все другие виды файлов (устройства, сокеты и т. д.))
	$ sudo lsof /

5. Как увидеть файлы, которые открыты указанной программой или командой [-c]
	$ lsof -c <COMMAND>
	# ‼ можно указать более одного поискового запроса для lsof одновременно
	Пример:
		$ sudo lsof -c ssh -c systemd

6. Как посмотреть файлы, открытые определённым пользователем [-u]
	$ sudo lsof -u <USER>

7. Как исключить файлы, открытые определённым пользователем [^]
	$ sudo lsof -u ^<USER>
	
	# Отрицание (^) можно применять с любыми опциями, для которых можно указать какое-либо значение,
	# то есть с именами пользователей, именами команд, идентификаторами процессов, папками и т.д.
	# ‼ Пример: отобразить все файлы, которые были открыты в директории /home, но которые открыты процессами, не принадлежащими пользователю mial
		$ sudo lsof +D /home -u ^mial

8. Как найти файлы, которые открыты указанным процессом [-p]
	$ sudo lsof -p <PID>

9. Как узнать идентификаторы процессов, которые открыли файл [-t]
	$ sudo lsof -t /usr/share/mime/mime.cache
	# Идентификаторы процессов, открывших файл, отображаются в виде простого списка.

10. Как вывести размер открытых файлов [-s]
	$ lsof -s
	# Для сортировки по размеру обычных файлов выполните следующую команду:
	$ lsof / -s | sort -rnk 7

11. Как узнать какие процессы и сколько потребляют памяти в области Buff/Cache
	# Buffer/cache используются виртуальными файловыми системами, а также для оптимизации чтения/записи на диск,
	# то есть файлы, которые уже были прочитаны с диска, размещены там для ускоренного доступа
	  $ lsof -s | sort -rnk 7 | less
	
	# Buffer/cache потребляет не столько ядро, сколько всякие браузеры, офисные программы, графическое окружение, программы, имеющие большие логи и т. п.
	# То есть все программы, которые открывают много файлов и/или большие файлы и держат их открытыми.
	

12. Как комбинировать условия поиска lsof (логические И и ИЛИ)
	# ‼ Если просто указать
		$ sudo lsof [-key1] <val1> [-key2] <val2>
	# так не сработает, потому что lsof выполняет поиск ИЛИ
	# 9Если вы предоставите несколько поисковых терминов, lsof вернёт любой файл, 
	# который соответствует первому поисковому запросу или второму поисковому запросу и так далее.)
	
	‼ Чтобы lsof выполняла поиск "И" ("И"-отбор), нужно использовать опцию -a
	(Где бы ни находилась опция -a, она вызывает ANDing всех опций выбора.)
	Пример:
		$ sudo lsof -u mial -c systemd		# выведет шляпу
		$ sudo lsof -u mial -c systemd -a	# выведет только то, что соответствует обоим условиям


13. Автоматическое обновление выводимой информации lsof  [+r <sec>/ -r <sec> [-F]]
	# +|-r sec переводит lsof в режим повтора
	# В этом режиме lsof
	#  • выводит список открытых файлов, выбранных другими опциями,
	#  • делает задержку t секунд (по умолчанию 15)
	#  • затем повторяет листинг и задержку 
	# и повторяет листинг до тех пор, пока его не остановит условие, определяемое префиксом опции
		$ sudo lsof -u user -c ssh -a -r5
	
	# Использование опции повтора в любом формате заставляет lsof отображать результаты как обычно,
	# но добавляет пунктирную линию внизу экрана (=====), если не указан ключ -F (тогда разделитель - `m')
	# Программа ожидает количество секунд, указанное в командной строке, а затем обновляет дисплей новым набором результатов. 
	# С опцией -r это режим повтора бесконечен; lsof должен быть прерван сигналом прерывания (Ctrl+C) или выхода
	# В формате +r режим повтора завершится в первом цикле, когда в списке не будет открытых файлов - и, конечно, когда lsof будет остановлен прерыванием или сигналом quit
	
14. Отображение файлов, связанных с подключениями к Интернету [-i]
	# Опция -i позволяет просматривать файлы, открытые процессами, связанными с сетевыми и Интернет-соединениями
		$ sudo lsof -i
	# Если вы не хотите, чтобы цифровые обозначения портов заменялись на имена (например, http вместо 80), то добавьте опцию -P
		$ sudo lsof -i -P
		
15. Отображение файлов, связанных с подключениями к Интернету, по идентификатору процесса
	$ sudo lsof -i -a -p <PID>
	$ sudo lsof -i -a -p 606
	
16. Отображение файлов, связанных с Интернет-подключениями и командами
	$ lsof -i -a -c <PROCESS>
	$ lsof -i -a -c ssh

17. Отображение файлов, связанных с Интернет-подключениями и портами
	$ lsof -i :<PORT>

18. Как показать сокеты только для определённого протокола
	$ lsof -i <PROTOCOL>
	# Пример:
	$ lsof -i TCP
	$ lsof -i UDP
	$ sudo lsof -i tcp

19. Как просмотреть только IPv4 или IPv6 соединения
	$ sudo lsof -i 4
	$ sudo lsof -i 6

20. Как просмотреть сетевые соединения в диапазоне портов
	$ lsof -i TCP:1-1024
	$ lsof -i TCP:1-1024,8000-9000,10000

21. Как увидеть сетевые подключения определённого хоста ([-i @host])

22. Сочетание фильтров сетевых соединений
	$ lsof -i ПРОТОКОЛ@ХОСТ:ПОРТ

‼ В фильтрах lsof вы можете использовать регулярные выражения [-c]
	Пример:
		$ lsof -c /^..o.$/i
		$ lsof -c /^....$/i
