Утилита fdisk

[sources:]
  1) "Команда fdisk в Linux": https://losst.pro/komanda-fdisk-v-linux
  2) "fdisk(8) - Linux man page": https://linux.die.net/man/8/fdisk
  3) "fdisk(8) — Linux manual page": https://man7.org/linux/man-pages/man8/fdisk.8.html


Syntax (Synopsis):
fdisk [-uc] [-b sectorsize] [-C cyls] [-H heads] [-S sects] device
fdisk -l [-u] [device...]

fdisk -s partition...

fdisk -v

fdisk -h


--[Description]--

  Жесткие диски можно разделить на один или несколько логических дисков, называемых разделами (partitions).
  Это разделение описано в таблице разделов, расположенной в секторе 0 диска.

# В мире BSD говорят о «фрагментах диска» ('disk slices')
  и «метке диска» ('disklabel').

  Linux нужен как минимум один раздел, а именно для корневой файловой системы (root FS).
  Он может использовать файлы подкачки и/или разделы подкачки (swap files || swap partitions),
  но последние более эффективны.
  Поэтому обычно требуется второй раздел Linux, предназначенный для раздела подкачки.

  На Intel-совместимом оборудовании BIOS, загружающий систему, часто может получить доступ только к первым 1024 цилиндрам диска.
  По этой причине люди с большими дисками часто создают третий раздел размером всего в несколько мегабайт, обычно монтируемый в /boot,
  для хранения образа ядра и нескольких вспомогательных файлов, необходимых при загрузке, чтобы убедиться, что все это доступно BIOS.

  По соображениям безопасности, удобства администрирования и резервного копирования или тестирования может потребоваться большее,
  чем минимальное, количество разделов.


fdisk (в первой форме вызова)
  - это управляемая меню программа для создания и работы с таблицами разделов (partition tables).
  Она понимает таблицы разделов типа DOS и дисковые метки типа BSD или SUN.

  fdisk НЕ ПОНИМАЕТ GUID Partition Table (GPT) и не предназначена для работы с большими разделами.
  В этом случае используйте более продвинутую GNU parted(8).


  Устройство (device) обычно имеет имя /dev/sda, /dev/sdb или подобное.
  Имя устройства ОТНОСИТСЯ КО ВСЕМУ ДИСКУ.

  Старые системы без libata
  (= библиотека, используемая в ядре Linux для поддержки хост-контроллеров и устройств ATA)
  делают различие между IDE и SCSI дисками.
  В этом случае имя устройства будет /dev/hd* (IDE) или /dev/sd* (SCSI).

**********************
* Раздел (Partition) *
**********************
  Раздел - это имя устройства, за которым следует номер раздела.
  Например, /dev/sda1 - это первый раздел на первом жестком диске в системе.
# См. также документацию по ядру Linux (файл Documentation/devices.txt).

  Дисковая метка (disklabel) типа BSD/SUN может описывать 8 разделов, третий из которых должен быть разделом «весь диск» ('whole disk').

[!] НЕ НАЧИНАЙТЕ раздел, который фактически использует свой первый сектор (например, раздел подкачки), с цилиндра 0,
    => так как это приведет к разрушению метки диска.

  Дисклейбл типа IRIX/SGI может описывать 16 разделов,
  одиннадцатый из которых должен быть целым разделом 'volume',
  а девятый должен быть помечен как 'volume header'.
  Заголовок тома будет также покрывать таблицу разделов, т. е. он начинается с нулевого блока и по умолчанию простирается на пять цилиндров.
  Оставшееся место в заголовке тома может быть использовано для записей каталога заголовка.

  Никакие разделы не могут перекрывать заголовок тома.
  Также не следует изменять его тип и создавать на нем файловую систему, так как при этом будет потеряна таблица разделов.
(!) Используйте этот тип метки только при работе с Linux на машинах IRIX/SGI или дисками IRIX/SGI под Linux.


*****************************
*  DOS type partition table *
*****************************

  Таблица разделов типа DOS может описывать неограниченное количество разделов.
  В секторе 0 есть место для описания 4 разделов (называемых «первичными»).
  Один из них может быть расширенным разделом;
    это блок, содержащий логические разделы, дескрипторы которых находятся в связанном списке секторов,
    каждый из которых предшествует соответствующим логическим разделам.
  Четыре первичных раздела, присутствующие или нет, получают номера 1-4.
  Логические разделы начинают нумероваться с 5.

  В таблице разделов типа DOS начальное смещение и размер каждого раздела хранятся двумя способами:
    1 - как абсолютное число секторов (32 бита)
      и
    2 - как тройка Цилиндры/Головки/Секторы (10+8+6 бит).

  В первом случае все в порядке - с 512-байтными секторами это будет работать вплоть до 2 ТБ.
  Во втором случае возникают две проблемы:
    1) эти поля C/H/S могут быть заполнены только тогда, когда известно количество головок и секторов на дорожке.
    2) даже если мы знаем, какими должны быть эти числа, имеющихся 24 бит недостаточно.
       DOS использует только C/H/S,
       Windows - оба,
       Linux никогда не использует C/H/S.


  Если возможно, fdisk получит геометрию диска автоматически.
  Это не обязательно физическая геометрия диска
  (действительно, современные диски не имеют ничего похожего на физическую геометрию,
   и уж тем более не могут быть описаны в упрощенной форме цилиндров/головок/секторов),

  НО это геометрия диска, которую MS-DOS использует для таблицы разделов.


  Обычно по умолчанию все идет хорошо, и проблем не возникает, если Linux - единственная система на диске.

(!) Однако если диск должен использоваться СОВМЕСТНО С ДРУГИМИ ОПЕРАЦИОННЫМИ СИСТЕМАМИ,
    часто бывает полезно позволить fdisk из другой операционной системы создать хотя бы один раздел.

  Когда Linux загружается, он смотрит на таблицу разделов и пытается определить,
  какая (фальшивая, fake) геометрия требуется для хорошего сотрудничества с другими системами.


  Каждый раз, когда распечатывается таблица разделов, выполняется проверка согласованности записей в таблице разделов.
  Эта проверка проверяет, что
    * физические и логические начальные и конечные точки идентичны,
    * и что раздел начинается и заканчивается на границе цилиндра
      (за исключением первого раздела).

  Некоторые версии MS-DOS создают первый раздел, который начинается не на границе цилиндра, а в секторе 2 первого цилиндра.
  Разделы, начинающиеся в цилиндре 1, не могут начинаться на границе цилиндра, но это вряд ли вызовет затруднения,
  если только на вашей машине не установлена OS/2.

[!] Перед выходом из программы после обновления таблицы разделов выполняется
    * sync() (синхронизация)
    * и BLKRRPART ioctl() (перечитывание таблицы разделов с диска).

  Когда-то давно после использования fdisk требовалась перезагрузка.
  Не думаю, что сейчас это так - действительно, слишком быстрая перезагрузка может привести к потере еще не записанных данных.

[ОБРАТИТЕ ВНИМАНИЕ]
  и ядро, и дисковое оборудование могут буферизовать данные.

---
---<sudo fdisk /dev/sda>---
# help (m):
Help:

  GPT
   M   enter protective/hybrid MBR

  Generic
   d   delete a partition
   F   list free unpartitioned space
   l   list known partition types
   n   add a new partition
   p   print the partition table
   t   change a partition type
   v   verify the partition table
   i   print information about a partition

  Misc
   m   print this menu
   x   extra functionality (experts only)

  Script
   I   load disk layout from sfdisk script file
   O   dump disk layout to sfdisk script file

  Save & Exit
   w   write table to disk and exit
   q   quit without saving changes

  Create a new label
   g   create a new empty GPT partition table
   G   create a new empty SGI (IRIX) partition table
   o   create a new empty DOS partition table
   s   create a new empty Sun partition table

---

(3)
  fdisk
    - это диалоговая программа для создания и работы с таблицами разделов.
    Она понимает таблицы разделов
      * GPT,
      * MBR,
      * Sun,
      * SGI
      * и BSD.

(!) Блочные устройства могут быть разделены на один или несколько логических дисков, называемых разделами (partitions).
  Это разделение записывается в таблицу разделов, которая обычно находится в секторе 0 диска.
  (В мире BSD говорят о `disk slices' и`disklabel').

  По умолчанию все разделы определяются ограничениями ввода-вывода (I/O limits) устройства (топологией).

  fdisk умеет оптимизировать разметку диска для размера сектора 4K и использовать смещение выравнивания на современных устройствах для MBR и GPT.

(!) Всегда стоит следовать настройкам fdisk по умолчанию,
    так как значения по умолчанию (например, первый и последний секторы раздела) и размеры разделов, указанные с помощью нотации +/-<size>{M,G,...},
    всегда выравниваются в соответствии со свойствами устройства.

(*) CHS (Cylinder-Head-Sector) адресация устарела и не используется по умолчанию.

[!] Пожалуйста, НЕ СЛЕДУЙТЕ СТАРЫМ СТАТЬЯМ и рекомендациям с советами
---
fdisk -S <n> -H <n>
---
  для SSD или 4K-секторов.
  Обратите внимание, что
  * partx(8) предоставляет богатый интерфейс для скриптов для печати раскладок дисков,
  * fdisk же в основном предназначен для людей.

  Обратная совместимость в выводе fdisk не гарантируется.
  Входные данные (команды) всегда должны быть обратно совместимы.