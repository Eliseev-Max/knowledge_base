The difference between `scp` and `rsync`

[sources:]

1) https://stackoverflow.com/questions/20244585/how-does-scp-differ-from-rsync
2) "SCP vs RSYNC – что из них использовать в продакшене?": https://itsecforu.ru/2024/02/27/scp-vs-rsync-kakoi-iz-nikh-ispolzovat-v-proizvo/


Основное различие между этими инструментами заключается в том, как они копируют файлы.

scp
  в основном считывает исходный файл и записывает его в место назначения.
  Он выполняет простое линейное копирование локально или по сети.


rsync
  также копирует файлы локально или по сети.
  НО в нем используется специальный алгоритм дельта-передачи и несколько оптимизаций, которые значительно ускоряют операцию.

Рассмотрим вызов.

******************
* rsync A host:B *
******************

  rsync
    * проверит размеры файлов и временные метки изменений как для A, так и для B
    * и пропустит любую дальнейшую обработку, если они совпадают.

  Если целевой файл B уже существует, алгоритм дельта-передачи проследит за тем, чтобы по проводам передавались только различия между A и B.

  rsync
    1) запишет данные во временный файл T,
    2) а затем заменит целевой файл B на T, чтобы обновление выглядело "атомарным" для процессов, которые могут использовать B.


Еще одно различие между ними касается вызова.

rsync имеет множество опций командной строки, позволяющих пользователю точно настраивать его поведение.
rsync
  + поддерживает сложные правила фильтрации,
  + работает в пакетном режиме,
  + работает в режиме демона и т.д.

scp имеет всего несколько переключателей.


##########
# Резюме #
##########

Случаи, в которых рекомендуется использовать scp:
  -> выполнения ПОВСЕДНЕВНЫХ ЗАДАЧ.
  Команды, которые вы время от времени вводите в своей интерактивной оболочке.
  Им проще пользоваться, и в таких случаях оптимизация rsync не сильно поможет.

Случаи, в которых рекомендуется использовать rsync:
  -> Для повторяющихся задач, таких как задания cron.

  Как уже упоминалось, при многократных вызовах он будет использовать уже переданные данные, выполняя их очень быстро и экономя ресурсы.
  Это отличный инструмент для синхронизации двух каталогов

[!] Кроме того, при работе с большими файлами используйте rsync с параметром -P.
    Если передача прервана, вы можете возобновить ее с того места, где она была остановлена, повторно введя команду.

# Смотрите ответ Сида Кшатрия: https://stackoverflow.com/questions/20244585/how-does-scp-differ-from-rsync/21476688#21476688
'''
  rsync может быть полезен при работе с медленными и ненадежными соединениями.
  Таким образом, если загрузка прерывается на середине работы с большим файлом,
  rysnc сможет продолжить с того места, где она была прервана, при повторном запуске.

Используйте:
```
rsync -vP username@host:/path/to/file .
```
# Параметр -P сохраняет частично загруженные файлы, а также показывает ход выполнения.

'''


Наконец, обратите внимание, что rsync:// протокол аналогичен обычному HTTP: незашифрован и не проверяет целостность.

[!] Обязательно ВСЕГДА используйте rsync через SSH (как в примерах из приведенного выше вопроса), а не через протокол rsync,
    если только вы действительно не знаете, что делаете.

scp ВСЕГДА будет использовать SSH в качестве базового транспортного механизма, который гарантирует целостность и конфиденциальность,
=> так что это еще одно различие между двумя утилитами.