[sources:
  ► https://losst.ru/gruppy-polzovatelej-linux
  ► https://help.ubuntu.ru/wiki/%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D0%B8_%D0%B8_%D0%B3%D1%80%D1%83%D0%BF%D0%BF%D1%8B
  ► https://manpages.ubuntu.com/manpages/xenial/ru/man8/addgroup.8.html
]

Пользователю-владельцу файла выдаются полномочия на чтение, запись и исполнение файла (rwx).
Поскольку в Linux все является файлом, то такая система позволяет регулировать доступ к любому действию в этой ОС
с помощью установки прав доступа на файлы.

Группы пользователей в Linux позволяют расширить возможности управления правами.
Наиболее важное предназначение групп пользователей - управление правами программ,
особенно их доступом к оборудованию (файлы каталога /dev)

Управление пользователями:
	► добавление пользователя
		$ sudo useradd [options] <new_user>
[см. опции:

    -c, --comment,
    -d, --home (--home-dir) = новый пользователь будет создан с использованием HOME_DIR в качестве значения для каталога входа пользователя;
    -G, --groups GR1,GR2,GRn - список доп.групп
    -m, --create-home - создать домашний каталог, если он не существует
    ## useradd создаст домашний каталог, если параметр CREATE_HOME в файле /etc/login.defs не имеет значения no
    -r, --system
      = Создать системную учетную запись.
        Системные пользователи будут созданы без информации о старении в /etc/shadow,
        а их числовые идентификаторы будут выбраны в диапазоне SYS_UID_MIN-SYS_UID_MAX, определенном в /etc/login.defs,
        вместо UID_MIN-UID_MAX (и их аналогов GID для создания групп).
        Обратите внимание, что useradd НЕ БУДЕТ СОЗДАВАТЬ ДОМАШНИЙ КАТАЛОГ для такого пользователя,
        независимо от настройки по умолчанию в /etc/login.defs (CREATE_HOME).
        Вы ДОЛЖНЫ УКАЗАТЬ опцию -m, если хотите, чтобы был создан домашний каталог для системной учетной записи.

    -u, --uid UID
      = Числовое значение идентификатора пользователя (UID).
        Это значение должно быть уникальным, если не используется опция -o.
        Значение должно быть неотрицательным.
        По умолчанию используется наименьшее значение идентификатора, ПРЕВЫШАЮЩЕЕ 999 и большее,
        чем у всех остальных пользователей.
        Значения от 0 до 999 обычно резервируются для СИСТЕМНЫХ УЧЕТНЫХ ЗАПИСЕЙ.

    -U, --user-group
      = Создать группу с тем же именем, что и у пользователя, и добавить пользователя в эту группу.
      (!) Поведение по умолчанию
        (если опции -g, -N и -U не указаны)
        определяется переменной USERGROUPS_ENAB в файле /etc/login.defs.

<ИЗМЕНЕНИЕ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ>
<(Changing the default values)>

  При вызове только с опцией -D, useradd ОТОБРАЗИТ текущие значения ПО УМОЛЧАНИЮ.
(*) При вызове с опцией -D плюс другие опции, useradd обновит значения по умолчанию для указанных опций.

Допустимыми опциями, изменяющими значения по умолчанию, являются:
  -b, --base-dir
    = базовый каталог по умолчанию для системы, если не указан -d HOME_DIR.
    # BASE_DIR объединяется с именем учетной записи для определения домашнего каталога.
    # если опция не указана, useradd будет использовать базовый каталог,
    ● указанный переменной HOME в /etc/default/useradd,
    ● или /home (по умолчанию)
  -e, --expiredate EXPIRE_DATE
    = The date on which the user account is disabled.
      This option sets the EXPIRE variable in /etc/default/useradd.

  -f, --inactive INACTIVE
    = The number of days after a password has expired before the account will be disabled.
      This option sets the INACTIVE variable in /etc/default/useradd.

  -g, --gid GROUP - первичная группа (должна существовать)

  -s, --shell
    = имя оболочки входа пользователя в систему.
      По умолчанию это поле оставлено пустым,
      что заставляет систему выбрать оболочку входа по умолчанию:
      ● указанную переменной SHELL в /etc/default/useradd,
      ● или пустую строку по умолчанию.
]
		просмотр настроек по умолчанию: $ useradd -D
		## При вызове без опции -D команда useradd создает новую учетную запись пользователя, используя значения,
		## указанные в командной строке, плюс значения по умолчанию из системы.
    ## В зависимости от опций командной строки, команда useradd обновляет системные файлы,
    ## а также может создать домашний каталог нового пользователя и скопировать начальные файлы.

  При создании пользователей командой useradd автоматически создаются
    - одноимённая группа
	- (в некоторых системах) домашний каталог пользователя [!НО лучше добавлять опцию -m].

[Пример:]
  $ sudo useradd -m -u 1000 -U -G docker jenkins

[‼] в Debian рекомендуется использовать: $ adduser
		  

    • groupadd — поможет создать отдельную группу.
	## addgroup - в Debian
	
    • passwd — изменяет пароль пользователя.
    • usermod — для других изменений пользователя  (смена группы или домашнего каталога, может быть, блокировки)
    • userdel — удаляет пользователя.

[изменение пользователя]
  $ usermod [options] user_account (см. ниже)

[изменение пароля]
  $ sudo passwd [options] <user_account>

[получение информации о пользователях]
  $ w = вывод информации
	  • имя пользователя,
	  • рабочий терминал,
	  • время входа в систему,
	  • информацию о потребленных ресурсах CPU
	  • имя запущенной программы
		  о всех вошедших в систему пользователях
	
  $ who ▬ вывод информации (имя пользователя, рабочий терминал, время входа в систему) о всех вошедших в систему пользователях.
  $ who am i \\ whoami \\ id ▬ вывод вашего имени пользователя
  $ users ▬  вывод имен пользователей, работающих в системе
  $ id <username> ▬  вывод о идентификаторах пользователя: его uid, имя_пользователя, gid и имя первичной группы и список групп в которых состоит пользователь
  $ groups <username> ▬ вывод списка групп в которых состоит пользователь

[удаление пользователям]
  $ sudo userdel [options] <username>
	
[смена пользователя]
  $ su <username>	▬ вызвать оболочку пользователя username (=сменить пользователя) (останемся в каталоге предыдущего пользователя)
  $ su - (-l, --login) <username> ▬ выполнить регистрацию в системе как пользователь username

Описание групп:

    daemon - от имени этой группы и пользователя daemon запускаютcя сервисы, которым необходима возможность записи файлов на диск.
    sys - группа открывает доступ к исходникам ядра и файлам include сохраненным в системе
    sync - позволяет выполнять команду /bin/sync
    games - разрешает играм записывать свои файлы настроек и историю в определенную папку
    man - позволяет добавлять страницы в директорию /var/cache/man
    lp - позволяет использовать устройства параллельных портов
    mail - позволяет записывать данные в почтовые ящики /var/mail/
    proxy - используется прокси серверами, нет доступа записи файлов на диск
    www-data - с этой группой запускается веб-сервер, она дает доступ на запись /var/www, где находятся файлы веб-документов
    list - позволяет просматривать сообщения в /var/mail
    nogroup - используется для процессов, которые не могут создавать файлов на жестком диске, а только читать, обычно применяется вместе с пользователем nobody.
    adm - позволяет читать логи из директории /var/log
    tty - все устройства /dev/vca разрешают доступ на чтение и запись пользователям из этой группы
    disk - открывает доступ к жестким дискам /dev/sd* /dev/hd*, можно сказать, что это аналог рут доступа.
    dialout - полный доступ к серийному порту
    cdrom - доступ к CD-ROM
    wheel - позволяет запускать утилиту sudo для повышения привилегий
    audio - управление аудиодрайвером
    src - полный доступ к исходникам в каталоге /usr/src/
    shadow - разрешает чтение файла /etc/shadow
    utmp - разрешает запись в файлы /var/log/utmp /var/log/wtmp
    video - позволяет работать с видеодрайвером
    plugdev - позволяет монтировать внешние устройства USB, CD и т д
    staff - разрешает запись в папку /usr/local

---
Файлы и их принадлежность к группам

	• посмотреть владельца файла, права пользователя и группы:
		$ ls -l
		
	• сменить группу для файла: 
		$ chgrp имя_группы имя_файла
	
	• создать группу:
		$ sudo groupadd test
		
  usermod
	- изменяет учётную запись пользователя.
	Синтаксис:
		$ usermod [опции] учётная_запись
		
	Описание:
		Команда usermod изменяет файлы системной учетной записи, чтобы отразить изменения, которые указанные в командной строке.
		
	Опции:
		-a, --append ▬ Добавить пользователя в дополнительную(ые) группу(ы). Используется только с опцией -G
		-G ▬ дополнительные группы, в которые нужно добавить пользователя
		-d, --home <HOME_DIR> ▬ домашний каталог нового пользователя
			Если указан параметр -m, содержимое текущего домашнего каталога будет перемещено в новый домашний каталог,
			который будет создан, если он еще не существует.
		-m, --move-home ▬ переместить содержимое домашнего каталога в новое место
		-g, --gid ▬ Имя или числовой идентификатор новой первичной группы пользователя.
			Группа с таким именем должна существовать
		-s, --shell <SHELL> ▬ имя новой регистрационной оболочки пользователя.
			Если задать пустое значение, то будет использована регистрационная оболочка по умолчанию.
		-u, --uid <UID> ▬ новый числовой идентификатор пользователя (UID).

‼ Предостережения:
	Вы должны убедиться, что названный пользователь не выполняет никаких процессов во время выполнения этой команды,
	  если изменяется числовой идентификатор пользователя, имя пользователя или его домашний каталог. usermod проверяет это в Linux.
	На других платформах он использует utmp только для проверки того, вошел ли пользователь в систему.
	Вы должны изменить владельца любых файлов crontab или заданий вручную.
	Любые изменения, связанные с NIS, должны выполняться на сервере NIS.

Файлы:
	/etc/group ▬ содержит информацию о группах
	/etc/gshadow ▬ содержит защищаемую информацию о группах
	/etc/login.defs ▬ содержит конфигурацию подсистемы теневых паролей
	/etc/passwd ▬ содержит информацию о пользователях
	/etc/shadow ▬ содержит защищаемую информацию о пользователях
	/etc/subgid ▬ Идентификаторы подчиненных групп для каждого пользователя
	/etc/subuid ▬ Идентификаторы подчиненных пользователей для каждого пользователя

# Ознакомиться с перечнем групп можно так:
# $ vi /etc/group 
#	ИЛИ 
# $ cat /etc/group
	
	Примеры использования:
	• добавить пользователя в группу:
		$ sudo usermod -aG имя_группы имя_пользователя
	
	• временное добавление пользователя в группу:
		$ sudo newgrp имя_группы
	
	• посмотреть группы Linux, в которых состоит пользователь:
		$ groups
	
	• изменить группу пользователя:
		$ sudo usermod -g group_name user
	
	• удалить пользователя из группы:
		$ sudo usermod -R группа пользователь
		
	• удалить группу Linux:
		$ sudo delgroup имя_группы
	
###################################################	
#__ Как вывести список всех пользователей Linux __#
###################################################

	Информация о локальных пользователях хранится в файле /etc/passwd.
	Каждая строка в этом файле представляет информацию для входа в систему для одного пользователя.
	Чтобы просмотреть файл, вы можете использовать cat или less:
		$ less /etc/passwd
		$ cat /etc/passwd
		
	Каждая строка в файле содержит семь полей, разделённых двоеточиями, которые содержат следующую информацию:
		• имя пользователя;
		• зашифрованный пароль (x означает, что пароль хранится в файле /etc/shadow);
		• идентификационный номер пользователя (UID);
		• идентификационный номер группы пользователя (GID);
		• полное имя пользователя (GECOS);
		• домашний каталог пользователя;
		• оболочка входа (по умолчанию /bin/bash).

	Отображать только имя пользователя: можно использовать команды awk или cut для печати только первого поля, содержащего имя пользователя:
		$ awk -F: '{ print $1}' /etc/passwd
		# ИЛИ
		$ cut -d: -f1 /etc/passwd
	
	Получение списка всех пользователей с помощью команды getent
		Команда getent отображает записи из баз данных, настроенных в файле /etc/nsswitch.conf,
		включая базу данных passwd, которую можно использовать для запроса списка всех пользователей.
		Чтобы получить список всех пользователей Linux, введите следующую команду:
			$ getent passwd
		# Вывод такой же, как и при отображении содержимого файла /etc/passwd
		Альтернативный способ:
			$ getent passwd | awk -F: '{ print $1}'
			# ИЛИ
			$ getent passwd | cut -d: -f1
	
	Проверка существования пользователя в системе Linux:
		$ getent passwd | grep <Имя_пользователя>
		# ИЛИ
		$ getent passwd mial
	
	Узнать количество учётных записей пользователей в системе:
		$ getent passwd | wc -l
	
	Технической разницы между системой и обычными пользователями нет.
	Системные пользователи:
		► создаются при установке ОС и новых пакетов;
		► можно создать самостоятельно.
	Обычные пользователи:
		► созданы пользователем root или другими пользователями с привелегиями sudo;
		► обычно имеют оболочку для входа в систему и домашний каталог.
	
	UID любого пользователя лежит в диапазоне от UID_MIN до UID_MAX
	Проверить значения UID_MIN и UID_MAX в системе:
		$ grep -E '^UID_MIN|^UID_MAX' /etc/login.defs
	
	# файл /etc/login.defs содержит значения UID

	Более общий вид команды для вывода UID_MIN и UID_MAX:
		$ eval getent passwd {$(awk '/^UID_MIN/ {print $2}' /etc/login.defs)..$(awk '/^UID_MAX/ {print $2}' /etc/login.defs)}


# Разграничение прав пользователей в Ubuntu:
#  https://1cloud.ru/help/linux/nastrojka-prav-polzovatelej-na-ubuntu
#
---<Группы: системные и обычные>---
Разницы между системными и "обычными" группами нет, как нет ее и между системными и обычными пользователями. По традиции человеческим пользователям присваиваются uid от некоторого числа (например, 1000) и выше, а системные пользователи получают uid в диапазоне ниже этого числа.

Фактический номер uid, за исключением специального uid 0, который зарезервирован для root, не имеет никакого значения и не передает никаких привилегий.

Мы различаем пользователей системы и обычных пользователей только потому, что к ним применяется разное отношение. Например, нет смысла отображать системных пользователей в графическом менеджере входа в систему. Кроме того, большинству системных пользователей не нужна оболочка для входа в систему или домашний каталог, в то время как обычным пользователям (как правило) они нужны.

Опция --system команды adduser - это не более чем удобство для администратора, так как она устанавливает ряд параметров в разумные значения для "системной учетной записи". Фактически, вся команда adduser является удобной оберткой вокруг (команд более низкого уровня, таких как useradd и groupadd, которые являются обертками вокруг), по сути, простого редактирования /etc/passwd и /etc/group.

---
# Как (правильно) изменить UID и GID пользователя / группы в Linux:
## https://itsecforu.ru/2020/07/27/%F0%9F%90%A7-%D0%BA%D0%B0%D0%BA-%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D1%8C%D0%BD%D0%BE-%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B8%D1%82%D1%8C-uid-%D0%B8-gid-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2/