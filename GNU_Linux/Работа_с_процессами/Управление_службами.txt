Источник: https://losst.ru/upravlenie-sluzhbami-linux
( Смотреть также:
	https://highload.today/systemd-linux/
)

Программы:
	• пользовательские (в процессе выполнения взаимодействуют с пользователем)
	• службы  (выполняются в фоновом режиме, пользователь не имеет к ним прямого доступа)

Примеры задач, выполняемых службами:
	• следят за состоянием системы;
	• обеспечивают автоматическое подключение внешних устройств и сети;
	• позволяют процессам взаимодействовать с оборудованием (dbus);
	• в виде служб реализованы различные веб-серверы и серверы баз данных

Система SysVinit устарела.
Ей на смену пришла Systemd.

Для управления службами необходима система инициализации = основная служба.
Система инициализации:
	→ запускает службы Linux в нужный момент;
	→ следит за нормальной работой других служб;
	→ записывает сообщения логов;
	→ позволяет останавливать службы (взаимодействовать со службами)

Раньше для управления службами использовались скрипты.
Каждая служба:
	→ запускалась в фоновом режиме одна за другой (без возможности параллельного запуска);
	→ возвращала свой PID процесса скрипту инициализации,
	→ PID сохранялся;
	→ с помощью PID можно:
		► проверить статус работы службы: (работает | приостановлена | остановлена;
		► остановить службу.

Новая модель: система инициализации systemd
	• запускается сразу после загрузки ядра и начинает инициализировать службы;
	• появилась возможность параллельной инициализации;
	• появилась возможность реализации зависимостей между службами.

systemd после запуска:
	► собирает весь вывод службы в лог;
	► следит за работой служб;
	► автоматически перезапускает службы при их аварийном завершении.

Типы служб (значения опции -t, --type):
    .service - обычная служба, программа
    .target - группа служб
    .automount - точка автоматического монтирования
    .device - файл устройства, генерируется на этапе загрузки
    .mount - точка монтирования
    .path - файл или папка
    .scope - процесс
    .slice - группа системных служб systemd
    .snapshot - сохраненное состояние запущенных служб
    .socket - сокет для взаимодействия между процессами.

Утилита управления службами в Linux systemctl
	1. Синтаксис
		$ systemctl [опции] [команда] <служба> [служба ...]
		опции → настраивают поведение программы; сильно зависят от команд
		команда → указывает на то, что нужно сделать со службой
		
		Команды:
		
			list-units - посмотреть все службы (юниты), аналог опции -t
			list-sockets - посмотреть все службы сокетов
			start - запустить службу linux
			stop - остановить службу linux
			reload - обновить конфигурацию службы из файла юнита
			restart - перезапустить службу
			try-restart - перезапустить службу, только если она запущена
			reload-or-restart - обновить конфигурацию затем выполнить перезапуск службы linux, если не поддерживается - только перезапустить
			isolate - запустить только одну службу вместе с ее зависимостями, все остальные остановить
			kill - отправить сигнал завершения процессу используется вместе с опциями --signal и --kill-who
			is-active - проверить запущена ли служба linux
			is-failed - проверить не завершилась ли служба с ошибкой
			status - посмотреть состояние и вывод службы
			show - посмотреть параметры управления службой в Linux
			reset-failed - перезапустить службы linux, завершившиеся с ошибкой
			list-dependencies - посмотреть зависимости службы linux
			list-unit-files - вывести все установленные файлы служб
			enable - добавить службу в автозагрузку
			disable - удалить службу из автозагрузки
			is-enabled - проверить если ли уже служба в автозагрузке
			reenable - сначала выполнить disable потом enable для службы
			list-jobs - все запущенные службы linux независимо от типа
			snapsot - сохранить состояние служб, чтобы потом восстановить
			daemon-reload - обновить конфигурацию всех служб
			mask - сделать юнит недоступным
			unmask - вернуть файл службы linux
		
		Основные опции:
		
			-t, --type - тип служб для вывода
			-a, --all - показать все известные службы, даже не запущенные
			-q - минимальный вывод
			--version - версия программы
			--no-pager - не использовать постраничную навигацию
			--no-legend - не выводить подробное описание
			-f - принудительное выполнение команды
			--runtime - не сохранять вносимые изменения после перезагрузки
			-n - количество строк вывода лога для команды status
			--plain - использовать обычный текстовый режим вместо деревьев
			--kill-who - задать процесс, которому нужно отправить сигнал
			--signal - сигнал, который нужно отправить.
			--state - отфильтровать список служб по состоянию.

Разбор вывода команды $ systemctl list-units --type service
# Программа не пересматривает все файлы → будут показаны только те службы, к которым уже обращались.
Колонки:
	• UNIT
		# название юнита (имя службы)
		
	• LOAD
		#  информация об успешной загрузке конфигурации (загрузка конфигурационного файла):
			loaded = конфигурационный файл загружен
			
	• ACTIVE
		# сообщение о статусе:
			active = служба была запущена
		
	• SUB
		# детальная системная информация об юните:
			running - служба выполняется в данный момент
			exited - служба успешно завершила свою работу
		
	• DESCRIPTION
		# краткое описание юнита

Сортировка служб по состоянию:
	$ systemctl list-units --type service --state <интересующее_состояние>
	$ systemctl list-units --type service --state running	# отсортировать запущенные службы
	$ systemctl list-units --type service --state failed    # службы, завершившиеся с ошибкой

Состояния служб:
	running
	exited
	dead
	failed
	active
	inactive
	loaded
	not-found
	plugged
	mounted
	waiting
	listening

Запуск и останов служб
	$ sudo systemctl start application.service
	sudo systemctl start application.service === sudo systemctl start application
	# При успешном запуске программа ничего не выведет
	
	$ sudo systemctl stop application
	
Просмотр состояния службы:
	$ sudo systemctl status application

Автозагрузка служб в systemd
	list-unit-files → показывает добавлена ли служба в автозагрузку
	
	* Возможные состояния:
		• enabled - в автозагрузке;
		• disabled - автозагрузка отключена;
		• masked - служба скрыта;
		• static - служба в автозагрузке, но нельзя её отключить

	Посмотреть список служб, запускаемых автоматически:
		$ systemctl list-unit-files --state enabled
	# Учесть службы из перечня: 4 systemctl list-unit-files --state static
	
	Добавить службу в автозагрузку
		$ sudo systemctl enable application
	
	Убрать службу из автозагрузки
		$ sudo systemctl disable application

	Посмотреть разрешена ли сейчас автозагрзука для службы:
		$ sudo systemctl is-enabled application