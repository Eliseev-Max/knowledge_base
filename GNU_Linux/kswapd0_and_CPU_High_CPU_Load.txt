Высокая загрузка процессора. Процесс kswapd0. Оперативная память и swap

[sources:]

1) "Kswapd0 занимает много процессора": https://qa.yodo.im/t/kswapd0-zanimaet-mnogo-proczessora/3605
2) "Что за процесс kswapd0 сжирает весь процессор на digitalocean Ubuntu 14?": https://qna.habr.com/q/310796
3) "Linux pagecache и kswapd": https://it-stories.ru/blog/linux/linux-pagecache-i-kswapd/
4) "kswapd using 100% CPU, I don't even have swap.": https://bbs.archlinux.org/viewtopic.php?id=144702
5) "kswapd0 загружает поцессор на 100%": https://forums.opensuse.org/t/kswapd0-100/97531


---
[1] Симптомы (чем сопровождается):
  - проблема была обнаружена 
  - kswapd0 занимает 99,9% моего процессора, как показывает top;
  - проблема периодически повторяется, каждый следующий раз становится более продолжительным;


  Процесс kswapd0 - это процесс, который управляет виртуальной памятью.
  В процессе запуска и работы программ потребляется оперативная память,
  когда оперативной памяти не хватает, задействуется ПОДКАЧКА с EXT4 на вашем жестком диске / SSD.
  Файл подкачки хранится на ext4, и доступ к нему всегда медленнее, чем к оперативной памяти.
  Оперативная память - это как бы промежуточное рабочее пространство для быстрого доступа программ к информации.

  Играя в игру, у вас может не хватить места в оперативной памяти, и именно здесь на помощь приходит ПОДКАЧКА.

  SWAP - это "поддельная" оперативная память, расположенная на вашем жестком диске/SSD рядом с вашим томом EXT4.
  Доступ к нему быстрее, чем к EXT4, но он намного медленнее, чем фактическая оперативная память.

[Механизм работы swap:]
  Когда у вас заканчивается память, kswapd0 перемещает программы, которые вы не используете/используете не так часто, как другие программы,
  в подкачку, что вызывает критичную задержку в этих процессах.

  Предположим, что вашей игре требовалось 5 ГБ оперативной памяти.
  Тогда как МИНИМУМ 1 ГБ было бы подкачано из swap.
  Это означает, что когда он пытается получить доступ к этой информации, ему приходится ждать дольше, чтобы получить ее.

  -> Весь этот процесс приводит к
    * чрезмерной загрузке процессора,
    * перемещению информации из подкачки и оперативной памяти   и
    * обработке запроса информации одновременно.

[Как решить эту проблему?]

  1) Настроить kswapd0 так, чтобы он перемещал данные для подкачки только тогда, когда у вас полностью закончилась оперативная память.
     Это единственный наиболее эффективный метод решения проблем со свопом.
Запустите:
-->
echo vm.swappiness=0 | sudo tee -a /etc/sysctl.conf
<--
# где 0 является ли процент, оставшийся вне 100 при котором следует использовать SWAP (когда у вас останется 0% оперативной памяти, SWAP начнет принимать данные).

  (+) Вы также можете просто отредактировать /etc /sysctl.conf по своему вкусу
      вместо того, чтобы добавлять эту команду в конец каждый раз, используя gedit или nano или что-то еще,
      но обязательно с привелегией суперпользователя (sudo), этот файл принадлежит root.
      Перезагрузитесь, и все готово!

  2) Уменьшить потребление оперативной памяти другими процессами ||
     закрыть другие программы во время выполнения программ с большим объемом памяти.
     (Такие вещи, как службы синхронизации файлов, как правило, занимают много памяти).

  3) Установить больше оперативной памяти.

  4) Уменьшить нагрузку на процессор так же, как вы это делали с оперативной памятью.
     Это поможет тем, кто использует оперативную память для ОБМЕНА пакетами, работать намного плавнее.

[!] полное отключение swap небезопасно! Делать это не рекомендуется!
    Это может привести к зависанию целых систем, если произойдет утечка памяти или будет запущено слишком много приложений.


[3:https://it-stories.ru/blog/linux/linux-pagecache-i-kswapd/]
[ Решение проблемы с высокой загрузкой процессора сервисом kswapd в Linux, очистка pagecache: ]

   1) загрузка не изменилась и через полчаса,
   2) она не изменилась даже тогда, когда я принудительно остановил почти все поднятые в контейнерах сервисы.

***********************
* Информация о kswapd *
***********************
(1. https://www.science.unitn.it/~fiorella/guidelinux/tlk/node39.html)

The Kernel Swap Daemon (kswapd)
  Название swap daemon ("демон подкачки") немного неверное,
  поскольку демон делает больше, чем просто меняет измененные страницы в файл подкачки.

[!] Его задача = поддерживать эффективную работу системы управления памятью.

  # процесс kswapd (kernel init process) инициализирует ядро при запуске и сидит, ожидая периодического истечения таймера подкачки ядра.

-> Демон подкачки ядра запускается каждый раз, когда истекает таймер;
-> запустившись, демон подкачки смотрит, не уменьшается ли количество свободных страниц в системе.

  Свободных страниц в системе слишком мало, если
---
(number_of_free_pages + number_of_async_pages) < free_pages_high
---

Linux не хочет, чтобы в файл подкачки одновременно записывалось слишком много страниц,
поэтому использует nr_async_pages для подсчета количества страниц, которые в данный момент записываются в файл подкачки.

free_pages_low и free_pages_high устанавливаются во время запуска системы и связаны с количеством физических страниц в системе.

--> если свободных страниц достаточно:
:: демон подкачки спит до тех пор, пока его таймер не истечет снова;

--> в противном случае:

:: демон подкачки пытается тремя способами уменьшить количество физических страниц, используемых системой:

  1) уменьшение размера буфера и страничных кэшей,
  2) замена общих страниц (Swapping out shared pages),
  3) замена или отбрасывание страниц (Swapping out or discarding pages)

По умолчанию демон подкачки пытается освободить 4 страницы при каждом запуске.
Все вышеперечисленные методы пробуются по очереди, пока не будет освобождено достаточное количество страниц.

После этого демон подкачки снова спит, пока не истечет его таймер.

(более подробно описано здесь:
-> "Pageout and kswapd": https://linux-mm.org/PageOutKswapd
)


---< Резюме: >---
  * процесс стартует во время запуска системы,
  * большую часть времени проводит в «спячке».

Информация о том, чем и когда этот демон «пробуждается» немного противиречива:
  -> в одних источниках указывается, что «просыпается» он по таймеру,
  -> в других — что его «дергает» распределитель физических страниц памяти (physical page allocator).

В любом случае, если количество свободных страниц физической памяти меньше определенного порога
(этим параметром можно управлять),
то процесс начинает сохранять наименее используемые страницы во вторичной памяти, обычно, на диск.

На самом деле, алгоритм работы сложнее (например, используются кэши swap-а и др.)

[!] Всё должно работать без сторонних эффектов.
---

{!} Хорошее решение:
-> "A solution for kswapd0 going haywire on #Linux": https://blog.voina.org/a-solution-for-kswapd0-going-haywire-on-linux/

**************************************
* [!] Сиюминутная очистка pagecache: *
**************************************
[root:]
echo 1 > /proc/sys/vm/drop_caches

[user:]
echo 1 | sudo tee /proc/sys/vm/drop_caches

(пояснение манипуляций:)
# эта команда позволяет очистить всевозможные кэши и, таким образом, освободить память, которой так не хватает системе.

Какие кэши должны быть очищены, определяется записываемым значением.

[+] важен сам факт записи данных в файл /proc/sys/vm/drop_caches
    —> запись данных вызывает немедленную реакцию системы, но, в дальнейшем, записанное значение не влияет на ее работу.

Когда кэши очищаются, процессу kswapd больше нечего делать и он перестает загружать процессор.

!НО! очищая кэши, мы можем потенциально замедлить работу системы в целом,
     так как убираем из памяти некоторые данные, которые, когда они потребуются,
     придется пересоздавать, считывая с диска — как обычно, все имеет свою обратную сторону.
