[sources]:
  1. The ultimate guide To crontab syntax
  → https://crontabkit-develop.netlify.app/general/2022/12/27/the-ultimate-guide-to-crontab-syntax
  2. ‘crontab’ in Linux with Examples
  → https://www.geeksforgeeks.org/crontab-in-linux-with-examples/
  3. Настройка Cron
  → https://losst.pro/nastrojka-cron?ysclid=logshev5dm258995937#%D0%A1%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%81_crontab

Running bash script with crontab

# В именах путей ведущая / не означает "домашний каталог";
# она всегда ссылается на корень файловой системы, независимо от того, под каким именем вы вошли в систему.
# Необходимо использовать реальный полный, абсолютный путь к сценарию (например, /home/serverpilot/backupS3.sh).
# Если кронтаб принадлежит тому же пользователю, в домашнем каталоге которого находится скрипт, можно использовать:
#
#### "$HOME"/backupS3.sh
#
# и система сама подставит путь к его домашнему каталогу.
# Или, что еще проще, просто используйте ./backupS3.sh, поскольку задания cron начинаются с рабочего каталога, равного домашнему каталогу их владельца.

# Если это не сработает, то либо то, что вы понимаете под "каталогом пользователя", не совпадает с POSIX-концепцией "домашнего каталога",
# либо сценарий не исполняется (что можно исправить, выполнив один раз команду chmod +x backupS3.sh).

Если вы не уверены в том, каков полный путь, просто выполните команду pwd, находясь в том же каталоге,
где расположен скрипт, и поставьте перед именем скрипта выход, за которым следует косая черта.
(https://crontabkit-develop.netlify.app/general/2022/12/27/the-ultimate-guide-to-crontab-syntax)

Основы синтаксиса Crontab
Cron проверяет конфигурационные файлы на предмет того, какие команды должны быть запущены. Строки в конфигурационных таблицах crontab интерпретируются демоном с помощью определенного синтаксиса.

Для того чтобы настроить работу cron, необходимо понять основные компоненты этого синтаксиса.
Строка crontab должна быть оформлена следующим образом:

a b c d e /directory/command output

Компоненты команды cron выглядят следующим образом:

  1. Первые пять полей - a, b, c, d и e - определяют время/дату и периодичность выполнения задания.
  2. Во втором поле /directory/command указывается местоположение и запускаемый скрипт.
  3. Имеется необязательный вывод заключительного сегмента.
     В нем описывается процедура оповещения пользователей системы о завершении задания.

1. Формат времени выполнения задания Cron

Числа, определяющие время и частоту выполнения команды, представлены первыми пятью полями в команде.
Каждая позиция, обозначающая конкретное значение, отделяется ‼ПРОБЕЛОМ‼

Возможные значения полей перечислены в таблице ниже, а также приведен пример синтаксиса:

Field 	Potential   Values 	  Syntax 	        Description
[a]   – Minute 	    0 – 59 	  7 * * * * 	    The cron job starts each time the system clock displays 7 for the minute.
[b]   – Hour 	    0 – 23 	  0 7 * * * 	    When the system clock reads 7am (7pm would be coded as 19), the cron job starts running.
[c]   – Day 	    0 – 31 	0 0 7 * * 	        The job runs every seventh day of the month because it is the seventh day of the month.
[d]   – Month 	    0 = none and 12 = December 	0 0 0 7 *    	The job only runs in July because July is the only month with the numerical value of 7.
[e]   – Day of the Week 	0 = Sunday and 7 = Sunday 	0 0 * * 7 	As it stands, position 7 would only be available on Sundays.

2. Выполняемая команда

Команда для выполнения описана в следующем параграфе. В нем указывается точный путь и имя файла скрипта или команд, которые вы хотите, чтобы Cron выполнил. Например:

/root/backup.sh

В нашем примере команда выполняет сценарий backup.sh после сканирования корневого каталога системы. В качестве спецификации может быть использован любой сценарий или команда.
3. Результаты (необязательно)

По умолчанию cron уведомляет владельца файла crontab о выполнении задания по электронной почте. Управлять задачами таким образом очень удобно. Помните, что рутинные или мелкие задачи могут быстро привести к переполнению почтового ящика.

Избежать такой ситуации можно, отключив рассылку по электронной почте, поскольку эта функция является необязательной. Добавьте следующий код после полей timing и command, чтобы остановить вывод электронной почты: >/dev/null 2>&1.

* * * * * директория/команда >/dev/null 2>&1
4. Использование операторов

В синтаксисе Cron для повышения эффективности также используются операторы. Операторы - это уникальные символы, выполняющие операции над значениями поля cron.

    Для того чтобы задания выполнялись по всем дням недели или по всем месяцам, используйте оператор *, обозначающий все значения.
    При разделении отдельных значений следует использовать запятую (,).
    Диапазон значений обозначается тире (-).
    Значение может быть разделено на шаги с помощью прямой косой черты (/), например, */2 - для каждого второго значения, */3 - для каждого третьего, */10 - для каждого десятого и т.д.
    
Создание задания Cron

Синтаксис команды, которую мы хотим выполнить, необходимо ввести в crontab при настройке задания cron.   