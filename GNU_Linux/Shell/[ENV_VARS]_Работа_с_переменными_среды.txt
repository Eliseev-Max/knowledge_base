SHELL. Переменные среды (окружения)

[sources:]
1) "How to Set an Environment Variable in Linux": https://www.freecodecamp.org/news/how-to-set-an-environment-variable-in-linux/
2) "": 

** Понятие переменной среды **

Переменные среды (environment variables)
[1]  - это переменные, специфичные для определенной среды.
# Например, у каждого пользователя операционной системы есть своя собственная среда.

[2]  - это именованные объекты, содержащие данные, используемые одним или несколькими приложениями.
       Проще говоря, это переменная с именем и значением.

# Какие значения может хранить переменная среды:
  - расположение всех исполняемых файлов в файловой системе,
  - редактор по умолчанию, который следует использовать,
  - языковые настройки системы,
  - прочие значения формата KEY=VALUE

(!) переменные среды предоставляют простой способ совместного использования параметров конфигурации несколькими приложениями и процессами в Linux




*******************************************
* Определение (defining) переменных среды *
*******************************************

Области действия переменных среды разбиты на контексты, на которые они влияют:
  Глобальный (Global):
    все программы, которые запускает ЛЮБОЙ пользователь, НЕ ВКЛЮЧАЯ СИСТЕМНЫЕ СЛУЖБЫ.

  По пользователям (By user):
    все программы, которые запускает КОНКРЕТНЫЙ пользователь, НЕ ВКЛЮЧАЯ ПОЛЬЗОВАТЕЛЬСКИЕ СИСТЕМНЫЕ СЛУЖБЫ

# (см. Systemd/User#Environment variables) или графические приложения (см. #Graphical environment).


--< https://askubuntu.com/questions/58814/how-do-i-add-environment-variables >--

1. Определить переменную среды ТОЛЬКО для текущей оболочки (shell):
```
VARNAME="my value"
```

2. Определить переменную среды для текущей оболочки и всех процессов, запущенных из текущей оболочки:
```
export VARNAME="my value"      # shorter, less portable version
```

3. Чтобы определить переменную среды навсегда для всех будущих сессий bash,
   нужно добавить строку из предыдущего примера в свой файл .bashrc в вашем каталоге $HOME.

```$HOME/.bashrc
export VARNAME="my value"
```

4. Чтобы установить environment variable навсегда и в масштабах всей системы (для всех пользователей, всех процессов),
   добавьте установленную переменную в /etc/environment:

```
sudo -H gedit /etc/environment
# Этот файл принимает только такие назначения переменных, как:
VARNAME="my value"
# !!! не используйте ключевое слово export здесь!
```

[!] Используйте source ~/.bashrc в вашем терминале, чтобы изменения вступили в силу немедленно.

---

/etc/environment
  = этот файл используется для настройки общесистемных переменных среды.

/etc/profile
  = переменные, заданные в этом файле, считываются при каждом входе в командную строку bash.




#############################################################
# Проверка объявления (существования) переменной окружения: #
#############################################################

[sources:]
(1)-> Yandex AI
2) "Checking if a Linux Environment Variable Is Set or Not": https://www.baeldung.com/linux/environment-variable-check-if-set

Существует 2 способа вывести в консоль значения определённых (существующих) переменных среды:

1) printenv VARIABLE_NAME
2) echo $varname

Просмотр определённых переменных среды: ```$ env```

Для проверки существования переменной в bash, используйте конструкцию:
```
[ -v env_name ]       # проверяет, была ли переменная объявлена
```
  или
```
[ -z "${env_name}" ]  # проверяет, пуста ли она (или не объявлена вовсе)
```


1. Проверка объявления (существования):
[ -v env_name ]

** return TRUE **
  Эта конструкция вернет true (или 0 в условном выражении),
  если переменная env_name была объявлена,
  НЕЗАВИСИМО ОТ ТОГО, имеет ли она какое-либо значение (включая пустую строку).

** return FALSE **
  Если переменная не объявлена, конструкция вернет false (или 1).


2. Проверка на пустоту (или отсутствие):
[ -z "${env_name}" ]

** return TRUE **
  Эта конструкция вернет true, если переменная
    - не объявлена
  <или>
    - ее значение является пустой строкой.

** return FALSE **
  В противном случае, если переменная объявлена и имеет непустое значение, вернется false.

[!] Использование ${env_name} вместо $env_name в данном случае предпочтительнее,
    так как ПРЕДОТВРАЩАЕТ ВОЗМОЖНЫЕ ПРОБЛЕМЫ при обработке переменных, содержащих пробелы или другие специальные символы.

(!) Заключение в кавычки ($"...") также желательно, если вы не уверены в содержании переменной.
