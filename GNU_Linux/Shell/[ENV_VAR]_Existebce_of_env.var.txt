#AI Review

# +[sources:]
#> "How to check if env exist in bash?": https://unix.stackexchange.com/questions/793720/how-to-check-if-env-exist-in-bash

Чтобы проверить, существует ли переменная окружения в сценарии оболочки, особенно в Bash, можно использовать несколько методов:

1. Использование ```if [[ -z ${VAR_NAME+x} ]]```:

  Этот метод проверяет случай, если конкретная переменная не определена (specifically unset)
  (в отличие от того, что она задана, но пуста).

  Расширение параметра +x гарантирует, что расширение происходит только в том случае,
  если задано значение VAR_NAME, =(что приводит)=> к пустой строке, если она не задана.
  Затем -z проверяет, является ли результирующая строка пустой.

"""
Состояние переменной VAR_NAME:
  <задана>:     происходит расширение +x
  <не задана>:  выводится пустая строка
"""


```
if [[ -z ${MY_ENV_VAR+x} ]]; then
  echo "MY_ENV_VAR is unset."
else
  echo "MY_ENV_VAR is set (it might be empty, but it exists)."
fi
```

2. Использование ```if [[ -v VAR_NAME ]]```     #(Bash 4.2+):
  = это более простой и понятный способ проверить, задана ли переменная.
    Оператор -v специально проверяет НАЛИЧИЕ (== существование, existence) переменной.

```
if [[ -v MY_ENV_VAR ]]; then
  echo "MY_ENV_VAR exists."
else
  echo "MY_ENV_VAR does not exist."
fi
```

3. Using Parameter Expansion with Default Values:
While not a direct existence check, this method can be used to provide a default value if the variable is unset or empty, and can indirectly indicate its presence.

```
# Assigns "default_value" if MY_ENV_VAR is unset or null
VAR_VALUE=${MY_ENV_VAR:-default_value} 
echo "Value of MY_ENV_VAR (or default): $VAR_VALUE"

# Fails the script if MY_ENV_VAR is unset or null
: "${MY_ENV_VAR:?Error: MY_ENV_VAR is not set or is empty}"
```

4. Checking for Empty String (if [[ -z "$VAR_NAME" ]]):
This method checks if a variable is empty (or unset, as an unset variable expands to an empty string in this context). It does not distinguish between an unset variable and a variable explicitly set to an empty string.

```
if [[ -z "$MY_ENV_VAR" ]]; then
  echo "MY_ENV_VAR is empty or unset."
else
  echo "MY_ENV_VAR has a value: $MY_ENV_VAR"
fi
```

The choice of method depends on whether the distinction between an unset variable and an empty variable is important for the specific use case. For a general check of existence, [[ -v VAR_NAME ]] is often the most straightforward in modern Bash.


#(+):
Однако эта переменная может быть просто локальной переменной, если вы хотите проверить, экспортирована ли она, вам понадобится что-то вроде:

```
if env | grep -q '^VAR='; then
```