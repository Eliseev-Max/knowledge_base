Как создать/настроить пользователя Linux без пароля

[sources:]

1) "How to Set a Linux User Account to Have No Password": https://www.baeldung.com/linux/user-account-without-password
2) "Creating a user without a password": https://unix.stackexchange.com/questions/56765/creating-a-user-without-a-password
3) "Can I set my user account to have no password?": https://askubuntu.com/questions/281074/can-i-set-my-user-account-to-have-no-password



Управление доступом - ключевой компонент защиты системы Linux.
Наиболее типичным способом достижения этой цели является включение парольной защиты.

В каких случаях пароль может и не понадобиться:
  - при создании гостевой учетной записи для временного доступа
  - при создании сервисной учётной записи (для настройки автоматического выполнения некоторых задач)


[Случай №1]         #[1]

  1) Создадим произвольного пользователя userX:

```
sudo useradd -m userX
```

  2) Удалим доступ по паролю                                        # + (3)
  2.1) для обычного пользователя (не имеющего полномочий sudo)

```
sudo passwd -d userX
```
# Если мы решим переключиться на пользователяX с экрана входа в систему,
# наша система переведет нас на домашнюю страницу, не показывая ввода пароля.

  2.2) для пользователя sudo

# в версиях Ubuntu старше 22.04 у пользователя может быть запрошен пароль, даже если пароля нет,
# когда он пытается использовать sudo

    -> добавим пользователя в файл `sudoers` (в группу sudo):
```
sudo usermod -aG sudo userX
```

    -> Далее нам нужно изменить файл /etc/sudoers.tmp.
       Добавим строку, которая обеспечит нашему новому пользователю права sudo без запроса пароля.
       # чтобы открыть этот файл, выполните следующую команду:
```
sudo visudo
```

    -> Затем мы можем добавить в файл следующую строку:
```
userX ALL=(ALL) NOPASSWD:ALL
```

#[!] мы НЕ ИСПОЛЬЗОВАЛИ редакторы vim и nano!
#
# Это потому, что использовать эти редакторы небезопасно.
#[!] Если мы допустим ошибку в файле sudoers.tmp, это может повлиять на права sudo у других пользователей.
#    Однако если мы используем visudo, проверка синтаксиса автоматически выполняется при сохранении файла,
# => и это защищает нас от потенциального нарушения привилегий системы.

# visudo использует редактор nano в фоновом режиме.
# Если мы хотим сменить его на ДРУГОЙ РЕДАКТОР (например, vim), мы можем выполнить следующее:

```
sudo update-alternatives --config editor
```

# На экране появятся варианты, показанные выше,
# и мы можем выбрать нужный, используя соответствующий номер:

```
There are 3 choices for the alternative editor (providing /usr/bin/editor).

Selection Path Priority Status
------------------------------------------------------------
* 0 /bin/nano 40 auto mode
1 /bin/ed -100 manual mode
2 /bin/nano 40 manual mode
3 /usr/bin/vim.tiny 15 manual mode

Press <enter> to keep the current choice[*], or type selection number:
```

** Соображения безопасности **
  Почти по всем практическим соображениям иметь пользователя без пароля НЕЖЕЛАТЕЛЬНО.
  Лучше иметь слабый пароль, чем вообще никакого.


[Случай №2]         #[2]

Пользователь выполняет команду:

```
sudo adduser \
   --system \
   --shell /bin/bash \
   --gecos ‘User for managing of git version control’ \
   --group \
   --disabled-password \
   --home /home/git \
   git
```

Но при попытке залогиниться под пользователем `git`, происходит следующее:

```
su git
>>> Password:
```

Если не вводить пароль ( == оставить пустым), возникает ошибка:
```
su: Authentication failed
```

** Объяснение поведения системы **

<(1)>:

  Параметр --disabled-password не будет задавать пароль, то есть пароль не является законным (legal),
  но вход в систему все равно возможен (например, при использовании SSH RSA-ключей).
  Чтобы создать пользователя без пароля, используйте ```passwd -d $username``` после создания пользователя,
  чтобы сделать пароль пустым.
[!] НЕ ВСЕ системы позволяют пользователям с пустым паролем входить в систему.

<(2*)>:

  Вы создали пользователя с "отключенным паролем",
  что означает отсутствие пароля, который позволит вам войти в систему под этим пользователем.

[!] Это отличается от создания пользователя, под которым любой может войти в систему без ввода пароля,
    что достигается указанием пустого пароля и очень редко бывает полезным.

  Чтобы выполнять команды от имени таких "системных" пользователей, которые не входят в систему обычным образом,
  вам нужно войти через учетную запись root:

```
su -c 'su git -c "git init"'
```
# или
```
sudo -u git git init
```

  Если вы хотите, чтобы определенные пользователи могли выполнять команды от имени пользователя git, не позволяя им выполнять команды от имени root,
  настройте sudo
  == запустите visudo от имени root и добавьте строку типа
```
%gitters ALL = (git) ALL
```


<(3)>:

  Если вы хотите получить доступ к системе под пользователем git, используйте sudo:

```
sudo -s -u git
# или

sudo su - git
```

