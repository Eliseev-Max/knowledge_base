#######################################################
############### Удаление программ Linux ###############
#######################################################

С полным удалением из ОС могут создать трудности программы:
	• которые сами создают множество файлов в файловой системе;
	• установленные вручную

1. Удаление программ через пакетный менеджер
[debian-like OS]:	
	$  sudo apt remove <program_name>
	# Эта команда удалит пакет из системы, но некоторые конфигурационные файлы останутся и будут занимать место.
	##‼ apt remove !=apt-get remove
	## apt-get remove <package> == обычное удаление пакета
	## apt-get purge <package> == удаление пакета вместе с его конфигурационными файлами
	
	$ sudo apt purge <program_name>
	или
	$ sudo apt-get --purge remove <program_name>

[CentOS/Red Hat]:
	$ sudo yum remove <program_name>

[Fedora]:
	$ sudo dnf remove <program_name>

[OpenSUSE]:
	$ sudo zypper remove <program_name>
	
  * Удаление зависимостей, установленных вместе с пакетом:
    $ sudo apt autoremove
	# Будут удаленны не только явно указанные зависимости, но и программы установленные как рекомендованные
	# Пример:
	# если вы устанавливаете какое-либо приложение, разработанное для среды рабочего стола KDE Plasma,
	# оно установит несколько пакетов KDE, от которых оно зависит.
	

Если программа была скомпилирована и установлена установочным скриптом,
то удалить ее с помощью пакетного менеджера не получится, поскольку он ничего не знает о ней.

2. Удаление программ без пакетного менеджера
	‼ Вывести список всех установленных приложений:
		$ dpkg --list
		
	Если программа была установлена из исходников с помощью компиляции и make install, то она разложена по всей системе.
	$ cd /папка/с/исходниками
	$ sudo make uninstall

[*] Удаление программ с помощью пакетного менеджера Synaptic
	$ sudo apt install synaptic					# установка программы
	$ gksu synaptic								# запуск программы через терминал

‼ # Узнать название пакета по исполняемому файлу (пути до исполняемого файла):
  # путь до исполняемого файла: /usr/bin/executable_file
	$ sudo dpkg -S /usr/bin/executable_file
	# executablefile: /usr/bin/executable_file
	
3. Удаление пакетов, установленных из PPA:
	Существует специальная утилита: ppa-purge
	$ sudo apt install ppa-purge
	# Удалим все пакеты, установленные из определённого PPA:
		$  sudo ppa-purge -i ppa:владелец_ppa/имя_ppa
		# ppa:владелец_ppa/имя_ppa - обычно в таком формате записываются все PPA: протокол:владелец/имя
	# Узнать список репозиториев можно в программе источники приложений
	
	# Удалить пакеты, установленные из ppa:
	$  find /etc/apt/sources.list.d -type f -name "*.list" -print0 | \
	   while read -d $'\0' file; do awk -F/ '/deb / && /ppa\.launchpad\.net/ {print "sudo ppa-purge ppa:"$4"/"$5}' "$file"; done

	‼ Копирование и вставка команд в терминале: выполняются при помощи зажатия дополнительной клавиши Shift.
		• скопировать в терминале: 		Ctrl+Shift+С
		• вставить команду в терминал:  Ctrl+Shift+V
	
	Большинство приложений устанавливают несколько пакетов → ищем основной пакет

################################
#### Очистка системы Ubuntu ####
################################
{https://losst.pro/ochistka-sistemy-ubuntu}

1. Использование дискового пространства
	Очистка системы Ubuntu должна начинаться с выяснения, какие файлы потребляют больше всего пространства на диске.
	Программа ncdu
		= консольная утилита с псевдографическим интерфейсом.
	Установка:
		$ sudo apt install ncdu

	Запуск программы:
		$ ncdu /
			
(* Подробнее про утилиты для анализа занимаемого пространства:
https://losst.pro/poisk-bolshih-fajlov-linux)

2. Дубликаты файлов
	♦ Утилита FSlint: позволяет найти и очистить битые символические ссылки, а также дубликаты файлов в файловой системе.
	Установка fslint
		$ sudo apt install fslint
	
	Запуск программы:
		→ из главного меню
		→ из консоли командой: fslint
	
	Работа в программе:
		• в главном окне: указать путь поиска дубликатов [с помощью кнопки Add]
		• перейти на вкладку Дубликаты → нажать внизу "Найти"
	
	♦ Утилита BleachBit
		• поиск дубликатов файлов;
		• нахождение дублей фото и аудиофайлов (по спец. алгоритмам)
	Подробнее: https://losst.pro/kak-osvobodit-mesto-v-linux
	
3. Очистка пакетов
	• Удалить неиспользуемые пакеты из кэша:
		$ sudo apt autoclean
	
	• Очистка кэша в Ubuntu, утилиты apt:
		$ sudo apt clean
	
	• Удаление ненужных зависимостей:
		$ sudo apt autoremove
	(* хорошая практика - удалять зависимости сразу при удалении приложения:
		$ sudo apt autoremove <приложение>
	)

4. Старые версии snap пакетов
	(пакетный менеджер snap)
	- оставляет в системе кэш;
	- оставляет в системе старые версии пакетов после обновления (по умолчанию - 3)
	• изменить количество сохраняемых последних версий пакетов:
		$ sudo snap set system refresh.retain=2
	
	• полностью удалить неиспользуемые версии пакетов (с помощью скрипта):
		$ sudo vi /usr/local/bin/remove_old_snaps.sh
			[Script "remove_old_snaps.sh"]:
			#!/bin/bash
			set -eu
			LANG=en_US.UTF-8 snap list --all | awk '/disabled/{print $1, $3}' |
			while read snapname revision; do
			snap remove "$snapname" --revision="$revision"
			done
			
		$ sudo chmod ugo+x /usr/local/bin/remove_old_snaps.sh		# устанавливаем права на выполнение
		$ sudo ./remove_old_snaps.sh								# запуск скрипта
		
5. Старые пакеты программ
	При обновлении пакета до более новой версии, его старая версия и её конфигурационные файлы тоже остаются в системе
	и занимают место на диске.
	
	5.1 Очистка с помощью менеджера пакетов Synaptic:
		• кнопка "Состояние" → 
		• пункт Не установленные (остались файлы конфигурации)
		• установить галочки;
		• выбрать опцию "Отметить для полного удаления" 
		• нажать "Правка" → "Применить"
	5.2 Командой в терминале
		$  dpkg -l | awk '/^rc/ {print $2}' | xargs sudo dpkg --purge
		или
		$ sudo aptitude purge ~c		# если установлени aptitude
		# параметру "c" предшествует тильда (~)
	

6. Неиспользуемые пакеты
	Программа GTKOrphan: удаление неиспользуемых пакетов
	• установка
		$ sudo apt install gtkorphan
	
	Программа анализирует систему и показывает все пакеты, которые не находятся ни у кого в зависимостях
	(= которые были самостоятельно установлены пользователем)
	‼ Необходимо проанализировать, какие из отображённых программой пакетов нам не нужны, и только после этого приступать к удалению.
	‼ НЕЛЬЗЯ бездумно удалять все пакеты ‼
	Если требуется отобразить больше пакетов:
		[Параметры] → Показывать пакеты не только из библиотеки

7. Файлы локализации
	Можно удалить не используемые языковые стандарты
	Утилита localepurge
	• установка
		$ sudo apt install localepurge
	# на этапе установки выбрать НУЖНЫЕ локали 
	# все остальные локали будут удалены

8. Никому не принадлежащие файлы
	(?) Откуда берутся файлы, не принадлежащие ни одному пакету?
	 ►  При неправильной установке программ из исходников или создаются вручную.
	(?) В чём особенность таких файлов?
	 ►  После удаления самих программ такие файлы могут просто оставаться в системе, накапливаясь и занимая дисковое пространство
	Утилита cruft
		• установка:
			$ sudo apt install cruft
		
		• запуск программы:
			$ sudo cruft -r report_path
		где report_path - путь к файлу, в котором нужно сохранить отчёт
		> список всех никому не принадлежащих файлов

9. Старые ядра
	после обновления ядра, старые версии ядер находятся в /boot (занимают там место)
	Утилита Ubuntu Cleaner
	$ sudo apt install ubuntu-cleaner

[ подробнее об удалении старых ядер:
	https://losst.pro/kak-udalit-starye-versii-yadra-v-ubuntu
]


# Чистка /var/tmp + /var/cache
#=> https://ru.stackoverflow.com/questions/838739/%D0%A7%D0%B8%D1%81%D1%82%D0%BA%D0%B0-var-tmp-var-cache