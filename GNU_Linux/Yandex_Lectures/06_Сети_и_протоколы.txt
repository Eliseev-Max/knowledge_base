План лекции:
  1. История ISO OSI, IETF RFC
  2. IPv4 и IPv6
  3. TCP/IP, инструменты: ip, netstat, telnet, nc
  4. Протоколы DNS, HTTP, SMTP, POP3, IMAP
  5. SSL/TLS, openssl
  
  
[00:03:33] Модель OSI

  Зачем стала нужна модель OSI?
  - Изначально каждый производитель сетевых устройств старался сделать свои стандарты и нормативы.
  → главная цель ISO OSI - стандартизация сетевых протоколов.
  
  7 уровней - слишком много для реализации. Именно поэтому после того, как было получено разрешение, в США перешли на TCP/IP.

[00:06:00] Мнемоническое правило (как запомнить очерёдность уровней модели OSI):

  All			(7) Application
  People		(6) Presentation
  Seem			(5) Session
  To			(4) Transport
  Need			(3) Network
  Data			(2) Data Link Control
  Processing	(1) Physical interface
  
 
 Уровень физических интерфейсов: 
   - описывает, как физически должны взаимодействовать сетевые интерфейсы;
   = реальная передача необработанных битов по каналу связи.
   • какую среду передачи данных, какие сигналы (оптические/электромагнитные) использовать;
   • кодирование данных с помощью сигналов.
   
 Уровень передачи данных (канальный уровень, Data Link Control)
   - обеспечивает прозрачность соединения для сетевого уровня.
   • устройства "договариваются" друг с другом о скорости, режиме и протоколе передачи данных (= логическое подключение)
   (например, скорость: 10/100/1000 Мбит/с, режим: полный дуплекс/полудуплекс/симплекс)
   ► работа с MAC-адресами (Media Access Control)
   
  Сетевой уровень:
  - происходит адресация (работа с IP-адресами).
  
  Транспортный уровень
  - реализуется доставка данных, +/- повторная передача данных в случае потери
    протокол TCP может занимать/затрагивает сразу несколько уровней.
	
  Сеансовый уровень:
  - выполняется установление соединения
  
  Уровень представления:
  - перекодирование данных и их представление пользователю

[00:10:35] Классификация сетей

  Сети с коммутацией
    - пакетов
	- каналов
	
  Transmission Control Protocol (TCP)
  User Datagram Protocol (UDP)
  Internet Protocol (IP)
  
  ‼ UDP позволяет передавать данные прикладной программе, которая работает с правами пользователя и не имеет прямого доступа к уровню IP
    В UNIX-системах чтобы отправить по протоколу IP, нужно иметь права root.

  IGMP - протокол для multicast-трансляции (один поток для группы пользователей). =подписка групповую рассылку.
  Коммутатор может "подслушивать" (snooping) диалоги по протоколу IGMP, что позволяет оптимизировать нагрузку.
  Без snooping'а multicast-трансляции == broadcast-трансляция.
  Коммутатор с поддержкой snooping - отправляет multicast-поток только на те порты, которые его заказывали, на полной скорости.
  

[00:17:31]  Схема передачи информации согласно модели OSI (взаимодействие протоколов)
		    на примере передачи FTP-client <-> FTP-server

  Программа FTP-client, чтобы связаться с FTP-server
    - делает вызов ядра ОС,
	- создаёт сокет,
	- указывает, что данный сокет нужно соединить с <IP-address>:[port]
	Остальное её не волнует.
  В ОС реализованы все остальные уровни.
  Номер порта ~ внутренний (добавочны) номер абонента
  
  → протокол TCP: создаёт соединение и следит, чтобы пакеты не терялись.
  → протокол IP: доставка пакетов (маршрутизация)
  
  Когда выполняется передача по протоколу Ethernet:
    • добавляется заголовок (как у всех вышестоящих протоколов)		# MAC-адреса сетевых карт адресатов
	• добавляется "хвостовик" (trailer)  							# для подсчёта контрольной суммы

  Широковещательный адрес
    ► в IP: единицы во всех четырёх октетах (xxx.xxx.xxx.255)
	► в Ethernet: в MAC-адресе: FF:FF:FF:FF:FF:FF
	  обычный вид - 00:11:22:33:55:FF
	

[00:26:40]  Протокол TCP. MTU

  Величина порции данных, которую может передать уровень Data Link Control, ограничена.
  Как правило, на стандартном Ethernet это 1500 Байт.
  Существуют кадры размером более 1500 Байт == Jumbo Frame ("слоновьи кадры") - до 9000 Байтов.
  
  Уровню TCP нужно знать, сколько байт можно поместить в один пакет.
  Это зависит в том числе и от того, разрешена ли на уровне IP фрагментация пакетов.
  В IPv6 фрагментация запрещена.
  MTU (Maximum Transmission Unit) - величина полезной пользовательской порции данных, которую можно передать через сеть.
  Минимальный MTU - 576 Байтов.
  Максимальный практически не ограничен.
  При фрагментации пакетов на уровне IP пакеты маркируются, как фрагментированные.
  Последний фрагментированный пакет помачается маркером, сообщающим, что это последний пакет.


[00:30:05]  Документация
