Обзор SSL и цифровых сертификатов
(https://www.ibm.com/docs/ru/sia?topic=csa-overview-ssl-digital-certificates-9)

## SSL === Secure Sockets Layer
## TLS === Transport Layer Secutity
## = протоколы, обеспечивающие безопасное соединение в компьютерной сети.
##  Обычно их используют:
##    при просмотре web-сайтов,
##    работы с электронной почтой.


При корпоративном сетевом внедрение нужно обеспечить защищенные взаимодействия между
  - компонентом IBM® Security Identity Server
  - и программными продуктами и компонентами, с которыми взаимодействует сервер.

Протокол SSL использует для аутентификации ПОДПИСАННЫЕ ЦИФРОВЫЕ СЕРТИФИКАТЫ СЕРТИФИКАТОРА.
SSL:
  + защищает взаимодействия в конфигурации.
  + обеспечивает шифрование данных, которыми обмениваются приложения.

(!) Данные, передаваемые по сети, шифруются таким образом, чтобы их смог понять только получатель, которому они предназначались.


Подписанные цифровые сертификаты обеспечивают возможность взаимной аутентифицикации для двух приложений,
соединяющихся друг с другом по сети.

[Механизм взаимодействия: клиент - сервер]

  Приложение, выступающее в качестве SSL-сервера, представляет SSL-клиенту свои идентификационные данные.
  Затем клиент SSL проверяет, является ли приложение объектом, в качестве которого оно о себе заявляет.

# Вы можете сконфигурировать приложение, действующее как сервер SSL, чтобы оно требовало от приложений,
# действующих в качестве клиента SSL, представить их учетные данные в сертификате.

  :=> Таким образом двухсторонний обмен сертификатами завершается.

  Независимый сертификатор бесплатно генерирует подписанные сертификаты.

[+] Некоторые утилиты (например, поставляемые OpenSSL) также могут создавать подписанные сертификаты.

[ Сертификат центра сертификации (сертификатора, CA)]
  Вы должны установить сертификат сертификатора (сертификат CA), чтобы подтвердить происхождение подписанного цифрового сертификата.
  Когда приложение получает подписанный сертификат от другого приложения,
  оно использует сертификат CA для проверки источника сертификата.

** Сертификатором может быть: **
  - Хорошо известное и широко используемое другими организациями учреждение.
  - Учреждение, являющееся местным для определенного региона или компании.

  В конфигурацию многих приложений (например веб-браузеров) используются сертификаты CA ИЗВЕСТНЫХ СЕРТИФИКАТОРОВ.
  Использование широко известных CA позволяет уменьшить или вовсе исключить задачу распределения сертификатов CA по защищенным зонам сети.


**********************************************************
* Секретные ключи, открытые ключи и цифровые сертификаты *
**********************************************************
#(+ https://www.ibm.com/docs/ru/sia?topic=osdc-private-keys-public-keys-digital-certificates-20 +)

  Ключи,                      |
  цифровые сертификаты        |=> позволяют создавать и проверять идентификаторы приложений
  и доверенные сертификаторы  |

В SSL при аутентификации используется технология ШИФРОВАНИЯ С ОТКРЫТЫМ КЛЮЧОМ.
При шифровании с открытым ключом:
  -> для приложения генерируются открытый ключ и закрытый ключ.

(*) Данные, зашифрованные с использованием открытого ключа,
      можно расшифровать ТОЛЬКО с помощью соответствующего секретного ключа.
    Аналогичный образом, данные, зашифрованные с использованием секретного ключа,
    можно расшифровать ТОЛЬКО с помощью соответствующего открытого ключа.

    Секретный ключ ключ защищен паролем в файле базы данных ключей.

[!] Получить доступ к секретному ключу для расшифровки сообщений, зашифрованных с помощью соответствующего открытого ключа,
    может ТОЛЬКО ВЛАДЕЛЕЦ.

[Подписанный цифровой сертификат]
  = это стандартный метод проверки подлинности объектов (например, серверов, клиентов и приложений).

  Чтобы обеспечить максимальную степень защиты, независимый сертификатор (CA) предоставляет сертификат.
  Сертификат содержит следующую информацию, позволяющую подтвердить идентичность объекта:

--<Информация, содержащаяся в сертификате>--

  * Информация об организации
      Этот раздел сертификата содержит информацию, однозначно идентифицирующую владельца сертификата
      (например, название организации и адрес).
      Эти сведения можно получить при создании сертификата с помощью утилиты управления сертификатами.

  * Открытый ключ
      Получатель сертификата, используя открытый ключ,
      -> расшифровывает зашифрованный текст, отправленный владельцем сертификата,
      с целью ПРОВЕРКИ ЕГО ПОДЛИННОСТИ.
    (!) Открытому ключу соответствует секретный ключ, при помощи которого шифруется текст.

  * Имя-идентификатор сертификатора
      С помощью этой информации эмитент сертификата идентифицирует себя.

  * Цифровая подпись
      Эмитент сертификата подписывает сертификат цифровой подписью, которая подтверждает подлинность эмитента.
      Эта подпись сравнивается с подписью на соответствующем сертификате CA,
      чтобы подтвердить, что сертификат выпущен доверенным сертификатором.


Веб-браузеры, серверы и другие приложения, поддерживающие SSL, считают подлинными ВСЕ цифровые сертификаты
  -> подписанные доверенными сертификаторами
  и
  -> являющиеся действительными во всех остальных отношениях.

Например, цифровой сертификат может быть ОТВЕРГНУТ по следующим причинам:
  - Истек срок действия цифрового сертификата.
  - Истек срок действия сертификата сертификатора, который используется для его проверки.
  - Отличительное имя в цифровом сертификате сервера не совпадет с отличительным именем, указанным клиентом.

[Самоподписанные сертификаты]
  Самозаверяющие сертификаты можно использовать для тестирования конфигурации SSL перед созданием и установкой подписанных сертификатов,
  выданных сертификатором.


#################################
# Форматы сертификатов и ключей #
#################################
(https://www.ibm.com/docs/ru/sia?topic=osdc-certificate-key-formats-20)

Сертификаты и ключи хранятся в файлах следующих форматов.

  Формат .pem
    Файл формата .pem (Privacy-Enhanced Mail - электронная почта с усовершенствованной защитой)
    начинается и заканчивается следующими строками:
```
-----BEGIN CERTIFICATE-----
-----END CERTIFICATE-----
```

    В файле формата .pem может содержаться НЕСКОЛЬКО ЦИФРОВЫХ СЕРТИФИКАТОВ, включая цепь сертификатов.
    Если в организации используется цепочка сертификатов, используйте этот формат для создания сертификатов CA.


  Формат .arm
    = В файле .arm содержится зашифрованное ASCII-представление сертификата, закодированное при помощи base-64, включая его секретный ключ, но без открытого ключа. Файл формата .arm создается и используется утилитой IBM® Key Management.

  Формат .der
    = Файл .der содержит двоичные данные.
      Файл .der можно использовать только для одного сертификата, в отличие от файла .pem, в котором могут содержаться несколько сертификатов.

  Формат .pfx (PKCS12)
    = Файл PKCS12 - это переносимый файл, в котором содержатся сертификат и соответствующий секретный ключ.
      Используйте этот формат для преобразования из одного типа реализации SSL в другой.
      Например, можно создать и экспортировать файл PKCS12 с помощью утилиты IBM Key Management.
      Потом можно импортировать этот файл на другую рабочую станцию с помощью утилиты certTool.