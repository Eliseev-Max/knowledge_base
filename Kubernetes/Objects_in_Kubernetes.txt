OBJECTS IN KUBERNETES

Understanding Kubernetes objects
(Понимание объектов Kubernetes)
{https://kubernetes.io/docs/concepts/overview/working-with-objects/}

Объекты Kubernetes - это постоянные сущности в системе Kubernetes.
Kubernetes использует эти объекты для представления состояния вашего кластера.
В частности, они могут описывать:
  ● какие контейнерные приложения запущены (и на каких узлах);
  ● ресурсы, доступные для этих приложений;
  ● политики поведения этих приложений:
    - политики перезапуска,
    - политики обновления
    - политики отказоустойчивости
    и т.д.

Объект Kubernetes - это "запись намерений":
  как только вы создадите объект, система Kubernetes будет постоянно работать над тем, чтобы этот объект существовал.
  Создавая объект, вы фактически сообщаете системе Kubernetes, какой вы хотите видеть рабочую нагрузку (workload) вашего кластера;
  это желаемое состояние вашего кластера.

  Чтобы работать с объектами Kubernetes - создавать, изменять или удалять их 
  -> вам нужно использовать Kubernetes API
#(*) "Kubernetes API": https://kubernetes.io/docs/concepts/overview/kubernetes-api/"

  Например:
  (!)  когда вы используете интерфейс командной строки kubectl, CLI выполняет необходимые вызовы Kubernetes API за вас.

  Вы также можете использовать Kubernetes API непосредственно в своих программах, используя одну из клиентских библиотек (Client Libraries).
#("Client Libraries": https://kubernetes.io/docs/reference/using-api/client-libraries/)

---<Client Libraries>---
(https://kubernetes.io/docs/reference/using-api/client-libraries/)
  Клиентские библиотеки необходимы для использования Kubernetes API из различных языков программирования.
  Чтобы писать приложения с использованием Kubernetes REST API, вам не нужно самостоятельно реализовывать:
    ➜ вызовы API
      <и>
    ➜ типы запросов/ответов.

  Клиентские библиотеки часто решают за вас такие общие задачи, как аутентификация.
  Большинство клиентских библиотек могут обнаружить и использовать учетную запись службы Kubernetes для аутентификации,
  если клиент API запущен в кластере Kubernetes,
  или могут понимать формат файла kubeconfig для чтения учетных данных и адреса сервера API.
---


**************************
* Object spec and status *
**************************

  Почти каждый объект Kubernetes содержит два вложенных объектных поля, которые определяют конфигурацию объекта:
  * spec = спецификация объекта
    <и>
  * status = статус объекта.

  Для объектов, имеющих spec, вы должны задать ее ПРИ СОЗДАНИИ объекта,
  предоставив описание характеристик, которыми вы хотите наделить ресурс:
  = его желаемое состояние (desired state).

  status описывает текущее состояние объекта, предоставляемое и обновляемое системой Kubernetes и ее компонентами.

  Kubernetes control plane постоянно и активно управляет ФАКТИЧЕСКИМ СОСТОЯНИЕМ КАЖДОГО ОБЪЕКТА,
  чтобы оно соответствовало desired state, которое вы указали.
