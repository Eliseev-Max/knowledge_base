*********************
* Minio Access Keys *
*********************

---<OVERVIEW>---
Пользователь MinIO состоит из
  -> уникального ключа доступа (username)
     и
  -> соответствующего секретного ключа (password).

Клиенты должны подтвердить свою личность, указав как
  * действительный ключ доступа (имя пользователя) [= valid access key (username)],
так и
  * соответствующий секретный ключ (пароль) [= corresponding secret key (password)]
существующего пользователя MinIO.


Каждый пользователь может иметь ОДНУ ИЛИ НЕСКОЛЬКО назначенных ПОЛИТИК,
в которых явно перечислены действия и ресурсы, к которым он имеет доступ.
Пользователи также могут НАСЛЕДОВАТЬ ПОЛИТИКИ ОТ ГРУПП, в которых они состоят.

#"Access Management. Policy-Based Access Control (PBAC)":
--> https://min.io/docs/minio/kubernetes/upstream/administration/identity-access-management/policy-based-access-control.html#minio-policy

По умолчанию MinIO ЗАПРЕЩАЕТ ДОСТУП
  -> ко всем действиям и ресурсам, которые явно не разрешены назначенными или унаследованными политиками пользователя.
Вы должны:
  -> либо явно назначить политику, описывающую разрешенные действия и ресурсы пользователя,
  -> либо назначить пользователя в группы, которые имеют соответствующие политики.

# Дополнительные сведения см. в разделе Управление доступом:
--> https://min.io/docs/minio/kubernetes/upstream/administration/identity-access-management.html#minio-access-management

Здесь описано управление пользователями для внутреннего IDentity Provider (IDP) MinIO.
MinIO также может управлять внешними идентификаторами с помощью
OpenID Connect (OIDC)
  или
Active Directory/LDAP IDentity Provider (IDP).

Для получения дополнительной информации см:
"OpenID Connect Access Management":
--> https://min.io/docs/minio/kubernetes/upstream/administration/identity-access-management/oidc-access-management.html#minio-external-identity-management-openid

"Active Directory / LDAP Access Management":
--> https://min.io/docs/minio/kubernetes/upstream/administration/identity-access-management/ad-ldap-access-management.html#minio-external-identity-management-ad-ldap

[!] Включение внешнего управления идентификацией ОТКЛЮЧАЕТ внутреннюю IDP MinIO,
    за исключением создания access keys.
---

# from Minio UI:
# ${MINIO_URL}/access-keys/new-account: Learn more about Access Keys

Ключи доступа наследуют политики, явно привязанные к родительскому пользователю,
и политики, привязанные к каждой группе, в которой состоит родительский пользователь.

Рекомендуется использовать случайные (random) ключи доступа, которые предоставляются по умолчанию.
Вы можете использовать собственный ключ доступа и секретный ключ, заменив значения по умолчанию.
После создания любого ключа доступа вам будет предоставлена возможность просмотреть и загрузить учетные данные.
Ключи доступа поддерживают ПРОГРАММНЫЙ ДОСТУП ПРИЛОЖЕНИЙ.
Вы не можете использовать ключ доступа для входа в консоль MinIO.

Вы можете указать дополнительную политику IAM в формате JSON,
чтобы дополнительно ограничить доступ ключа доступа к подмножеству действий и ресурсов, явно разрешенных для родительского пользователя.

Дополнительный доступ, выходящий за рамки доступа родительского пользователя, не может быть реализован с помощью этих политик.
Вы не можете изменить дополнительную IAM-политику ключа доступа после сохранения.
---

Ключи доступа MinIO (ранее "Service Accounts" ("Учетные записи служб"))
  - это дочерние идентификаторы аутентифицированного пользователя MinIO,
  включая *_идентификаторы, управляемые извне_*.

# [*] "Identity and Access Management":
#-> https://min.io/docs/minio/kubernetes/upstream/administration/identity-access-management.html#minio-authentication-and-identity-management

  Каждый ключ доступа наследует свои привилегии на основе политик,
  прикрепленных к его родительскому пользователю или к тем группам, в которых состоит родительский пользователь.

[+] Ключи доступа также поддерживают дополнительную встроенную политику,
    которая дополнительно ограничивает доступ к подмножеству действий и ресурсов, доступных родительскому пользователю.

Пользователь MinIO может генерировать ЛЮБОЕ КОЛИЧЕСТВО ключей доступа.
Это позволяет владельцам приложений ГЕНЕРИРОВАТЬ ПРОИЗВОЛЬНЫЕ КЛЮЧИ ДОСТУПА для своих приложений,
не требуя действий со стороны администраторов MinIO.

Поскольку сгенерированные ключи доступа имеют ТЕ ЖЕ ИЛИ МЕНЬШИЕ ПРАВА, что и родительские,
администраторы могут сосредоточиться на управлении родительскими пользователями верхнего уровня,
не занимаясь управлением сгенерированными ключами доступа.

Ключи доступа можно создать:

  1) с помощью консоли MinIO Console;
  2) с помощью команды: `mc admin user svcacct add`

[Срок действия идентификаторов:]
  Срок действия идентификаторов, созданных этими методами,
  НЕ ИСТЕКАЕТ ДО ТЕХ ПОР, пока вы НЕ УДАЛИТЕ:
    - access key
      <или>
    - родительскую учетную запись.

Вы также можете создавать учетные записи служб маркеров безопасности программно с помощью конечной точки
AssumeRole STS API.
По умолчанию срок действия STS-токенов истекает через 1 час,
но вы можете установить срок действия до 7 дней с момента создания.


#### Access Keys are for Programmatic Access ####

  Access Keys support programmatic access by applications.
  You cannot use an access key to log into the MinIO Console.

Credentials:
{Access Key:
UMXOI12ju0nh9aTHfdop
UMXOI12ju0nh9aTHfdop
}

{Secret Key:
Jf8RTnwxDH7BKl4tibSERyp5EEoveA37krlZ3nqP
Jf8RTnwxDH7BKl4tibSERyp5EEoveA37krlZ3nqP
}