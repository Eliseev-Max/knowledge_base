from: https://hub.docker.com/r/minio/minio
(Oficial docs): https://min.io/docs/minio/container/index.html
(MinIO+Nginx -> https://min.io/docs/minio/linux/integrations/setup-nginx-proxy-with-minio.html)

MinIO - это высокопроизводительное объектное хранилище, выпускаемое под лицензией GNU Affero General Public License v3.0.

[!] Оно совместимо по API с облачным сервисом хранения данных Amazon S3.

Используйте MinIO для создания высокопроизводительной инфраструктуры
  → для машинного обучения,
  → для аналитики 
  → для прикладных данных.

************************
* Установка контейнера *
************************

  < Запуск автономного (standalone) сервера MinIO внутри контейнера >

Автономные серверы MinIO лучше всего подходят для ранней разработки и оценки.
Примеры функций, требующих распределенного развертывания MinIO с Erasure Coding:
  * версионирование
  * блокировка объектов
  * репликация бакетов
  и т.д.

Для расширенной разработки и производства разверните MinIO с включенным кодированием Erasure Coding
  - в частности, с минимум 4 дисками на сервер MinIO.
  
Более полная документация приведена в руководстве по быстрому запуску MinIO Erasure Code Quickstart Guide
(https://min.io/docs/minio/linux/operations/concepts.html#how-does-minio-provide-availability-redundancy-and-reliability?ref=docs-redirect).

  Stable (Стабильный)

Выполните следующую команду, чтобы запустить последний стабильный образ MinIO внутри контейнера
с использованием эфемерного тома данных:
---
$ podman run -p 9000:9000 \
             -p 9001:9001 \
             quay.io/minio/minio server /data --console-address ":9001"

#= вариант запуска контейнера minio без nginx, с публикацией портов контейнера на хост;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Два порта для работы с minio: !
!   :9000 = для работы с API;   !
!   :9001 = для Web-интерфейса. !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

РАЗВЕРТЫВАНИЕ MinIO начинается с использованием стандартных учетных данных root minioadmin:minioadmin.
Протестировать развертывание можно с помощью MinIO Console, встроенного в MinIO Server браузера объектов.
Направьте веб-браузер, запущенный на хост-машине, на страницу http://127.0.0.1:9000 и войдите в систему с учетными данными root.
С помощью браузера можно создавать бакеты, загружать объекты и просматривать содержимое сервера MinIO.

Также можно подключиться с помощью любого S3-совместимого инструмента,
например, инструмента командной строки MinIO Client mc.

(Более подробная информация об использовании инструмента командной строки mc приведена в разделе:
"Тестирование с помощью MinIO Client mc": )

Для разработчиков приложений см. раздел https://docs.min.io/docs/ и щелкните MinIO SDKs в навигации, чтобы просмотреть MinIO SDKs для поддерживаемых языков.

[ПРИМЕЧАНИЕ:]
  Для развертывания MinIO с постоянным хранилищем необходимо сопоставить локальные постоянные каталоги хостовой ОС
  с контейнером с помощью опции podman -v.
  Например:
  -v /mnt/data:/data отображает диск хостовой ОС по адресу /mnt/data на /data в контейнере.


GNU\Linux
Для запуска автономного сервера MinIO на Linux-хостах с 64-разрядными архитектурами Intel/AMD используйте следующую команду:

---
wget https://dl.min.io/server/minio/release/linux-amd64/minio
chmod +x minio
./minio server /data
---
#(Замените /data на путь к диску или каталогу, в котором MinIO будет хранить данные)

В следующей таблице перечислены поддерживаемые архитектуры.
Замените URL-адрес wget на архитектуру вашего Linux-хоста.
|__|


Для разработчиков приложений:
  1) см. раздел https://docs.min.io/docs/ 
  2) щелкните MinIO SDKs в навигации, чтобы просмотреть MinIO SDKs для поддерживаемых языков.


ПРИМЕЧАНИЕ:
  1) РАННЯЯ РАЗРАБОТКА и ОЦЕНКА:
  -> лучше всего подходят автономные серверы MinIO.

  Некоторые функции, такие как
    - версионирование,
    - блокировка объектов 
    - репликация bucket-ов,
    требуют распределенного развертывания MinIO с Erasure Coding.

  2) РАСШИРЕННАЯ РАЗРАБОТКА и PRODUCTION:
  -> разверните MinIO с включенным кодированием Erasure Coding,
    в частности, с минимум 4 дисками на сервер MinIO.

(Более полная документация приведена в Кратком руководстве по запуску MinIO Erasure Code).
-> (https://min.io/docs/minio/kubernetes/upstream/index.html?ref=docs-redirect)

---
MinIO - это программно определяемый высокопроизводительный сервер распределенного объектного хранения.
MinIO можно использовать на оборудовании потребительского или корпоративного класса, а также на различных операционных системах и архитектурах.

Во всех развертываниях MinIO используются бэкенды Erasure Coding.

MinIO можно развернуть в одной из следующих ТОПОЛОГИЙ:

  * Single-Node Single-Drive (SNSD, Одноузловая однодисковая или "автономная"):
    => Локальная разработка и оценка
    НАДЕЖНОСТЬ:
      - отсутствует/ограничена

  * Single-Node Multi-Drive (SNMD or "Standalone Multi-Drive", Одноузловая многодисковая)
      -> Рабочие нагрузки с более низкими требованиями к производительности, масштабу и емкости
      НАДЕЖНОСТЬ:
        - на уровне накопителей с настраиваемым допуском к потере до 1/2 всех накопителей
      Оценка многодисковых топологий и поведения при обходе отказа.

  * Multi-Node Multi-Drive (MNMD or "Distributed", Многоузловая многодисковая система)
    = высокопроизводительное объектное хранилище корпоративного класса
      НАДЕЖНОСТЬ:
        - на уровне нескольких узлов/дисков с настраиваемой устойчивостью к потере до 1/2 всех узлов/дисков
    (!) Основное хранилище для:
        * AI/ML,
        * распределенных запросов,
        * аналитики
          и других компонентов Data Lake

      -> Масштабируемость для рабочих нагрузок объемом более петабайта:
         как по объему хранения,
         так и по производительности