##############################################
# Jenkins. Integration with Active Directory #
##############################################

{sources:
  1. Jenkins Integration With Active Directory - Jenkins Ldap Integration: https://youtu.be/JG7T4F3w7qY
  2. Jenkins- Active Directory Authentication: https://youtu.be/dcUXBnsKDcc
  3. Install and Configure LDAP Server and Integration with Jenkins Server: https://youtu.be/jXrHx7S0vh4
}

Заметки:
1. По мнению автора [1]:
  Для установки Jenkins нам потребуется установленная Java (JDK).
  Для Jenkins вполне подойдёт OpenJDK,
  однако для некоторых плагинов (Maven и некоторые другие движки) лучше подойдёт Java JDK Development Kit с официального сайта:
  (https://www.oracle.com/cis/java/technologies/downloads/)
  Выбрал версию: Java SE 8u171/8u172: JDK
  (Java SE Development Kit) 
  Далее устанавливается переменная окружения $JAVA_HOME:
---
$ update-alternatives --display java
>
  java - status is auto
  link currently points to /usr/java/jdk1.8.0_171-amd64/jre/bin/java
  ...
  ...
  Current 'best' version is /usr/java/jdk1.8.0_171-amd64/jre/bin/java

$ vi .bash_profile
#### .bash_profile ####
export JAVA_HOME=/usr/java/jdk1.8.0_171-amd64/jre
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin
########
# полагаю, что .bash_profile в Fedora/Red_Hat-based systems ~ .bashrc в Debian-based Linux OS

[https://sravancloudarch.blogspot.com] -> Installation and Setup Jenkins on Centos 7.x


---
[!] В результате некорректной настройки интеграции и применения изменений в Jenkins стало невозможно войти:
  - ни под доменной учётной записью
  - ни под учётной записью локального пользователя Jenkins
https://stackoverflow.com/questions/65787455/jenkins-active-directory-broke-cannot-login-no-valid-crumb

[Что нужно сделать:]
В конфигурационном файле /var/lib/jenkins/config.xml
(в нашем случае:"/var/jenkins_home/config.xml"),

 УСТАНОВИТЬ вместо значения:
<useSecurity>true</useSecurity>
значение:
<useSecurity>false</useSecurity>
и перезапустить сервис jenkins.

####
Logging ID=21ff064e-6ac4-4bb2-bd13-17fa30ec3cd4
####

###################################################
# Добавление сертификата доверия Active Directory #
###################################################

# Имя файла корневого сертификата:
certnew.cer

## при обращении к конкретным контроллерам домена, их сертификаты будут валидными через высланный. Должны быть.

# Копируем файл сертификата в docker контейнер Jenkins
# ($ docker cp <container-ID>:src_path dest_path)
---
docker cp /home/devops/certnew.cer e4a8f5549c5c:/var/jenkins_home/certnew.cer
---

# Добавляем сертификат в хранилище сертификатов Java при помощи встроенной (в JDK) утилиты keytool
---
keytool -importcert \
	 -file certnew.cer \
	 -alias prosoftad \
	 -cacerts \
	 -storepass changeit \
	 -noprompt
---
## Таким способом не сработало
####
#+ "Как посмотреть сертификаты java": https://ru.hexlet.io/qna/java/questions/kak-posmotret-sertifikaty-java
---
keytool -list -v -keystore имя_хранилища
## в нашем случае:
имя_хранилища = $JENKINS_HOME/.keystore/
---

## Вывод в консоль будет иметь следующий формат:
---<Console>---
Type: X.509
Issuer: CN=Example Root CA
Subject: CN=Example Domain
Valid from: Sat Jan 01 00:00:00 UTC 2022 until: Tue Jan 01 00:00:00 UTC 2024
---
Здесь:

  * Type — указывает на тип сертификата,
  * Issuer — на удостоверяющий центр, выдавший сертификат,
  * Subject — на имя домена или IP-адрес, для которого выдан сертификат,
  * Valid from и until — на даты начала и окончания действия сертификата соответственно.
####


[Step 1. Создаём хранилище сертификатов]
---
CUSTOM_KEYSTORE=$JENKINS_HOME/.keystore/
mkdir -p $CUSTOM_KEYSTORE
#cp $JAVA_HOME/jre/lib/security/cacerts $CUSTOM_KEYSTORE
cp $JAVA_HOME/lib/security/cacerts $CUSTOM_KEYSTORE
---

[Step 2. Импортируем наш сертификат]
---
	$JAVA_HOME/bin/keytool -keystore $JENKINS_HOME/.keystore/cacerts \
	-import -alias <YOUR_ALIAS_HERE> -file <YOUR_CA_FILE>
---
---
$JAVA_HOME/bin/keytool -keystore $JENKINS_HOME/.keystore/cacerts \
	-import -alias Jenkins_AD -file certnew.cer
---

[Step 3. Добавить сертификат в параметры запуска Jenkins]
---
-Djavax.net.ssl.trustStore=$JENKINS_HOME/.keystore/cacerts \
-Djavax.net.ssl.trustStorePassword=changeit
---

[!] По сути Step 2, Step 3 - это ранее описанный (первый) способ

Эти параметры будем прокидывать с помощью специальной переменной окружения JAVA_OPTS
---
  environment:
    JAVA_OPTS: "-Djavax.net.ssl.trustStore=$JENKINS_HOME/.keystore/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
---

ISSUE:

--->
# Проблема возникает, когда хост LDAP передает сертификат, не содержащий правильного имени хоста в SAN (Subject Alternative Name).
# Java проверяет имя хоста в сертификате вместе с хостом во время рукопожатия SSL. При этом отображается следующее сообщение об ошибке:
---
## for Domain Controller = dc1.prosoft.ural.ru:3268 | dc3.prosoft.ural.ru:3268
java.net.SocketException: Connection reset
...
Caused: javax.naming.CommunicationException: simple bind failed: dc1.prosoft.ural.ru:3268 [Root exception is java.net.SocketException: Connection reset]

####

## for Domain Controller = 172.25.245.213:3268
## port 3268 in docker container has binded to the host port

java.net.SocketException: Connection reset
...
Caused: javax.naming.CommunicationException: simple bind failed: 172.25.245.213:3268 [Root exception is java.net.SocketException: Connection reset]
---
Проблемы возникают при включённых:
[v] Require TLS
TLS Configuration: JDK TrustStore
Расширенные:
  [v] Enable StartTls

---<Require TLS>---
Требуется, чтобы соединение с Active Directory было зашифровано TLS.

Если вы используете не ADSI режим (вы указали имя домена в конфигурации),
то это будет использовать LDAP over TLS (порт 636 или порт 3269)
и будет иметь ПРИОРИТЕТ НАД startTLS, который обновляет соединение до TLS на месте.

Для режима ADSI это изменит ADSI
  с согласования шифрования только для части *аутентификации* ->
  на использование шифрования TLS для всего соединения.

[Примечание:]
  в любом из режимов работы включение этой опции требует:
    - чтобы в вашем домене (доменах) были установлены службы сертификации
	  <или>
	- была выполнена другая ручная настройка.
---

Выполните следующие действия, чтобы устранить эту проблему:
  1. Убедитесь, что вы извлекли правильный сертификат контроллера домена, который вы пытаетесь привязать с помощью MMC, из самого контроллера домена.
  2. При привязке к нескольким контроллерам домена рекомендуется использовать сертификат главного корневого контроллера домена, который должен охватывать все существующие контроллеры домена для привязки.
  3. Загрузите новый сертификат LDAPS в существующее хранилище сертификатов. Или создайте новый, если забыли пароль. (Применимо только для XDM9 и более ранних версий).
  4. Перепривязка.
(https://support.citrix.com/article/CTX201087/error-javaxnamingcommunicationexception-simple-bind-failed-while-binding-ldaps-on-xenmobile)
<---