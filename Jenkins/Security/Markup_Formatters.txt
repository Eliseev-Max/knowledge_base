Jenkins. Markup Formatters

#(https://www.jenkins.io/doc/book/security/markup-formatter/)


Jenkins позволяет пользователям с соответствующими правами вводить описания различных объектов, таких как
  - представления (views),
  - задания (jobs),
  - сборки (builds)
  и т. д.

Эти описания фильтруются форматировщиками разметки (markup formatters).

Они служат двум целям:
  1. Позволяют пользователям использовать богатое форматирование для этих описаний
  2. Защищают других пользователей от атак межсайтового скриптинга (Cross-Site Scripting, XSS).

'''
#(*) Cross-Site Scripting, XSS: https://en.wikipedia.org/wiki/Cross-site_scripting

Межсайтовый скриптинг (XSS)
  = это тип уязвимости безопасности ( = security vulnerability[*1]), которая может быть обнаружена в некоторых веб-приложениях.
  XSS-атаки позволяют злоумышленникам внедрять скрипты на стороне клиента ( = client-side scripts) в веб-страницы,
  просматриваемые другими пользователями.

  Уязвимость межсайтового скриптинга может быть использована злоумышленниками для обхода средств контроля доступа,
  таких как политика одинакового происхождения (same-origin policy[*2]).
  Во второй половине 2007 года XSSed задокументировал 11 253 межсайтовых уязвимости, по сравнению с 2 134 "традиционными" уязвимостями,
  задокументированными Symantec [-> 1].
  Последствия XSS варьируются в диапазоне от мелкой неприятности до значительного риска для безопасности, в зависимости от
    * чувствительности данных,обрабатываемых уязвимым сайтом,
    * и характера любых мер по снижению безопасности, принятых сетью-владельцем сайта.

  OWASP[*3] считает термин "межсайтовый скриптинг" ошибочным.
  Изначально это была атака, которая использовалась для проникновения в данные между сайтами,
  но постепенно она стала включать в себя и другие формы атак с внедрением данных ["data injection attacks"-> 2].

//[1]: "Vulnerability (computer security)":= Уязвимости - это недостатки в компьютерной системе, которые ослабляют общую безопасность системы.
## https://en.wikipedia.org/wiki/Vulnerability_(computer_security)

//[2]: "same-origin policy (SOP)":= В вычислительной технике политика одинакового происхождения (SOP)
       - это концепция в модели безопасности веб-приложений.
  Согласно этой политике, веб-браузер разрешает скриптам, содержащимся на первой веб-странице,
  получать доступ к данным на второй веб-странице,
(!) но только если обе веб-страницы имеют одинаковое происхождение.
  Происхождение определяется как комбинация схемы URI + имени хоста + номера порта.
  Эта политика НЕ ПОЗВОЛЯЕТ вредоносному скрипту на одной странице получить доступ к конфиденциальным данным на другой веб-странице
  через объектную модель документа (DOM) этой страницы.
## https://en.wikipedia.org/wiki/Same-origin_policy

<1> Symantec === Gen Digital: https://en.wikipedia.org/wiki/Gen_Digital
<2> "OWASP. Cross Site Scripting Prevention Cheat Sheet": https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html
<*> Open Worldwide Application Security Project (OWASP) — это открытый проект обеспечения безопасности веб-приложений.
    Сообщество OWASP включает в себя корпорации, образовательные организации и частных лиц со всего мира.
'''


####################################
# Configuring the Markup Formatter #
####################################

Форматировщик разметки можно настроить в Manage Jenkins -> Security -> Markup Formatter.

Средство форматирования разметки по умолчанию (markup formatter) в виде обычного текста отображает все описания в том виде,
в каком они были введены:
  небезопасные метасимволы HTML, такие как "<" и "&", экранируются,
  а переносы строк отображаются как <br/> HTML-теги.

Другим часто устанавливаемым средством форматирования разметки является Safe HTML, предоставляемый плагином OWASP Markup Formatter.
# "OWASP Markup Formatter": https://plugins.jenkins.io/antisamy-markup-formatter/

Он позволяет использовать базовое, безопасное подмножество HTML.

***************************
* Security Considerations *
***************************

[User Profile Descriptions]

  Каждый пользователь с учетной записью и правами Overall/Read может РЕДАКТИРОВАТЬ СВОЙ ПРОФИЛЬ пользователя.
  Это включает в себя описание, которое отображается с помощью настроенного форматировщика разметки.

(!) Поэтому может быть небезопасно настраивать форматтер разметки, позволяющий произвольный HTML,
(!) даже при ограничении таких разрешений, как
  > Job/Configure
  > Build/Update
  полностью доверенными пользователями:
  (!) Любой пользователь, имеющий учетную запись, сможет редактировать свое описание,
      и любой другой пользователь, получивший доступ к его профилю, может стать жертвой XSS-атаки.

  Это особенно опасно для ОБЩЕДОСТУПНЫХ ЭКЗЕМПЛЯРОВ Jenkins,
  когда сфера безопасности реализована с помощью таких сервисов, как
  + GitHub,
  + GitLab
  + или учетные записи Google,

  => в результате чего ПОТЕНЦИАЛЬНО ЛЮБОЙ может войти в Jenkins и отредактировать свой профиль.

