Pipeline. Jenkinsfile
Как изменить текущую директорию, в которой будут исполняться команды?


Важно помнить, что в steps {..} пайплайна результат выполнения такой конструкции:
---

steps {
    sh "cd new_dir"
    sh "pwd"
    sh "ls -alhi"
}
---
  не всегда предсказуем и очевиден.
  
Шаги sh "pwd" и sh "ls -alhi" могут быть выполнены в исходной папке (текущем WORKSPACE (/WORKDIR))

Мне удалось изменить это поведение и запускать команды в требуемой папке
(дочерней относительно $WORKSPACE), "обернув" команды в инструкцию dir('new_dir') {sh ...}

[!] Директория 'new_dir' может иметь ОТНОСИТЕЛЬНЫЙ или АБСОЛЮТНЫЙ путь

[Пример:]
---
stage('Assembly') {
    steps {
      dir('build') {
        sh "pwd"
        sh "cmake .."
        sh "make -j4"
      }
    }
}
---

************************
* Подробнее о шаге dir *
************************

1. Официальная документация Jenkins
  -> (https://www.jenkins.io/doc/pipeline/steps/workflow-durable-task-step/#dir-change-current-directory)

  dir: изменить текущую директорию

  = Изменить текущий каталог.
  Любой шаг внутри блока dir будет использовать этот каталог в качестве текущего,
  а любой относительный путь будет использовать его в качестве базового
  (навигация по ФС будет осуществляться относительно указанного в dir('') каталога)

  path : String     # строковый параметр
  
== Относительный путь к каталогу в workspace (рабочей области) для использования в качестве нового рабочего каталога.

2. Jenkins Pipeline – Change to Another Folder
  -> (https://www.baeldung.com/ops/jenkins-pipeline-change-to-another-folder)

  Иногда в Jenkins необходимо выполнить ряд действий в определенном месте файловой системы.
  В таких случаях мы можем изменить рабочий каталог с помощью шагов "dir" или "sh".

**************************
* Использование шага dir *
**************************

  Существует несколько способов изменить рабочий каталог в конвейерах Jenkins.
  Шаг dir (The `dir` step) - это встроенный в Jenkins шаг, который позволяет нам переходить в другую директорию на время выполнения блока.
  Это очень удобно, когда мы хотим запускать определенные команды из конкретной директории.

[Пример:]
  Изменим наш текущий рабочий каталог на подкаталог "scripts" с помощью  dir:

---{Jenkinsfile}---
pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                dir('scripts') {
                    /* execute commands in the scripts directory */
                }
            }
        }
    }
}
---
# Мы определили этап Build (stage('Build')) в нашем конвейере, который изменяет рабочий каталог.
# Используя функцию dir, сценарий переключается на каталог "scripts",
# а затем запускает этапы сборки.

#[+] Кроме того, в приведенном выше сценарии мы использовали `agent any`,
#    что означает, что любой доступный агент Jenkins может выполнить это задание конвейера.

[!] Как только блок завершится, рабочая директория вернется в прежнее состояние.

[*Кроме_того*]:
  с помощью этого метода мы можем перейти в любую директорию, а не только в поддиректории.
  Чтобы изменить директории за пределами текущего рабочего каталога (current working directory),
  нам нужно указать абсолютный путь:

---{Jenkinsfile}---
pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                dir('/var/jenkins_home/workspace/SamplePipeline/scripts') {
                    /* execute commands in the scripts directory */
                }
            }
        }
    }
}
---
# В приведенном выше случае мы успешно изменили рабочий каталог на
# '/var/jenkins_home/workspace/SamplePipeline/scripts'

*************************
* Использование шага sh *
*************************

  Другой способ смены директорий в Jenkins Pipeline - использовать шаг sh вместе с командой cd.
  Используя шаг sh, мы можем изменить наш рабочий каталог на каталог скриптов:

---{Jenkinsfile}---
pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'cd scripts'
                    /* execute commands in the scripts directory */
            }
        }
    }
}
---

# В данном случае шаг sh использует команду cd для изменения текущего рабочего каталога на "scripts".
# Шаг sh позволяет нам выполнять команды оболочки в конвейере.
# Как только рабочий каталог изменяется, конвейер запускает шаги сборки в каталоге "scripts".

[Моё замечание:]
  способ не даёт 100% гарантии, что всё пойдёт так, как задумано.
  Лучше использовать инструмент Jenkins Pipeline == dir('name_of_dir') {/* execute */}


---< Многострочные sh >---
# Ключевое слово здесь - ИНТЕРПОЛЯЦИЯ. Погуглить!
Команды sh - это строки, используйте стандартные многострочные строки groovy (тройные кавычки).
[ Различия в использовании ''' и """ (одинарных и двойных 3x-кавычек) ]:

  1) Если вы используете одинарные кавычки ''':
       символы `$` будут переданы в shell, и вы не сможете передать переменные (env.vars) groovy в ваш скрипт.

  2) Если вы используете тройные двойные кавычки """:
       ваши выражения ${} будут РАЗРЕШЕНЫ groovy ДО ЗАПУСКА shell,
       -> поэтому вам нужно будет экранировать знаки `$`, которые вы хотите передать в shell

(from: https://community.jenkins.io/t/how-to-implement-multi-line-shell-command-in-declarative-syntax/2467)
---


***********
* ws step *
***********
(https://www.jenkins.io/doc/pipeline/steps/workflow-durable-task-step/#ws-allocate-workspace)

ws = Выделить || распределить рабочую область

  Выделяет рабочую область.

[!] Обратите внимание, что рабочее пространство ($WORKSPACE) автоматически выделяется на шаге node.

dir : String

  Рабочее пространство автоматически выделяется с шагом node,
  или же можно получить альтернативное рабочее пространство с помощью этого шага ws,
  но по умолчанию местоположение выбирается автоматически.
  (Что-то вроде AGENT_ROOT/workspace/JOB_NAME@2.)

  Вместо этого вы можете указать здесь путь, и это рабочее пространство будет заблокировано (locked).
  (Путь может быть как относительным к корню агента сборки, так и абсолютным).

  Если параллельные сборки запрашивают одно и то же workspace, вместо него может быть заблокирован каталог с суффиксом, например @2.
  В настоящее время нет опции ожидания блокировки именно запрашиваемого каталога;
  если вам нужно обеспечить такое поведение, вы можете:
    * либо отказать (error), когда pwd укажет, что вы получили другой каталог,
    * либо обеспечить последовательное выполнение этой части сборки с помощью других средств,
      таких как шаг блокировки (lock step)

[!] Если вы НЕ ЗАБОТИТЕСЬ О БЛОКИРОВКЕ, просто используйте шаг dir для смены текущего каталога.
---