[ Official Jenkins Docker image
	https://github.com/jenkinsci/docker/blob/master/README.md
]
Запуск контейнера с Jenkins
	$ docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11

Проект Jenkins рекомендует не включать исполнителей на контроллере.
Для подключения build-агентов через входящее TCP-соединение нужно примапить порт 50000 Docker-хоста к порту 50000 docker-контейнера.
[Контроллер Jenkins] ↔ <tcp-port 50000> ↔ [Агенты]
[to map = сопоставлять]

* Если используются только агенты сборки SSH (исходящие): маппинг портов не требуется (т.к. соединение устанавливается с контроллера)
* Если вы подключаете агентов с помощью веб-сокетов (начиная с Jenkins 2.217), порт агента TCP также не используется.

Рабочее пространство (workspace) Jenkins:
	/var/jenkins_home/
	ЗДЕСЬ хранятся все данные Jenkins, включая плагины и конфигурацию‼

Использование bind mounts к томам при запуске контейнера с Jenkins:	
	$ docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11

	+ появляется возможность управлять подключаемым томом 
	+ появляется возможность подключаться к другому контейнеру для обновлений
	
‼ Тома Docker (Docker Volumes) сохраняют свое содержимое, даже когда контейнер останавливается, запускается или удаляется.
‼‼ПРИМЕЧАНИЕ:
	Избегайте использования bind mount из папки на хост-компьютере в /var/jenkins_home, так как это может привести к проблемам с правами доступа к файлам:
	пользователь, используемый внутри контейнера, может не иметь прав на папку на хост-компьютере.
	Если вам действительно нужно выполнить bind mount для jenkins_home:
		• убедитесь, что каталог на хосте доступен пользователю jenkins внутри контейнера (пользователь jenkins — uid 1000) 
		или
		• используйте параметр -u some_other_user с запуском докера.