У нас была эта проблема довольно долгое время с нашим Jenkins за прокси нашей компании.
На днях они изменили порядок схем аутентификации, которые требует наш прокси. В этот день наш Jenkins перестал подключаться к интернету.

Очевидно, что Jenkins не может подключиться через прокси, который требует NTML аутентификации.
Это заставило меня выпустить улучшение для Jenkins, чтобы расширить экран конфигурации прокси. Во время работы над расширением я обнаружил, что Jenkins не использует все системные свойства, связанные с прокси, поэтому он не может работать с NTLM.

Поэтому ответ для прокси, который позволяет только NTLM аутентификацию, таков: он не будет работать через пользовательский интерфейс Jenkins.

Но если ваш прокси позволяет другие схемы аутентификации, вы можете следовать нашему обходному пути, который довольно прост: добавьте системное свойство java -Dhttp.auth.preference="basic" в сценарий запуска Jenkins или в контейнер.

Это заставит базовые библиотеки и механизмы Java, используемые Jenkins, подключаться к вашему прокси с помощью базовой аутентификации, а не NTLM.

Чтобы выделить

    Поддерживаемые схемы аутентификации в порядке предпочтения: ntlm, digest, basic
    схема аутентификации ntlm выбрана автоматически http-клиентом apache

Таким образом, в нашем случае мы могли бы обойти все эти проблемы, если бы на странице прокси была возможность определить схему аутентификации, которую должен использовать http-клиент. Если я найду время, я посмотрю, смогу ли я предложить запрос на исправление.

https://issues.jenkins.io/browse/JENKINS-32293

https://stackoverflow.com/questions/29682844/jenkins-proxy-407-error

https://www.securitylab.ru/contest/212100.php

Jenkins Issue 3350 (NTLM Authentication)
https://issues.jenkins.io/browse/JENKINS-3350

Префикс входа в систему с доменом NT или без него не имеет никакого значения.
Каким-то образом hudson (java?) не предоставляет правильную информацию об аутентификации.

Пытались развернуть Hudson на хосте Windows.
Зарегистрированному пользователю разрешен доступ в интернет через прокси-сервер
Результат: все заработало.

Интересный момент: мы запускаем artifactory на том же хосте, что и "неработающий" hudson.
Есть возможность указать логин, пароль и домен.
В этом случае все работает.

Предположение: проблема каким-то образом связана с доменом, который, похоже, не предоставляется должным образом прокси-серверу
(BlueCoat).

---
Теперь у меня есть немного больше знаний о том, как все эти прокси работают в Java:

Hudson использует прокси-аутентификацию Java JVM.
Последняя реализует схему аутентификации NTLM.
Однако она использует учетные данные Windows процесса. Поэтому по умолчанию она использует профиль входа в систему, если вы его не указали.
Это означает, что какие бы логин и пароль вы ни указали для прокси-аутентификации, когда вы находитесь в Windows и требуется NTLM-аутентификация,
JVM будет использовать учетные данные процесса и игнорировать то, что вы указали.

Artifactory полагается на стороннюю библиотеку (HTTPClient) для всех своих HTTP-соединений.
Это означает, что аутентификация JVM обходится и используется аутентификация стороннего прокси-сервера.
HTTPClient имеет реализацию NTLM v1 и частичную, но в любом случае работающую реализацию NTLM v2. В этом случае будут использоваться учетные данные, предоставленные вами, а не JVM.

Какой из них лучше использовать. Это зависит от контекста. HTTPClient может быть более гибким (например, в моем случае), потому что я не могу запустить процесс под идентификатором, имеющим прокси-доступ. Более того, вы можете запустить свой процесс на хосте не Windows. Однако ваш прокси NTLM v2 полностью поддерживается JVM и может не работать с HTTPClient. Тогда вы должны развернуть процесс на Windows...
