Работа с Jenkinsfile

Использование переменных среды

Jenkins Pipeline предоставляет переменные среды через глобальную переменную env, которая доступна из ЛЮБОГО МЕСТА в Jenkinsfile.
Полный список переменных среды, доступных из Jenkins Pipeline: ${YOUR_JENKINS_URL}/pipeline-syntax/globals#env
Список переменных среды:
	BUILD_ID
		- текущий ID сборки, идентичный BUILD_NUMBER для сборок, созданных в версиях Jenkins 1.597+
		
	BUILD_NUMBER
		- текущий номер сборки, такой, как, например "153"
		
	BUILD_TAG
		- строка типа  jenkins-${JOB_NAME}-${BUILD_NUMBER}. Удобно помещать в файл ресурса, файл .jar и т.д. для более лёгкой идентификации
		
	BUILD_URL
		- URL, по которому могут быть найдены результаты сборки
		
	EXECUTOR_NUMBER
		- уникальный номер, идентифицирующий текущего исполнителя (среди исполнителей одной машины), выполняющего эту сборку.
		  Это число, которое вы видите в «статусе исполнителя сборки», за исключением того, что число начинается с 0, а не с 1.
		  
	JAVA_HOME
		- если джоба настроена на использование определённого JDK, эта переменная устанавливается в JAVA_HOME указанного JDK.
		  Когда эта переменная установлена, PATH также обновляется, чтобы включить подкаталог bin JAVA_HOME.
		  
	JENKINS_URL
		- полный URL Jenkins-а (например,  https://example.com:port/jenkins/)
		  доступно только в том случае, если URL-адрес Jenkins установлен в "System Configurations"
		  
	JOB_NAME
		- имя проекта данной сборки
		
	NODE_NAME
		- имя узла(ноды), на котором(й) запущена текущая сборка
		
	WORKSPACE
		- абсолютный путь рабочей области

Пример:
pipeline {
	agent any
	stages {
		stage('Example') {
			steps {
				echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
			}
		}
	}
}

Установка переменных окружения
Установка переменной среды в Jenkins Pipeline выполняется по-разному для декларативного и скриптового pipeline
Declarative конвейер поддерживает директиву среды; 
пользователи Scripted конвейера должны использовать шаг withEnv.

Jenkinsfile (Declarative Pipeline)

pipeline {
	agent any
	environment { 
		CC = 'clang'		# Задали переменную в блоке верхнего уровня → будет применима ко всем steps в Pipeline
	...
	}
}

	Если директиву environment определить внутри stage, переменные окружения, заданные в ней,
	будут распространяться только на шаги (steps) внутри данного stage
	
Динамическая установка переменных окружения
