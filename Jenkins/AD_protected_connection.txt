Active Directory protected connections


####################
# 1. Using SSL/TLS #
####################
# (https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/8e73932f-70cf-46d6-88b1-8d9f86235e81)

Active Directory допускает два способа создания защищенного SSL*/TLS соединения с DC (Domain Controller).
  Первый:
    подключение к DC через защищенный порт LDAPS
    (порты TCP:
      - 636
	  - 3269
    => в AD DS** <=,
	  + а также порт, специфичный для конфигурации AD LDS***).

[ Secure Sockets Layer (SSL)*:
  - Протокол безопасности, поддерживающий конфиденциальность и целостность сообщений в клиентских и серверных приложениях, взаимодействующих через открытые сети.
  SSL поддерживает аутентификацию сервера и, опционально, клиента с помощью сертификатов X.509 [X509] и [RFC5280].
  На смену SSL пришел протокол Transport Layer Security (TLS). TLS версии 1.0 основан на SSL версии 3.0 [SSL3].

  Active Directory Domain Services (AD DS)*:
  - Служба каталогов (DS), реализованная контроллером домена (DC).
  DS предоставляет хранилище данных для объектов, которое распределено между несколькими DC.
  DC взаимодействуют как одноранговые, чтобы гарантировать, что локальное изменение объекта корректно реплицируется между DC.
  AD DS является развертыванием Active Directory [MS-ADTS].

  Active Directory Lightweight Directory Services (AD LDS)**:
  - служба каталогов (DS), реализованная контроллером домена (DC).
  AD LDS является развертыванием Active Directory [MS-ADTS].
  [!] Наиболее существенным отличием AD LDS от доменных служб Active Directory (AD DS) является то,
      что AD LDS НЕ СОДЕРЖИТ КОНТЕКСТОВ ИМЕНОВАНИЯ ДОМЕНА (domain NCs).
    
	На одном сервере может располагаться несколько DC AD LDS.
	Каждый DC - это независимый экземпляр AD LDS со своим независимым состоянием.
	AD LDS может работать как DS операционной системы
	  <или>
	как служба каталогов, предоставляемая отдельным приложением (Active Directory Application Mode (ADAM)).
]

  Второй:
    1) подключение к DC через обычный LDAP-порт
    (TCP-порты:
      - 389
	  <или>
	  - 3268
    => в AD DS <=
      + и порт, специфичный для конфигурации, в AD LDS),
	
	2) а затем отправка расширенной операции LDAP_SERVER_START_TLS_OID [RFC2830].

  В обоих случаях DC будет запрашивать (но НЕ ТРЕБОВАТЬ) сертификат клиента как часть рукопожатия SSL/TLS [RFC2246].

  Если клиент в это время предъявляет DC ДЕЙСТВИТЕЛЬНЫЙ СЕРТИФИКАТ,
  он может использовать его для аутентификации (связывания) соединения в качестве учетных данных, представленных сертификатом.

  Если клиент устанавливает защищенное SSL/TLS соединение посредством подключения к защищенному порту LDAPS,
  то соединение считается немедленно аутентифицированным (связанным) в качестве учетных данных, представленных сертификатом клиента.
  Внешняя привязка НЕ ДОПУСКАЕТСЯ, и она будет ОТКЛОНЕНА С ОШИБКОЙ.

  Если клиент НЕ ПРЕДЪЯВЛЯЕТ СЕРТИФИКАТ во время рукопожатия SSL/TLS,
  -> соединение НЕ АУТЕНТИФИЦИРУЕТСЯ и рассматривается как АНОНИМНОЕ.
  В этом случае DC отклоняет любую попытку выполнить привязку EXTERNAL с ошибкой:
***************************************
* invalidCredentials / <unrestricted> *
***************************************

  Если клиент устанавливает защищенное SSL/TLS соединение с помощью операции:
---
LDAP_SERVER_START_TLS_OID
---
  СОСТОЯНИЕ АУТЕНТИФИКАЦИИ соединения после операции остается ТАКИМ ЖЕ, каким оно было ДО ОПЕРАЦИИ.
  DC аутентифицирует соединение как учетные данные, представленные сертификатом клиента, ТОЛЬКО если впоследствии ВЫПОЛНЯЕТСЯ ПРИВЯЗКА EXTERNAL SASL*.
[*The Simple Authentication and Security Layer, SASL
  - Простой уровень аутентификации и безопасности, как описано в [RFC2222].
  Это механизм аутентификации, используемый в Lightweight Directory Access Protocol (LDAP).
]
  Это похоже на "неявное утверждение" из раздела 5.1.2.1 [RFC2830],
  за исключением того, что
    - ни идентификатор аутентификации,
	- ни идентификатор авторизации
  НЕ УСТАНАВЛИВАЮТСЯ в соединении до тех пор, пока не произойдет привязка EXTERNAL.

  Если клиент включает поле authzId в привязку EXTERNAL, в соответствии с "явным утверждением" раздела 5.1.2.2 [RFC2830],
  то, как описано в разделе 5.1.1.1.2, поле authzId содержит DN объекта, в качестве которого привязка EXTERNAL аутентифицирует соединение;

==> другими словами <==
  объект, связанный с учетными данными, представленными сертификатом.
  Таким образом, неявное утверждение и явное утверждение функционально идентичны.

  Если клиент выполняет привязку EXTERNAL, но не предоставляет сертификат во время рукопожатия SSL/TLS, привязка EXTERNAL терпит НЕУДАЧУ с ошибкой

invalidCredentials / <unrestricted>.


В качестве альтернативы:
  клиент может выполнить любую другую форму привязки LDAP, допустимую для соединения, защищенного SSL/TLS,
    <или>
  клиент может не выполнять привязку, чтобы продолжать использовать любую идентификацию аутентификации и авторизации, которая была установлена ранее в соединении.

---
(1) 

(2) The Transport Layer Security (TLS) Protocol Version 1.3, AUGUST 2018:
{https://www.rfc-editor.org/info/rfc8446}

() SSL/TLS Best Practices for 2023:
{https://www.ssl.com/guide/ssl-best-practices/}

() "Supported SSL and Transport Layer Security protocols": https://www.ibm.com/docs/en/i/7.1?topic=concepts-supported-ssl-transport-layer-security-protocols

[Статья wiki: "SSL and TLS Protocols"]:
(https://wiki.openssl.org/index.php/SSL_and_TLS_Protocols)
---<Суть>---
SSL расшифровывается как Secure Sockets Layer и первоначально был создан компанией Netscape.
SSLv2 и SSLv3 - это две версии этого протокола (SSLv1 никогда не был публично выпущен).

[!] После SSLv3 протокол SSL был ПЕРЕИМЕНОВАН в TLS.

TLS расшифровывается как Transport Layer Security и берет свое начало с TLSv1.0, который является обновленной версией SSLv3.

Эти протоколы стандартизированы и описаны в RFC.

OpenSSL обеспечивает реализацию этих протоколов и часто используется в качестве эталонной реализации для любой новой функции.

Целью SSL было обеспечение безопасной связи с использованием классических TCP-сокетов с очень небольшими изменениями в API использования сокетов, чтобы иметь возможность использовать безопасность в существующем коде TCP-сокетов.

SSL/TLS используется во всех браузерах мира для обеспечения функциональности https (http secure).

Последняя версия стандарта - TLSv1.2 http://tools.ietf.org/html/rfc5246, в то время как готовящийся TLS v1.3 все еще находится в стадии разработки.

Поддержка отсутствия соединения обеспечивается с помощью DTLS.

Эти протоколы являются настраиваемыми и могут использовать различные шифры в зависимости от их версии.
---

(https://www.ibm.com/docs/en/tsm/7.1.0?topic=passwords-configuring-windows-active-directory-tlsssl)
Перед тем как сервер IBM® Tivoli® Storage Manager сможет проверять подлинность паролей,
необходимо настроить Windows Active Directory.

Чтобы настроить сервер Windows Active Directory, выполните следующие действия:
  1) отключите автоматическое обновление корневых сертификатов в Windows Update,
     ЕСЛИ сервер Windows Active Directory НЕ ИМЕЕТ доступа к Интернету.

  2) Синхронизируйте системное время сервера Tivoli Storage Manager и системы Windows Active Directory.
     Можно использовать сервер сетевого протокола времени (NTP).
	 Дополнительные сведения о синхронизации системного времени см. в документации к операционной системе.
	 Информацию о синхронизации Active Directory можно также найти на веб-сайте Microsoft.

  3) Настройте защиту транспортного уровня (TLS) для соединений с сервером LDAP.
     + Перейдите на веб-сайт Microsoft и выполните поиск LDAP и SSL.

  4) Получите подписанный сертификат.
     Для включения TLS в Active Directory требуется наличие подписанного сертификата в хранилище сертификатов Windows.
	 Вы можете получить подписанный сертификат из следующих источников:
       * Сторонний центр сертификации (ЦС).
       * Установите роль Certificate Services на систему, которая подключена к домену Active Directory,
	     и настройте корневой ЦС предприятия.

#######
# SSL #
#######
(см. отд. файл)