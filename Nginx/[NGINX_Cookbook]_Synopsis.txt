Chapter 2
"High-Performance Load Balancing"
2.0 Introduction

"Today’s internet user experience demands performance and uptime."

Сегодняшние пользователи Интернета требуют производительности и безотказной работы.
Для этого запускается несколько копий одной и той же системы, и нагрузка распределяется между ними.
По мере увеличения нагрузки можно подключить еще одну копию системы.

Этот архитектурный прием называется горизонтальным масштабированием (horizontal scaling).
Инфраструктура на базе программного обеспечения становится все более популярной благодаря своей гибкости, открывающей огромный мир возможностей.
Независимо от того, какова цель использования инфраструктуры
  - небольшая, как два сервера для обеспечения высокой доступности, 
  - или большая, как тысячи по всему миру,
  необходимо решение для балансировки нагрузки, которое будет таким же динамичным, как и инфраструктура.

NGINX удовлетворяет эту потребность несколькими способами, такими как Балансировка нагрузки
  * HTTP,
  * TCP 
  * и протокола пользовательских дейтаграмм (UDP),
о которой мы расскажем в этой главе.

При балансировке нагрузки важно, чтобы воздействие на клиентский опыт было полностью положительным.
Во многих современных веб-архитектурах используются уровни приложений без статистики, хранящие состояние в общей памяти или базах данных.
Однако это реальность не для всех. Состояние сеанса имеет огромную ценность и значение в интерактивных приложениях.
Это состояние может храниться локально на сервере приложения по ряду причин; 
  например, в приложениях, для которых обрабатываемые данные настолько велики,
  что сетевые накладные расходы слишком дороги с точки зрения производительности.

Когда состояние хранится локально на сервере приложений, для удобства пользователей очень важно,
чтобы последующие запросы продолжали доставляться на тот же сервер.
Другая сторона ситуации заключается в том, что серверы не должны освобождаться до завершения сессии.

Для масштабной работы с приложениями с изменяемым состоянием требуется интеллектуальный балансировщик нагрузки.
NGINX Plus предлагает несколько способов решения этой проблемы с помощью отслеживания файлов cookie или маршрутизации.

В этой главе мы рассмотрим сохранение сеансов в контексте балансировки нагрузки с помощью NGINX и NGINX Plus.