Sources:
1. Iptables Tutorial 1.2.2
[ https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html#MANGLETABLE ]

2. Утилита iptables в Ubuntu
[ https://tokmakov.msk.ru/blog/item/473 ]

Цепочки правил:

    • PREROUTING — правила в этой цепочке применяются ко всем пакетам, которые поступают на сетевой интерфейс извне
    • INPUT — применяются к пакетам, которые предназначаются для самого хоста или для процесса на данном хосте
    • FORWARD — правила, которые применяются к транзитным пакетам, проходящим через хост, не задерживаясь
    • OUTPUT — применяются к пакетам, которые сгенерированы самим хостом или процессами на данном хосте
    • POSTROUTING — применяются к пакетам, которые должны покинуть сетевой интерфейс данного хоста

Над цепочками правил в iptables есть еще один уровень абстракции — таблицы.
Таблицы предназначены для выполнения разных действий над пакетами, например для модификации или фильтрации:

    ♦ raw — предназначена для работы с сырыми пакетами, пока они еще не прошли обработку
    ♦ mangle — предназначена для модификации различных заголовков пакета
    ♦ nat — обеспечивает работу NAT, если сервер используется в качестве маршрутизатора
    ♦ filter — основная таблица для фильтрации пакетов, используется по умолчанию

Утилита iptables. Параметры работы с цепочками:
(Если таблица не указана, подразумевается таблица filter)
    -A (или --append) — добавить правило в цепочку
    -D (или --delete) — удалить правило из цепочки
    -I (или --insert) — вставить правило в цепочку под указанным номером
    -L (или --list) — вывести все правила для заданной цепочки
    -F (или --flush) — очистить все правила для заданной цепочки (таблицы)
    -N (или --new-chain) — создать новую цепочку
    -X (или --delete-chain) — удалить цепочку
    -P (или --policy) — установить действие по умолчанию для цепочки

  Дополнительные опции:
    -v (или --verbose) — увеличить подробность сообщений, при указании с командой --list будет выводиться имя интерфейса, параметры правил и маски TOS.
    -n (или --numeric) — выводить ip-адреса и номера портов в числовом виде, предотвращая попытки преобразовать их в символические имена.
    --line-numbers — показывать номера строк при отображении списка правил командой --list (номер строки соответствует позиции правила в цепочке). 

Действия с соединениями

    ACCEPT — пакет покидает данную цепочку и передается в следующую
    DROP — отбросить пакет, пакет не передается в следующую цепочку
    REJECT — отбросить пакет, сообщить отправителю пакета об ошибке
    SNAT — замена ip-адреса источника в пакете, в цепочках POSTROUTING и OUTPUT таблицы nat
    DNAT — замена ip-адреса назначения в пакете, в цепочке PREROUTING таблицы nat (изредка — в OUTPUT)
    LOG — записать пакет в лог-файл (отправляется демону syslog) и обработать остальными правилами
    MASQUERADE — как SNAT, но для соединений с динамическим ip-адресом, в цепочке POSTROUTING таблицы nat
    MARK — установить метку на пакет и обработать остальными правилами

Кратко о движении транзитных пакетов

	ТАБЛИЦА		ЦЕПОЧКА			ПРИМЕЧАНИЕ
	mangle		PREROUTING		обычно цепочка (Ц.) для внесения изменений в заголовки пакета (изм. битов TOS)
	nat			PREROUTING		Ц. для трансляции сетевых адресов; source NAT выполняется позднее, в др. Ц.
	----------------------------------------------------------------------------------------------------------------
	Принятие решения о дальнейшей маршрутизации (куда пойдёт пакет: локальному приложению | на др. узел
	----------------------------------------------------------------------------------------------------------------
	mangle		FORWARD			Пакет → mangle.FORWARD
	filter		FORWARD			Здесь - фильтрация транзитного трафика. Трафик через эту Ц. - в обоих направлениях
	mangle		POSTROUTING		Внесение изменений в заголовок пакета после принятого решения о маршрутизации
	nat			POSTROUTING		Ц. в первую очередь для Sources NAT. Здесь же - Masquerading

	Биты TOS (Type of Service) - набор из четырехбитных флагов в заголовке IP-пакета.
	Каждый из четырех битов имеет различную цель, и только один из TOS-битов может быть установлен в один момент времени.
	Установка любого бита = пакет может быть обработан маршрутизатором не так, как пакет со сброшенными битами TOS.
	Доступные классы обслуживания сети:
		• Minimum delay (минимальная задержка)
		• Maximum throughput (максимальная пропускная способность)
		• Maximum reliability (максимальная надёжность)
		• Minimum cost (минимальная стоимость)

Таблица Mangle (Изменённые)

	- эта таблица в основном должна использоваться для изменения пакетов.
	Можно использовать цели mangle для изменения полей TOS (Type Of Service) и т.п.
Внимание!
	Настоятельно рекомендуется не использовать эту таблицу для какой-либо фильтрации; 
	ни DNAT, ни SNAT, ни Masquerading не будут работать в этой таблице.
Следующие цели допустимы только в таблице mangle. Их нельзя использовать вне таблицы mangle:
	• TOS
	• TTL
	• MARK
	• SECMARK
	• CONNSECMARK

	* Цель TOS используется для установки и/или изменения поля Type of Service в пакете.
	Это можно использовать для настройки политик в сети относительно маршрутизации пакетов и так далее.
		! эта процедура не доведена до совершенства и на самом деле не реализована в Интернете.
		Большинство маршрутизаторов не заботятся о значении в этом поле, а иногда они ошибаются в том, что получают.
		Не рекомендуется устанавливать биты TOS это для пакетов, идущих в Интернет!
		Исключение: планируется принимать решения о маршрутизации с помощью iproute2.

	* Цель TTL используется для изменения поля TTL (Time To Live, время жизни) пакета.
	Мы могли бы указать пакетам только определенный TTL и так далее.
	Веская причина для этого: мы не хотим выдавать себя любопытным интернет-провайдерам.
	(Некоторым интернет-провайдерам не нравятся пользователи, использующие несколько компьютеров через одно соединение, 
	и есть некоторые интернет-провайдеры, которые, как известно, ищут один хост, генерирующий разные значения TTL, 
	и воспринимают это как один из многих признаков того, что несколько компьютеров подключены к одному связь.)

	* Цель MARK 
	используется для установки специальных значений меток для пакета.
	Затем эти метки могут быть распознаны программами iproute2 для выполнения различной маршрутизации пакета в зависимости от того, какая метка у них есть или нет.
	Мы также могли бы ограничить пропускную способность и организовать очередь на основе классов, основываясь на этих метках.

	* Цель SECMARK
		-может использоваться для установки меток контекста безопасности на отдельных пакетах для использования в SELinux и др. системах безопасности, способных обрабатывать эти метки.
	Затем это используется для очень тонкой защиты того, какие подсистемы системы могут касаться каких пакетов и так далее. SECMARK также может быть установлен для всего соединения с целью CONNSECMARK.

	* CONNSECMARK
		- используется для копирования контекста безопасности в/из одного пакета из/во все соединение.
		Затем это используется SELinux и другими системами безопасности для обеспечения более тонкой защиты на уровне соединения.

Таблица Nat (NAT, преобразование сетевых адресов)
	
	Эта таблица должна использоваться только для NAT (трансляции сетевых адресов) для разных пакетов.
Другими словами, его следует использовать только для перевода поля источника или поля назначения пакета.
!!! Только первый пакет в потоке попадет в эту таблицу.
После этого над остальными пакетами автоматически будут выполняться те же действия, что и над первым пакетом.
Цели, которые выполняют такие действия:
	• DNAT
	• SNAT
	• MASQUERADE
	• REDIRECT

Использование DNAT: [Public IP → LAN-host]
	• есть публичный (глобальный | внешний) IP-адрес;
	•• нужно перенаправить доступ к брандмауэру на какой-либо другой хост (например, в DMZ).
Другими словами, мы меняем адрес назначения пакета и перенаправляем его на хост.

Использование SNAT: [LAN-host → Public IP → Internet]
	используется для изменения исходного адреса пакетов (скрыть локальные сети и DMZ).
	Замена IP-адреса хоста в локальной сети на IP-адрес брандмауэра.
	Фаервол автоматически выполняет SNAT и De-SNAT → возможность устанавливать соединения LAN ↔ Internet.
	IANA резервирует несколько диапазонов IP-адресов в качестве частных/локальных/серых.
	
Использование MASQUERADE:
	используется точно так же, как SNAT, но для вычисления цели MASQUERADE требуется немного больше накладных расходов.
	__Причина__:
	MASQUERADE: каждый раз, когда MASQUERADE target попадает в пакет, она автоматически проверяет IP-адрес для использования;
	SNAT: просто использует один настроенный IP-адрес.
	
	MASQUERADE target позволяет правильно работать с ДИНАМИЧЕСКИМИ IP-адресами DHCP, которые ваш интернет-провайдер может предоставить для ваших соединений
		• PPP,
		• PPPoE или 
		• SLIP 
	с Интернетом.

Таблица Raw (Необработанная таблица)
	raw table в основном используется только для одной цели:
		для установки отметки на пакетах, что они не должны обрабатываться системой отслеживания соединений (Connection Tracking System, conntrack).
	Это делается с помощью NOTRACK target в пакете.
	Если соединение установлено с целью NOTRACK target, то conntrack просто не будет отслеживать соединение.
	Это было невозможно решить без добавления новой таблицы:
		ни одна из других таблиц не вызывается до тех пор, пока
		► conntrack не будет фактически запущен для пакетов 
		►► не будет добавлен в таблицы conntrack
			или
		►► не будет сопоставлен с уже доступным соединением
	Подробнее об этом: https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html#STATEMACHINE
	
	В этой таблице содержится всего 2 цепочки:
		• PREROUTING
		• OUTPUT
		
	Никаких других цепочек не требуется, так как это единственные места, где вы можете работать с пакетами, прежде чем они действительно попадут в отслеживание соединения.
	
Замечание:
	► Для работы этой таблицы необходимо загрузить модуль iptable_raw.
	  Он будет загружен автоматически, если iptables запускается с ключом "-t": 
		-t raw
	  и если модуль доступен.
	► raw table - относительно новое дополнение к iptables и ядру.
	  Она может быть недоступна в ранней версии 2.6 и версии 2.4 ядер.

Таблица filter
Filter table

	Таблица фильтров в основном используется для фильтрации пакетов.
	Мы можем сопоставлять пакеты и фильтровать их любым способом.
	Здесь мы фактически применяем действия к пакетам: 
		1. смотрим, что содержат пакеты
		2. применяем DROP | ACCEPT (сбрасывать | пропускать) в зависимости от их содержимого.
	Конечно, мы также можем выполнить предварительную фильтрацию; однако эта конкретная таблица является местом, для которого была разработана фильтрация.
	В этой таблице можно использовать почти все цели.
	Мы будем наиболее результативны в отношении таблицы фильтров здесь.
	

[https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html#USERTABLES]