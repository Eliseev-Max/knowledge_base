Sources:
	* https://goteleport.com/blog/ssh-config/
	** Troubleshooting: "Error: Permission denied (publickey)":
		https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey?platform=linux
	*** Generating a new SSH key and adding it to the ssh-agent
		https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
	**** Permission denied (publickey) (Bitbucket Support)
		https://confluence.atlassian.com/bbkb/permission-denied-publickey-302811860.html

	###################
	#### SSH-агент ####
	###################

ssh-agent настроен на автоматическое выполнение на Ubuntu.
Если он не запускается при входе в систему автоматически, его можно запустить вручную командой `eval`.
Пароль закрытого ключа SSH (SSH private key) может быть создан вручную пользователем, которого обслуживает ssh-agent.
Он называется агентом аутентификации.
Для аутентификации ssh-agent использует переменную окружения SSH_AUTH_SOCK.
Если эта переменная установлена правильно, то ssh-agent будет работать корректно.

Переведено с помощью www.DeepL.com/Translator (бесплатная версия)

Добавление закрытого SSH-ключа SSH-агенту 
‼ Если после добавления SSH private key в директорию ~/.ssh и создания там config файла, не удаётся пройти аутентификацию по ключу:
	1. Проверить, запущен ли ssh-agent:
		($ eval "$(ssh-agent -s)")	# команда в такой записи перестала работать
		$ eval `ssh-agent -s`		# в такой записи работает
		> Agent pid 59566			# если есть подобный вывод, агент запущен
	
	2. Добавить свой SSH private key  в ssh-agent.
		$ ssh-add ~/.ssh/name_of_private_ssh_key
		
###########################################################################################
Почему нам нужно использовать eval, а не просто ssh-agent?
(https://stackoverflow.com/questions/17846529/could-not-open-a-connection-to-your-authentication-agent)

Для использования ssh-agent в SSH необходимы две вещи:
	• экземпляр ssh-agent, запущенный в фоновом режиме, и
	• переменная окружения, указывающая SSH, какой сокет использовать для подключения к агенту (SSH_AUTH_SOCK IIRC).

Если вы просто запустите ssh-agent, то агент запустится, но SSH не будет знать, где его найти.


###########################################################################################

Настройка ssh_config
(перевод статьи: https://goteleport.com/blog/ssh-config/)
Наглядная альтернатива набору в командной строке команды на подключение к серверу по SSH:
Команда:
	$ ssh -i /users/virag/keys/us-west/ed25519 -p 1024 -l virag \ myserver.aws-west.example.com

~/.ssh/ssh_config:
	(Общий вид):
	Host [alias]
		Option1 [Value]
		Option2 [Value]
		Option3 [Value]

# Отступы созданы для удобства чтения config-файла

	(Пример использования):
	Host myserver
		Hostname myserver.aws-west.example.com
		User virag
		Port 1024
		IdentityFile /users/virag/keys/us-west/ed25519

‼ Шифрование ed25519 предпочтительней, чем RSA, DSA, ECDSA 
(→ см. статью: https://goteleport.com/blog/comparing-ssh-keys/)

Как работает ssh_config
	Клиент ssh считывает конфигурацию из трех мест в следующем порядке:
		1. Общесистемная конфигурация в /etc/ssh/ssh_config
		2. Специфическая для пользователя в вашем домашнем каталоге ~/.ssh/ssh_config
		3. Флаги командной строки, передаваемые в ssh напрямую

	Это означает, что
		параметры командной строки [3] →  могут переопределять пользовательскую конфигурацию [2] →
		пользовательская конфигурация [2] может переопределять глобальную конфигурацию [1]

	Когда параметры подключения используются многократно, часто проще определить их в ssh_config, которые автоматически применяются при подключении.
	# Подстановочные знаки также могут быть использованы как часть заголовка хоста:
	Host myserver*
		Hostname myserver1.aws-west.example.com
		User virag
		Port 1024

	Используя псевдоним myserver1, мы получаем то, что ожидаем от второй строфы.
	Но myserver2 также имеет аналогичный список опций.
	‼ Клиент ssh получает эту информацию путем сопоставления шаблонов и фиксации значений по мере последовательного чтения файла.
	Поскольку myserver2 соответствует и myserver2, и myserver*, он сначала возьмет значение Hostname из myserver2.
	Затем, когда дело доходит до второго совпадения шаблона, используются значения User и Port, но поле Hostname уже заполнено. 
	‼ ssh принимает первое значение для каждого параметра.


[
	1. SSH. Рускоязычная документация.
		https://help.ubuntu.ru/wiki/ssh

	2. SSH. Debian documentation.
		https://wiki.debian.org/SSH

	3. Настройка SSH в Debian
		https://losst.pro/nastrojka-ssh-v-debian

	####################
	Bitbucket. SSH

	4. Creating SSH keys
		https://confluence.atlassian.com/bitbucketserver068/creating-ssh-keys-981145250.html?utm_campaign=in-app-help&utm_medium=in-app-help&utm_source=stash

	5. SSH access keys for system use
		https://confluence.atlassian.com/bitbucketserver068/ssh-access-keys-for-system-use-981145263.html

	####################
	Git

	6. Cloning Files From Git into a Docker Image
		https://janakerman.co.uk/docker-git-clone/

	7. Работа с Git через консоль
		https://htmlacademy.ru/blog/git/git-console

	8. ssh-agent
		https://manpages.ubuntu.com/manpages/bionic/man1/ssh-agent.1.html

	9. How to use ssh-agent on Ubuntu
		https://linuxhint.com/ssh-agent-ubuntu/
		
	10. Git на сервере - Генерация открытого SSH ключа
	{https://git-scm.com/book/ru/v2/Git-%D0%BD%D0%B0-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B5-%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BE%D1%82%D0%BA%D1%80%D1%8B%D1%82%D0%BE%D0%B3%D0%BE-SSH-%D0%BA%D0%BB%D1%8E%D1%87%D0%B0}
]